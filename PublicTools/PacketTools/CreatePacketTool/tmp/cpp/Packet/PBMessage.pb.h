// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMessage.proto

#ifndef PROTOBUF_PBMessage_2eproto__INCLUDED
#define PROTOBUF_PBMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PBMessage_2eproto();
void protobuf_AssignDesc_PBMessage_2eproto();
void protobuf_ShutdownFile_PBMessage_2eproto();

class CG_PING;
class GC_RET_PING;
class CG_LOGIN;
class GC_LOGIN_RET;
class GC_LOGIN_QUEUE_STATUS;
class CG_CREATEROLE;
class GC_CREATEROLE_RET;
class CG_SELECTROLE;
class GC_SELECTROLE_RET;
class CG_REQ_RANDOMNAME;
class GC_RET_RANDOMNAME;
class CG_REQ_CHANGE_SCENE;
class GC_ENTER_SCENE;
class CG_ENTER_SCENE_OK;
class CG_CONNECTED_HEARTBEAT;
class GC_CONNECTED_HEARTBEAT;
class GC_NOTICE;
class GC_MISSION_SYNC_MISSIONLIST;
class CG_ACCEPTMISSION;
class GC_ACCEPTMISSION_RET;
class CG_COMPLETEMISSION;
class GC_COMPLETEMISSION_RET;
class CG_ABANDONMISSION;
class GC_ABANDONMISSION_RET;
class GC_MISSION_STATE;
class GC_MISSION_PARAM;
class GC_CREATE_PLAYER;
class GC_DELETE_OBJ;
class CG_SYNC_POS;
class GC_SYNC_POS;
class CG_MOVE;
class GC_MOVE;
class GC_STOP;
class GC_BROADCAST_ATTR;
class GC_SYN_ATTR;
class GC_SYNC_COMMONDATA;
class GC_SYNC_COMMONFLAG;
class CG_ASK_SETCOMMONFLAG;
class GC_ASK_COMMONFLAG_RET;

enum CG_LOGIN_VALIDATETYPE {
  CG_LOGIN_VALIDATETYPE_TEST = 0,
  CG_LOGIN_VALIDATETYPE_CYOU = 1
};
bool CG_LOGIN_VALIDATETYPE_IsValid(int value);
const CG_LOGIN_VALIDATETYPE CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MIN = CG_LOGIN_VALIDATETYPE_TEST;
const CG_LOGIN_VALIDATETYPE CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX = CG_LOGIN_VALIDATETYPE_CYOU;
const int CG_LOGIN_VALIDATETYPE_VALIDATETYPE_ARRAYSIZE = CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CG_LOGIN_VALIDATETYPE_descriptor();
inline const ::std::string& CG_LOGIN_VALIDATETYPE_Name(CG_LOGIN_VALIDATETYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CG_LOGIN_VALIDATETYPE_descriptor(), value);
}
inline bool CG_LOGIN_VALIDATETYPE_Parse(
    const ::std::string& name, CG_LOGIN_VALIDATETYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CG_LOGIN_VALIDATETYPE>(
    CG_LOGIN_VALIDATETYPE_descriptor(), name, value);
}
enum GC_LOGIN_RET_LOGINRESULT {
  GC_LOGIN_RET_LOGINRESULT_SUCCESS = 1,
  GC_LOGIN_RET_LOGINRESULT_ACCOUNTVERIFYFAIL = 2,
  GC_LOGIN_RET_LOGINRESULT_READROLELISTFAIL = 3,
  GC_LOGIN_RET_LOGINRESULT_ALREADYLOGIN = 4,
  GC_LOGIN_RET_LOGINRESULT_QUEUEFULL = 5,
  GC_LOGIN_RET_LOGINRESULT_NEEDFORCEENTER = 6,
  GC_LOGIN_RET_LOGINRESULT_PACKETNOTMATCH = 7,
  GC_LOGIN_RET_LOGINRESULT_VERSIONNOTMATCH = 8
};
bool GC_LOGIN_RET_LOGINRESULT_IsValid(int value);
const GC_LOGIN_RET_LOGINRESULT GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MIN = GC_LOGIN_RET_LOGINRESULT_SUCCESS;
const GC_LOGIN_RET_LOGINRESULT GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MAX = GC_LOGIN_RET_LOGINRESULT_VERSIONNOTMATCH;
const int GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_ARRAYSIZE = GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_LOGIN_RET_LOGINRESULT_descriptor();
inline const ::std::string& GC_LOGIN_RET_LOGINRESULT_Name(GC_LOGIN_RET_LOGINRESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_LOGIN_RET_LOGINRESULT_descriptor(), value);
}
inline bool GC_LOGIN_RET_LOGINRESULT_Parse(
    const ::std::string& name, GC_LOGIN_RET_LOGINRESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_LOGIN_RET_LOGINRESULT>(
    GC_LOGIN_RET_LOGINRESULT_descriptor(), name, value);
}
enum GC_LOGIN_RET_VALIDATERESULT {
  GC_LOGIN_RET_VALIDATERESULT_OK = 0,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_VALIDATETYPEERROR = 1,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_PERFORM = 2,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_OPCODE = 3,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_TAG = 4,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_STATE = 5,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_DATA_STATUS = 6,
  GC_LOGIN_RET_VALIDATERESULT_FAIL_CHANNELID = 7
};
bool GC_LOGIN_RET_VALIDATERESULT_IsValid(int value);
const GC_LOGIN_RET_VALIDATERESULT GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MIN = GC_LOGIN_RET_VALIDATERESULT_OK;
const GC_LOGIN_RET_VALIDATERESULT GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MAX = GC_LOGIN_RET_VALIDATERESULT_FAIL_CHANNELID;
const int GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_ARRAYSIZE = GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_LOGIN_RET_VALIDATERESULT_descriptor();
inline const ::std::string& GC_LOGIN_RET_VALIDATERESULT_Name(GC_LOGIN_RET_VALIDATERESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_LOGIN_RET_VALIDATERESULT_descriptor(), value);
}
inline bool GC_LOGIN_RET_VALIDATERESULT_Parse(
    const ::std::string& name, GC_LOGIN_RET_VALIDATERESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_LOGIN_RET_VALIDATERESULT>(
    GC_LOGIN_RET_VALIDATERESULT_descriptor(), name, value);
}
enum GC_LOGIN_QUEUE_STATUS_QUEUESTATUS {
  GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_BEGINQUEUE = 0,
  GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUING = 1,
  GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_ENDQUEUE = 2
};
bool GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_IsValid(int value);
const GC_LOGIN_QUEUE_STATUS_QUEUESTATUS GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_MIN = GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_BEGINQUEUE;
const GC_LOGIN_QUEUE_STATUS_QUEUESTATUS GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_MAX = GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_ENDQUEUE;
const int GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_ARRAYSIZE = GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_descriptor();
inline const ::std::string& GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_Name(GC_LOGIN_QUEUE_STATUS_QUEUESTATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_descriptor(), value);
}
inline bool GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_Parse(
    const ::std::string& name, GC_LOGIN_QUEUE_STATUS_QUEUESTATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_LOGIN_QUEUE_STATUS_QUEUESTATUS>(
    GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_descriptor(), name, value);
}
enum GC_CREATEROLE_RET_CREATEROLE_RESULT {
  GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_SUCCESS = 0,
  GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL = 1,
  GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_NAMEEXIST = 2,
  GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_NAMESCREENING = 3,
  GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_LONGNAME = 4
};
bool GC_CREATEROLE_RET_CREATEROLE_RESULT_IsValid(int value);
const GC_CREATEROLE_RET_CREATEROLE_RESULT GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_MIN = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_SUCCESS;
const GC_CREATEROLE_RET_CREATEROLE_RESULT GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_MAX = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_LONGNAME;
const int GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_ARRAYSIZE = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_CREATEROLE_RET_CREATEROLE_RESULT_descriptor();
inline const ::std::string& GC_CREATEROLE_RET_CREATEROLE_RESULT_Name(GC_CREATEROLE_RET_CREATEROLE_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_CREATEROLE_RET_CREATEROLE_RESULT_descriptor(), value);
}
inline bool GC_CREATEROLE_RET_CREATEROLE_RESULT_Parse(
    const ::std::string& name, GC_CREATEROLE_RET_CREATEROLE_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_CREATEROLE_RET_CREATEROLE_RESULT>(
    GC_CREATEROLE_RET_CREATEROLE_RESULT_descriptor(), name, value);
}
enum GC_SELECTROLE_RET_SELECTROLE_RESULT {
  GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_SUCCESS = 0,
  GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_FAIL = 1
};
bool GC_SELECTROLE_RET_SELECTROLE_RESULT_IsValid(int value);
const GC_SELECTROLE_RET_SELECTROLE_RESULT GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_MIN = GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_SUCCESS;
const GC_SELECTROLE_RET_SELECTROLE_RESULT GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_MAX = GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_FAIL;
const int GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_ARRAYSIZE = GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* GC_SELECTROLE_RET_SELECTROLE_RESULT_descriptor();
inline const ::std::string& GC_SELECTROLE_RET_SELECTROLE_RESULT_Name(GC_SELECTROLE_RET_SELECTROLE_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    GC_SELECTROLE_RET_SELECTROLE_RESULT_descriptor(), value);
}
inline bool GC_SELECTROLE_RET_SELECTROLE_RESULT_Parse(
    const ::std::string& name, GC_SELECTROLE_RET_SELECTROLE_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GC_SELECTROLE_RET_SELECTROLE_RESULT>(
    GC_SELECTROLE_RET_SELECTROLE_RESULT_descriptor(), name, value);
}
enum CG_REQ_CHANGE_SCENE_CHANGETYPE {
  CG_REQ_CHANGE_SCENE_CHANGETYPE_TELEPORT = 0,
  CG_REQ_CHANGE_SCENE_CHANGETYPE_WORLDMAP = 1,
  CG_REQ_CHANGE_SCENE_CHANGETYPE_TRAIL = 2,
  CG_REQ_CHANGE_SCENE_CHANGETYPE_POINT = 3
};
bool CG_REQ_CHANGE_SCENE_CHANGETYPE_IsValid(int value);
const CG_REQ_CHANGE_SCENE_CHANGETYPE CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_MIN = CG_REQ_CHANGE_SCENE_CHANGETYPE_TELEPORT;
const CG_REQ_CHANGE_SCENE_CHANGETYPE CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_MAX = CG_REQ_CHANGE_SCENE_CHANGETYPE_POINT;
const int CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_ARRAYSIZE = CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* CG_REQ_CHANGE_SCENE_CHANGETYPE_descriptor();
inline const ::std::string& CG_REQ_CHANGE_SCENE_CHANGETYPE_Name(CG_REQ_CHANGE_SCENE_CHANGETYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CG_REQ_CHANGE_SCENE_CHANGETYPE_descriptor(), value);
}
inline bool CG_REQ_CHANGE_SCENE_CHANGETYPE_Parse(
    const ::std::string& name, CG_REQ_CHANGE_SCENE_CHANGETYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CG_REQ_CHANGE_SCENE_CHANGETYPE>(
    CG_REQ_CHANGE_SCENE_CHANGETYPE_descriptor(), name, value);
}
// ===================================================================

class CG_PING : public ::google::protobuf::Message {
 public:
  CG_PING();
  virtual ~CG_PING();

  CG_PING(const CG_PING& from);

  inline CG_PING& operator=(const CG_PING& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_PING& default_instance();

  void Swap(CG_PING* other);

  // implements Message ----------------------------------------------

  CG_PING* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_PING& from);
  void MergeFrom(const CG_PING& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 noparam = 1;
  inline bool has_noparam() const;
  inline void clear_noparam();
  static const int kNoparamFieldNumber = 1;
  inline ::google::protobuf::int32 noparam() const;
  inline void set_noparam(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_PING)
 private:
  inline void set_has_noparam();
  inline void clear_has_noparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 noparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_PING* default_instance_;
};
// -------------------------------------------------------------------

class GC_RET_PING : public ::google::protobuf::Message {
 public:
  GC_RET_PING();
  virtual ~GC_RET_PING();

  GC_RET_PING(const GC_RET_PING& from);

  inline GC_RET_PING& operator=(const GC_RET_PING& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_RET_PING& default_instance();

  void Swap(GC_RET_PING* other);

  // implements Message ----------------------------------------------

  GC_RET_PING* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_RET_PING& from);
  void MergeFrom(const GC_RET_PING& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 noparam = 1;
  inline bool has_noparam() const;
  inline void clear_noparam();
  static const int kNoparamFieldNumber = 1;
  inline ::google::protobuf::int32 noparam() const;
  inline void set_noparam(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_RET_PING)
 private:
  inline void set_has_noparam();
  inline void clear_has_noparam();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 noparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_RET_PING* default_instance_;
};
// -------------------------------------------------------------------

class CG_LOGIN : public ::google::protobuf::Message {
 public:
  CG_LOGIN();
  virtual ~CG_LOGIN();

  CG_LOGIN(const CG_LOGIN& from);

  inline CG_LOGIN& operator=(const CG_LOGIN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_LOGIN& default_instance();

  void Swap(CG_LOGIN* other);

  // implements Message ----------------------------------------------

  CG_LOGIN* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_LOGIN& from);
  void MergeFrom(const CG_LOGIN& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CG_LOGIN_VALIDATETYPE VALIDATETYPE;
  static const VALIDATETYPE TEST = CG_LOGIN_VALIDATETYPE_TEST;
  static const VALIDATETYPE CYOU = CG_LOGIN_VALIDATETYPE_CYOU;
  static inline bool VALIDATETYPE_IsValid(int value) {
    return CG_LOGIN_VALIDATETYPE_IsValid(value);
  }
  static const VALIDATETYPE VALIDATETYPE_MIN =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MIN;
  static const VALIDATETYPE VALIDATETYPE_MAX =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_MAX;
  static const int VALIDATETYPE_ARRAYSIZE =
    CG_LOGIN_VALIDATETYPE_VALIDATETYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VALIDATETYPE_descriptor() {
    return CG_LOGIN_VALIDATETYPE_descriptor();
  }
  static inline const ::std::string& VALIDATETYPE_Name(VALIDATETYPE value) {
    return CG_LOGIN_VALIDATETYPE_Name(value);
  }
  static inline bool VALIDATETYPE_Parse(const ::std::string& name,
      VALIDATETYPE* value) {
    return CG_LOGIN_VALIDATETYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 vtype = 1;
  inline bool has_vtype() const;
  inline void clear_vtype();
  static const int kVtypeFieldNumber = 1;
  inline ::google::protobuf::int32 vtype() const;
  inline void set_vtype(::google::protobuf::int32 value);

  // required int32 gameversion = 2;
  inline bool has_gameversion() const;
  inline void clear_gameversion();
  static const int kGameversionFieldNumber = 2;
  inline ::google::protobuf::int32 gameversion() const;
  inline void set_gameversion(::google::protobuf::int32 value);

  // required int32 programversion = 3;
  inline bool has_programversion() const;
  inline void clear_programversion();
  static const int kProgramversionFieldNumber = 3;
  inline ::google::protobuf::int32 programversion() const;
  inline void set_programversion(::google::protobuf::int32 value);

  // required int32 publicresourceversion = 4;
  inline bool has_publicresourceversion() const;
  inline void clear_publicresourceversion();
  static const int kPublicresourceversionFieldNumber = 4;
  inline ::google::protobuf::int32 publicresourceversion() const;
  inline void set_publicresourceversion(::google::protobuf::int32 value);

  // required int32 maxpacketid = 5;
  inline bool has_maxpacketid() const;
  inline void clear_maxpacketid();
  static const int kMaxpacketidFieldNumber = 5;
  inline ::google::protobuf::int32 maxpacketid() const;
  inline void set_maxpacketid(::google::protobuf::int32 value);

  // required int32 forceenter = 6;
  inline bool has_forceenter() const;
  inline void clear_forceenter();
  static const int kForceenterFieldNumber = 6;
  inline ::google::protobuf::int32 forceenter() const;
  inline void set_forceenter(::google::protobuf::int32 value);

  // required string deviceid = 7;
  inline bool has_deviceid() const;
  inline void clear_deviceid();
  static const int kDeviceidFieldNumber = 7;
  inline const ::std::string& deviceid() const;
  inline void set_deviceid(const ::std::string& value);
  inline void set_deviceid(const char* value);
  inline void set_deviceid(const char* value, size_t size);
  inline ::std::string* mutable_deviceid();
  inline ::std::string* release_deviceid();
  inline void set_allocated_deviceid(::std::string* deviceid);

  // required string devicetype = 8;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDevicetypeFieldNumber = 8;
  inline const ::std::string& devicetype() const;
  inline void set_devicetype(const ::std::string& value);
  inline void set_devicetype(const char* value);
  inline void set_devicetype(const char* value, size_t size);
  inline ::std::string* mutable_devicetype();
  inline ::std::string* release_devicetype();
  inline void set_allocated_devicetype(::std::string* devicetype);

  // required string deviceversion = 9;
  inline bool has_deviceversion() const;
  inline void clear_deviceversion();
  static const int kDeviceversionFieldNumber = 9;
  inline const ::std::string& deviceversion() const;
  inline void set_deviceversion(const ::std::string& value);
  inline void set_deviceversion(const char* value);
  inline void set_deviceversion(const char* value, size_t size);
  inline ::std::string* mutable_deviceversion();
  inline ::std::string* release_deviceversion();
  inline void set_allocated_deviceversion(::std::string* deviceversion);

  // required string account = 10;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 10;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // required string validateinfo = 11;
  inline bool has_validateinfo() const;
  inline void clear_validateinfo();
  static const int kValidateinfoFieldNumber = 11;
  inline const ::std::string& validateinfo() const;
  inline void set_validateinfo(const ::std::string& value);
  inline void set_validateinfo(const char* value);
  inline void set_validateinfo(const char* value, size_t size);
  inline ::std::string* mutable_validateinfo();
  inline ::std::string* release_validateinfo();
  inline void set_allocated_validateinfo(::std::string* validateinfo);

  // required string channelid = 12;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 12;
  inline const ::std::string& channelid() const;
  inline void set_channelid(const ::std::string& value);
  inline void set_channelid(const char* value);
  inline void set_channelid(const char* value, size_t size);
  inline ::std::string* mutable_channelid();
  inline ::std::string* release_channelid();
  inline void set_allocated_channelid(::std::string* channelid);

  // required string mediachannel = 13;
  inline bool has_mediachannel() const;
  inline void clear_mediachannel();
  static const int kMediachannelFieldNumber = 13;
  inline const ::std::string& mediachannel() const;
  inline void set_mediachannel(const ::std::string& value);
  inline void set_mediachannel(const char* value);
  inline void set_mediachannel(const char* value, size_t size);
  inline ::std::string* mutable_mediachannel();
  inline ::std::string* release_mediachannel();
  inline void set_allocated_mediachannel(::std::string* mediachannel);

  // required int32 rapidvalidatecode = 14;
  inline bool has_rapidvalidatecode() const;
  inline void clear_rapidvalidatecode();
  static const int kRapidvalidatecodeFieldNumber = 14;
  inline ::google::protobuf::int32 rapidvalidatecode() const;
  inline void set_rapidvalidatecode(::google::protobuf::int32 value);

  // required int32 reservedint1 = 15;
  inline bool has_reservedint1() const;
  inline void clear_reservedint1();
  static const int kReservedint1FieldNumber = 15;
  inline ::google::protobuf::int32 reservedint1() const;
  inline void set_reservedint1(::google::protobuf::int32 value);

  // required int32 reservedint2 = 16;
  inline bool has_reservedint2() const;
  inline void clear_reservedint2();
  static const int kReservedint2FieldNumber = 16;
  inline ::google::protobuf::int32 reservedint2() const;
  inline void set_reservedint2(::google::protobuf::int32 value);

  // required int32 reservedint3 = 17;
  inline bool has_reservedint3() const;
  inline void clear_reservedint3();
  static const int kReservedint3FieldNumber = 17;
  inline ::google::protobuf::int32 reservedint3() const;
  inline void set_reservedint3(::google::protobuf::int32 value);

  // required int32 reservedint4 = 18;
  inline bool has_reservedint4() const;
  inline void clear_reservedint4();
  static const int kReservedint4FieldNumber = 18;
  inline ::google::protobuf::int32 reservedint4() const;
  inline void set_reservedint4(::google::protobuf::int32 value);

  // required string reservedstring1 = 19;
  inline bool has_reservedstring1() const;
  inline void clear_reservedstring1();
  static const int kReservedstring1FieldNumber = 19;
  inline const ::std::string& reservedstring1() const;
  inline void set_reservedstring1(const ::std::string& value);
  inline void set_reservedstring1(const char* value);
  inline void set_reservedstring1(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring1();
  inline ::std::string* release_reservedstring1();
  inline void set_allocated_reservedstring1(::std::string* reservedstring1);

  // required string reservedstring2 = 20;
  inline bool has_reservedstring2() const;
  inline void clear_reservedstring2();
  static const int kReservedstring2FieldNumber = 20;
  inline const ::std::string& reservedstring2() const;
  inline void set_reservedstring2(const ::std::string& value);
  inline void set_reservedstring2(const char* value);
  inline void set_reservedstring2(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring2();
  inline ::std::string* release_reservedstring2();
  inline void set_allocated_reservedstring2(::std::string* reservedstring2);

  // required string reservedstring3 = 21;
  inline bool has_reservedstring3() const;
  inline void clear_reservedstring3();
  static const int kReservedstring3FieldNumber = 21;
  inline const ::std::string& reservedstring3() const;
  inline void set_reservedstring3(const ::std::string& value);
  inline void set_reservedstring3(const char* value);
  inline void set_reservedstring3(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring3();
  inline ::std::string* release_reservedstring3();
  inline void set_allocated_reservedstring3(::std::string* reservedstring3);

  // required string reservedstring4 = 22;
  inline bool has_reservedstring4() const;
  inline void clear_reservedstring4();
  static const int kReservedstring4FieldNumber = 22;
  inline const ::std::string& reservedstring4() const;
  inline void set_reservedstring4(const ::std::string& value);
  inline void set_reservedstring4(const char* value);
  inline void set_reservedstring4(const char* value, size_t size);
  inline ::std::string* mutable_reservedstring4();
  inline ::std::string* release_reservedstring4();
  inline void set_allocated_reservedstring4(::std::string* reservedstring4);

  // @@protoc_insertion_point(class_scope:CG_LOGIN)
 private:
  inline void set_has_vtype();
  inline void clear_has_vtype();
  inline void set_has_gameversion();
  inline void clear_has_gameversion();
  inline void set_has_programversion();
  inline void clear_has_programversion();
  inline void set_has_publicresourceversion();
  inline void clear_has_publicresourceversion();
  inline void set_has_maxpacketid();
  inline void clear_has_maxpacketid();
  inline void set_has_forceenter();
  inline void clear_has_forceenter();
  inline void set_has_deviceid();
  inline void clear_has_deviceid();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_deviceversion();
  inline void clear_has_deviceversion();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_validateinfo();
  inline void clear_has_validateinfo();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_mediachannel();
  inline void clear_has_mediachannel();
  inline void set_has_rapidvalidatecode();
  inline void clear_has_rapidvalidatecode();
  inline void set_has_reservedint1();
  inline void clear_has_reservedint1();
  inline void set_has_reservedint2();
  inline void clear_has_reservedint2();
  inline void set_has_reservedint3();
  inline void clear_has_reservedint3();
  inline void set_has_reservedint4();
  inline void clear_has_reservedint4();
  inline void set_has_reservedstring1();
  inline void clear_has_reservedstring1();
  inline void set_has_reservedstring2();
  inline void clear_has_reservedstring2();
  inline void set_has_reservedstring3();
  inline void clear_has_reservedstring3();
  inline void set_has_reservedstring4();
  inline void clear_has_reservedstring4();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 vtype_;
  ::google::protobuf::int32 gameversion_;
  ::google::protobuf::int32 programversion_;
  ::google::protobuf::int32 publicresourceversion_;
  ::google::protobuf::int32 maxpacketid_;
  ::google::protobuf::int32 forceenter_;
  ::std::string* deviceid_;
  ::std::string* devicetype_;
  ::std::string* deviceversion_;
  ::std::string* account_;
  ::std::string* validateinfo_;
  ::std::string* channelid_;
  ::std::string* mediachannel_;
  ::google::protobuf::int32 rapidvalidatecode_;
  ::google::protobuf::int32 reservedint1_;
  ::google::protobuf::int32 reservedint2_;
  ::google::protobuf::int32 reservedint3_;
  ::std::string* reservedstring1_;
  ::std::string* reservedstring2_;
  ::std::string* reservedstring3_;
  ::std::string* reservedstring4_;
  ::google::protobuf::int32 reservedint4_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(22 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_LOGIN* default_instance_;
};
// -------------------------------------------------------------------

class GC_LOGIN_RET : public ::google::protobuf::Message {
 public:
  GC_LOGIN_RET();
  virtual ~GC_LOGIN_RET();

  GC_LOGIN_RET(const GC_LOGIN_RET& from);

  inline GC_LOGIN_RET& operator=(const GC_LOGIN_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_LOGIN_RET& default_instance();

  void Swap(GC_LOGIN_RET* other);

  // implements Message ----------------------------------------------

  GC_LOGIN_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_LOGIN_RET& from);
  void MergeFrom(const GC_LOGIN_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GC_LOGIN_RET_LOGINRESULT LOGINRESULT;
  static const LOGINRESULT SUCCESS = GC_LOGIN_RET_LOGINRESULT_SUCCESS;
  static const LOGINRESULT ACCOUNTVERIFYFAIL = GC_LOGIN_RET_LOGINRESULT_ACCOUNTVERIFYFAIL;
  static const LOGINRESULT READROLELISTFAIL = GC_LOGIN_RET_LOGINRESULT_READROLELISTFAIL;
  static const LOGINRESULT ALREADYLOGIN = GC_LOGIN_RET_LOGINRESULT_ALREADYLOGIN;
  static const LOGINRESULT QUEUEFULL = GC_LOGIN_RET_LOGINRESULT_QUEUEFULL;
  static const LOGINRESULT NEEDFORCEENTER = GC_LOGIN_RET_LOGINRESULT_NEEDFORCEENTER;
  static const LOGINRESULT PACKETNOTMATCH = GC_LOGIN_RET_LOGINRESULT_PACKETNOTMATCH;
  static const LOGINRESULT VERSIONNOTMATCH = GC_LOGIN_RET_LOGINRESULT_VERSIONNOTMATCH;
  static inline bool LOGINRESULT_IsValid(int value) {
    return GC_LOGIN_RET_LOGINRESULT_IsValid(value);
  }
  static const LOGINRESULT LOGINRESULT_MIN =
    GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MIN;
  static const LOGINRESULT LOGINRESULT_MAX =
    GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_MAX;
  static const int LOGINRESULT_ARRAYSIZE =
    GC_LOGIN_RET_LOGINRESULT_LOGINRESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LOGINRESULT_descriptor() {
    return GC_LOGIN_RET_LOGINRESULT_descriptor();
  }
  static inline const ::std::string& LOGINRESULT_Name(LOGINRESULT value) {
    return GC_LOGIN_RET_LOGINRESULT_Name(value);
  }
  static inline bool LOGINRESULT_Parse(const ::std::string& name,
      LOGINRESULT* value) {
    return GC_LOGIN_RET_LOGINRESULT_Parse(name, value);
  }

  typedef GC_LOGIN_RET_VALIDATERESULT VALIDATERESULT;
  static const VALIDATERESULT OK = GC_LOGIN_RET_VALIDATERESULT_OK;
  static const VALIDATERESULT FAIL_VALIDATETYPEERROR = GC_LOGIN_RET_VALIDATERESULT_FAIL_VALIDATETYPEERROR;
  static const VALIDATERESULT FAIL_PERFORM = GC_LOGIN_RET_VALIDATERESULT_FAIL_PERFORM;
  static const VALIDATERESULT FAIL_OPCODE = GC_LOGIN_RET_VALIDATERESULT_FAIL_OPCODE;
  static const VALIDATERESULT FAIL_TAG = GC_LOGIN_RET_VALIDATERESULT_FAIL_TAG;
  static const VALIDATERESULT FAIL_STATE = GC_LOGIN_RET_VALIDATERESULT_FAIL_STATE;
  static const VALIDATERESULT FAIL_DATA_STATUS = GC_LOGIN_RET_VALIDATERESULT_FAIL_DATA_STATUS;
  static const VALIDATERESULT FAIL_CHANNELID = GC_LOGIN_RET_VALIDATERESULT_FAIL_CHANNELID;
  static inline bool VALIDATERESULT_IsValid(int value) {
    return GC_LOGIN_RET_VALIDATERESULT_IsValid(value);
  }
  static const VALIDATERESULT VALIDATERESULT_MIN =
    GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MIN;
  static const VALIDATERESULT VALIDATERESULT_MAX =
    GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_MAX;
  static const int VALIDATERESULT_ARRAYSIZE =
    GC_LOGIN_RET_VALIDATERESULT_VALIDATERESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VALIDATERESULT_descriptor() {
    return GC_LOGIN_RET_VALIDATERESULT_descriptor();
  }
  static inline const ::std::string& VALIDATERESULT_Name(VALIDATERESULT value) {
    return GC_LOGIN_RET_VALIDATERESULT_Name(value);
  }
  static inline bool VALIDATERESULT_Parse(const ::std::string& name,
      VALIDATERESULT* value) {
    return GC_LOGIN_RET_VALIDATERESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 validateresult = 2;
  inline bool has_validateresult() const;
  inline void clear_validateresult();
  static const int kValidateresultFieldNumber = 2;
  inline ::google::protobuf::int32 validateresult() const;
  inline void set_validateresult(::google::protobuf::int32 value);

  // required string userid = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 3;
  inline const ::std::string& userid() const;
  inline void set_userid(const ::std::string& value);
  inline void set_userid(const char* value);
  inline void set_userid(const char* value, size_t size);
  inline ::std::string* mutable_userid();
  inline ::std::string* release_userid();
  inline void set_allocated_userid(::std::string* userid);

  // required string oid = 4;
  inline bool has_oid() const;
  inline void clear_oid();
  static const int kOidFieldNumber = 4;
  inline const ::std::string& oid() const;
  inline void set_oid(const ::std::string& value);
  inline void set_oid(const char* value);
  inline void set_oid(const char* value, size_t size);
  inline ::std::string* mutable_oid();
  inline ::std::string* release_oid();
  inline void set_allocated_oid(::std::string* oid);

  // required string accesstoken = 5;
  inline bool has_accesstoken() const;
  inline void clear_accesstoken();
  static const int kAccesstokenFieldNumber = 5;
  inline const ::std::string& accesstoken() const;
  inline void set_accesstoken(const ::std::string& value);
  inline void set_accesstoken(const char* value);
  inline void set_accesstoken(const char* value, size_t size);
  inline ::std::string* mutable_accesstoken();
  inline ::std::string* release_accesstoken();
  inline void set_allocated_accesstoken(::std::string* accesstoken);

  // required int32 rapidvalidatecode = 6;
  inline bool has_rapidvalidatecode() const;
  inline void clear_rapidvalidatecode();
  static const int kRapidvalidatecodeFieldNumber = 6;
  inline ::google::protobuf::int32 rapidvalidatecode() const;
  inline void set_rapidvalidatecode(::google::protobuf::int32 value);

  // repeated uint64 roleGUIDList = 7;
  inline int roleguidlist_size() const;
  inline void clear_roleguidlist();
  static const int kRoleGUIDListFieldNumber = 7;
  inline ::google::protobuf::uint64 roleguidlist(int index) const;
  inline void set_roleguidlist(int index, ::google::protobuf::uint64 value);
  inline void add_roleguidlist(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roleguidlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roleguidlist();

  // repeated int32 roleTypeList = 8;
  inline int roletypelist_size() const;
  inline void clear_roletypelist();
  static const int kRoleTypeListFieldNumber = 8;
  inline ::google::protobuf::int32 roletypelist(int index) const;
  inline void set_roletypelist(int index, ::google::protobuf::int32 value);
  inline void add_roletypelist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roletypelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roletypelist();

  // repeated string playerNameList = 9;
  inline int playernamelist_size() const;
  inline void clear_playernamelist();
  static const int kPlayerNameListFieldNumber = 9;
  inline const ::std::string& playernamelist(int index) const;
  inline ::std::string* mutable_playernamelist(int index);
  inline void set_playernamelist(int index, const ::std::string& value);
  inline void set_playernamelist(int index, const char* value);
  inline void set_playernamelist(int index, const char* value, size_t size);
  inline ::std::string* add_playernamelist();
  inline void add_playernamelist(const ::std::string& value);
  inline void add_playernamelist(const char* value);
  inline void add_playernamelist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& playernamelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_playernamelist();

  // repeated int32 roleLevelList = 10;
  inline int rolelevellist_size() const;
  inline void clear_rolelevellist();
  static const int kRoleLevelListFieldNumber = 10;
  inline ::google::protobuf::int32 rolelevellist(int index) const;
  inline void set_rolelevellist(int index, ::google::protobuf::int32 value);
  inline void add_rolelevellist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rolelevellist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rolelevellist();

  // repeated int32 ModelVisualID = 11;
  inline int modelvisualid_size() const;
  inline void clear_modelvisualid();
  static const int kModelVisualIDFieldNumber = 11;
  inline ::google::protobuf::int32 modelvisualid(int index) const;
  inline void set_modelvisualid(int index, ::google::protobuf::int32 value);
  inline void add_modelvisualid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      modelvisualid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_modelvisualid();

  // repeated int32 WeaponID = 12;
  inline int weaponid_size() const;
  inline void clear_weaponid();
  static const int kWeaponIDFieldNumber = 12;
  inline ::google::protobuf::int32 weaponid(int index) const;
  inline void set_weaponid(int index, ::google::protobuf::int32 value);
  inline void add_weaponid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weaponid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weaponid();

  // repeated int32 WeaponEffectGem = 13;
  inline int weaponeffectgem_size() const;
  inline void clear_weaponeffectgem();
  static const int kWeaponEffectGemFieldNumber = 13;
  inline ::google::protobuf::int32 weaponeffectgem(int index) const;
  inline void set_weaponeffectgem(int index, ::google::protobuf::int32 value);
  inline void add_weaponeffectgem(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      weaponeffectgem() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_weaponeffectgem();

  // @@protoc_insertion_point(class_scope:GC_LOGIN_RET)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_validateresult();
  inline void clear_has_validateresult();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_oid();
  inline void clear_has_oid();
  inline void set_has_accesstoken();
  inline void clear_has_accesstoken();
  inline void set_has_rapidvalidatecode();
  inline void clear_has_rapidvalidatecode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 validateresult_;
  ::std::string* userid_;
  ::std::string* oid_;
  ::std::string* accesstoken_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roleguidlist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roletypelist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> playernamelist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rolelevellist_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > modelvisualid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weaponid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > weaponeffectgem_;
  ::google::protobuf::int32 rapidvalidatecode_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_LOGIN_RET* default_instance_;
};
// -------------------------------------------------------------------

class GC_LOGIN_QUEUE_STATUS : public ::google::protobuf::Message {
 public:
  GC_LOGIN_QUEUE_STATUS();
  virtual ~GC_LOGIN_QUEUE_STATUS();

  GC_LOGIN_QUEUE_STATUS(const GC_LOGIN_QUEUE_STATUS& from);

  inline GC_LOGIN_QUEUE_STATUS& operator=(const GC_LOGIN_QUEUE_STATUS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_LOGIN_QUEUE_STATUS& default_instance();

  void Swap(GC_LOGIN_QUEUE_STATUS* other);

  // implements Message ----------------------------------------------

  GC_LOGIN_QUEUE_STATUS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_LOGIN_QUEUE_STATUS& from);
  void MergeFrom(const GC_LOGIN_QUEUE_STATUS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GC_LOGIN_QUEUE_STATUS_QUEUESTATUS QUEUESTATUS;
  static const QUEUESTATUS BEGINQUEUE = GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_BEGINQUEUE;
  static const QUEUESTATUS QUEUING = GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUING;
  static const QUEUESTATUS ENDQUEUE = GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_ENDQUEUE;
  static inline bool QUEUESTATUS_IsValid(int value) {
    return GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_IsValid(value);
  }
  static const QUEUESTATUS QUEUESTATUS_MIN =
    GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_MIN;
  static const QUEUESTATUS QUEUESTATUS_MAX =
    GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_MAX;
  static const int QUEUESTATUS_ARRAYSIZE =
    GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_QUEUESTATUS_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  QUEUESTATUS_descriptor() {
    return GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_descriptor();
  }
  static inline const ::std::string& QUEUESTATUS_Name(QUEUESTATUS value) {
    return GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_Name(value);
  }
  static inline bool QUEUESTATUS_Parse(const ::std::string& name,
      QUEUESTATUS* value) {
    return GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_LOGIN_QUEUE_STATUS)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_index();
  inline void clear_has_index();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 index_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_LOGIN_QUEUE_STATUS* default_instance_;
};
// -------------------------------------------------------------------

class CG_CREATEROLE : public ::google::protobuf::Message {
 public:
  CG_CREATEROLE();
  virtual ~CG_CREATEROLE();

  CG_CREATEROLE(const CG_CREATEROLE& from);

  inline CG_CREATEROLE& operator=(const CG_CREATEROLE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_CREATEROLE& default_instance();

  void Swap(CG_CREATEROLE* other);

  // implements Message ----------------------------------------------

  CG_CREATEROLE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_CREATEROLE& from);
  void MergeFrom(const CG_CREATEROLE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:CG_CREATEROLE)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_CREATEROLE* default_instance_;
};
// -------------------------------------------------------------------

class GC_CREATEROLE_RET : public ::google::protobuf::Message {
 public:
  GC_CREATEROLE_RET();
  virtual ~GC_CREATEROLE_RET();

  GC_CREATEROLE_RET(const GC_CREATEROLE_RET& from);

  inline GC_CREATEROLE_RET& operator=(const GC_CREATEROLE_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_CREATEROLE_RET& default_instance();

  void Swap(GC_CREATEROLE_RET* other);

  // implements Message ----------------------------------------------

  GC_CREATEROLE_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_CREATEROLE_RET& from);
  void MergeFrom(const GC_CREATEROLE_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GC_CREATEROLE_RET_CREATEROLE_RESULT CREATEROLE_RESULT;
  static const CREATEROLE_RESULT CREATEROLE_SUCCESS = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_SUCCESS;
  static const CREATEROLE_RESULT CREATEROLE_FAIL = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL;
  static const CREATEROLE_RESULT CREATEROLE_FAIL_NAMEEXIST = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_NAMEEXIST;
  static const CREATEROLE_RESULT CREATEROLE_FAIL_NAMESCREENING = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_NAMESCREENING;
  static const CREATEROLE_RESULT CREATEROLE_FAIL_LONGNAME = GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_FAIL_LONGNAME;
  static inline bool CREATEROLE_RESULT_IsValid(int value) {
    return GC_CREATEROLE_RET_CREATEROLE_RESULT_IsValid(value);
  }
  static const CREATEROLE_RESULT CREATEROLE_RESULT_MIN =
    GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_MIN;
  static const CREATEROLE_RESULT CREATEROLE_RESULT_MAX =
    GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_MAX;
  static const int CREATEROLE_RESULT_ARRAYSIZE =
    GC_CREATEROLE_RET_CREATEROLE_RESULT_CREATEROLE_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CREATEROLE_RESULT_descriptor() {
    return GC_CREATEROLE_RET_CREATEROLE_RESULT_descriptor();
  }
  static inline const ::std::string& CREATEROLE_RESULT_Name(CREATEROLE_RESULT value) {
    return GC_CREATEROLE_RET_CREATEROLE_RESULT_Name(value);
  }
  static inline bool CREATEROLE_RESULT_Parse(const ::std::string& name,
      CREATEROLE_RESULT* value) {
    return GC_CREATEROLE_RET_CREATEROLE_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required int32 profession = 2;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 2;
  inline ::google::protobuf::int32 profession() const;
  inline void set_profession(::google::protobuf::int32 value);

  // required uint64 playerGuid = 3;
  inline bool has_playerguid() const;
  inline void clear_playerguid();
  static const int kPlayerGuidFieldNumber = 3;
  inline ::google::protobuf::uint64 playerguid() const;
  inline void set_playerguid(::google::protobuf::uint64 value);

  // required string playerName = 4;
  inline bool has_playername() const;
  inline void clear_playername();
  static const int kPlayerNameFieldNumber = 4;
  inline const ::std::string& playername() const;
  inline void set_playername(const ::std::string& value);
  inline void set_playername(const char* value);
  inline void set_playername(const char* value, size_t size);
  inline ::std::string* mutable_playername();
  inline ::std::string* release_playername();
  inline void set_allocated_playername(::std::string* playername);

  // @@protoc_insertion_point(class_scope:GC_CREATEROLE_RET)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_playerguid();
  inline void clear_has_playerguid();
  inline void set_has_playername();
  inline void clear_has_playername();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 profession_;
  ::google::protobuf::uint64 playerguid_;
  ::std::string* playername_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_CREATEROLE_RET* default_instance_;
};
// -------------------------------------------------------------------

class CG_SELECTROLE : public ::google::protobuf::Message {
 public:
  CG_SELECTROLE();
  virtual ~CG_SELECTROLE();

  CG_SELECTROLE(const CG_SELECTROLE& from);

  inline CG_SELECTROLE& operator=(const CG_SELECTROLE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_SELECTROLE& default_instance();

  void Swap(CG_SELECTROLE* other);

  // implements Message ----------------------------------------------

  CG_SELECTROLE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_SELECTROLE& from);
  void MergeFrom(const CG_SELECTROLE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roleGUID = 1;
  inline bool has_roleguid() const;
  inline void clear_roleguid();
  static const int kRoleGUIDFieldNumber = 1;
  inline ::google::protobuf::uint64 roleguid() const;
  inline void set_roleguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CG_SELECTROLE)
 private:
  inline void set_has_roleguid();
  inline void clear_has_roleguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roleguid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_SELECTROLE* default_instance_;
};
// -------------------------------------------------------------------

class GC_SELECTROLE_RET : public ::google::protobuf::Message {
 public:
  GC_SELECTROLE_RET();
  virtual ~GC_SELECTROLE_RET();

  GC_SELECTROLE_RET(const GC_SELECTROLE_RET& from);

  inline GC_SELECTROLE_RET& operator=(const GC_SELECTROLE_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_SELECTROLE_RET& default_instance();

  void Swap(GC_SELECTROLE_RET* other);

  // implements Message ----------------------------------------------

  GC_SELECTROLE_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_SELECTROLE_RET& from);
  void MergeFrom(const GC_SELECTROLE_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GC_SELECTROLE_RET_SELECTROLE_RESULT SELECTROLE_RESULT;
  static const SELECTROLE_RESULT SELECTROLE_SUCCESS = GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_SUCCESS;
  static const SELECTROLE_RESULT SELECTROLE_FAIL = GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_FAIL;
  static inline bool SELECTROLE_RESULT_IsValid(int value) {
    return GC_SELECTROLE_RET_SELECTROLE_RESULT_IsValid(value);
  }
  static const SELECTROLE_RESULT SELECTROLE_RESULT_MIN =
    GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_MIN;
  static const SELECTROLE_RESULT SELECTROLE_RESULT_MAX =
    GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_MAX;
  static const int SELECTROLE_RESULT_ARRAYSIZE =
    GC_SELECTROLE_RET_SELECTROLE_RESULT_SELECTROLE_RESULT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SELECTROLE_RESULT_descriptor() {
    return GC_SELECTROLE_RET_SELECTROLE_RESULT_descriptor();
  }
  static inline const ::std::string& SELECTROLE_RESULT_Name(SELECTROLE_RESULT value) {
    return GC_SELECTROLE_RET_SELECTROLE_RESULT_Name(value);
  }
  static inline bool SELECTROLE_RESULT_Parse(const ::std::string& name,
      SELECTROLE_RESULT* value) {
    return GC_SELECTROLE_RET_SELECTROLE_RESULT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // required uint64 playerGuid = 2;
  inline bool has_playerguid() const;
  inline void clear_playerguid();
  static const int kPlayerGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 playerguid() const;
  inline void set_playerguid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GC_SELECTROLE_RET)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_playerguid();
  inline void clear_has_playerguid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 playerguid_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_SELECTROLE_RET* default_instance_;
};
// -------------------------------------------------------------------

class CG_REQ_RANDOMNAME : public ::google::protobuf::Message {
 public:
  CG_REQ_RANDOMNAME();
  virtual ~CG_REQ_RANDOMNAME();

  CG_REQ_RANDOMNAME(const CG_REQ_RANDOMNAME& from);

  inline CG_REQ_RANDOMNAME& operator=(const CG_REQ_RANDOMNAME& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_REQ_RANDOMNAME& default_instance();

  void Swap(CG_REQ_RANDOMNAME* other);

  // implements Message ----------------------------------------------

  CG_REQ_RANDOMNAME* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_REQ_RANDOMNAME& from);
  void MergeFrom(const CG_REQ_RANDOMNAME& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 none = 1;
  inline bool has_none() const;
  inline void clear_none();
  static const int kNoneFieldNumber = 1;
  inline ::google::protobuf::int32 none() const;
  inline void set_none(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_REQ_RANDOMNAME)
 private:
  inline void set_has_none();
  inline void clear_has_none();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 none_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_REQ_RANDOMNAME* default_instance_;
};
// -------------------------------------------------------------------

class GC_RET_RANDOMNAME : public ::google::protobuf::Message {
 public:
  GC_RET_RANDOMNAME();
  virtual ~GC_RET_RANDOMNAME();

  GC_RET_RANDOMNAME(const GC_RET_RANDOMNAME& from);

  inline GC_RET_RANDOMNAME& operator=(const GC_RET_RANDOMNAME& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_RET_RANDOMNAME& default_instance();

  void Swap(GC_RET_RANDOMNAME* other);

  // implements Message ----------------------------------------------

  GC_RET_RANDOMNAME* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_RET_RANDOMNAME& from);
  void MergeFrom(const GC_RET_RANDOMNAME& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string names = 1;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 1;
  inline const ::std::string& names(int index) const;
  inline ::std::string* mutable_names(int index);
  inline void set_names(int index, const ::std::string& value);
  inline void set_names(int index, const char* value);
  inline void set_names(int index, const char* value, size_t size);
  inline ::std::string* add_names();
  inline void add_names(const ::std::string& value);
  inline void add_names(const char* value);
  inline void add_names(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& names() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_names();

  // @@protoc_insertion_point(class_scope:GC_RET_RANDOMNAME)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> names_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_RET_RANDOMNAME* default_instance_;
};
// -------------------------------------------------------------------

class CG_REQ_CHANGE_SCENE : public ::google::protobuf::Message {
 public:
  CG_REQ_CHANGE_SCENE();
  virtual ~CG_REQ_CHANGE_SCENE();

  CG_REQ_CHANGE_SCENE(const CG_REQ_CHANGE_SCENE& from);

  inline CG_REQ_CHANGE_SCENE& operator=(const CG_REQ_CHANGE_SCENE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_REQ_CHANGE_SCENE& default_instance();

  void Swap(CG_REQ_CHANGE_SCENE* other);

  // implements Message ----------------------------------------------

  CG_REQ_CHANGE_SCENE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_REQ_CHANGE_SCENE& from);
  void MergeFrom(const CG_REQ_CHANGE_SCENE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CG_REQ_CHANGE_SCENE_CHANGETYPE CHANGETYPE;
  static const CHANGETYPE TELEPORT = CG_REQ_CHANGE_SCENE_CHANGETYPE_TELEPORT;
  static const CHANGETYPE WORLDMAP = CG_REQ_CHANGE_SCENE_CHANGETYPE_WORLDMAP;
  static const CHANGETYPE TRAIL = CG_REQ_CHANGE_SCENE_CHANGETYPE_TRAIL;
  static const CHANGETYPE POINT = CG_REQ_CHANGE_SCENE_CHANGETYPE_POINT;
  static inline bool CHANGETYPE_IsValid(int value) {
    return CG_REQ_CHANGE_SCENE_CHANGETYPE_IsValid(value);
  }
  static const CHANGETYPE CHANGETYPE_MIN =
    CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_MIN;
  static const CHANGETYPE CHANGETYPE_MAX =
    CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_MAX;
  static const int CHANGETYPE_ARRAYSIZE =
    CG_REQ_CHANGE_SCENE_CHANGETYPE_CHANGETYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CHANGETYPE_descriptor() {
    return CG_REQ_CHANGE_SCENE_CHANGETYPE_descriptor();
  }
  static inline const ::std::string& CHANGETYPE_Name(CHANGETYPE value) {
    return CG_REQ_CHANGE_SCENE_CHANGETYPE_Name(value);
  }
  static inline bool CHANGETYPE_Parse(const ::std::string& name,
      CHANGETYPE* value) {
    return CG_REQ_CHANGE_SCENE_CHANGETYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 ctype = 1;
  inline bool has_ctype() const;
  inline void clear_ctype();
  static const int kCtypeFieldNumber = 1;
  inline ::google::protobuf::int32 ctype() const;
  inline void set_ctype(::google::protobuf::int32 value);

  // required int32 teleportid = 2;
  inline bool has_teleportid() const;
  inline void clear_teleportid();
  static const int kTeleportidFieldNumber = 2;
  inline ::google::protobuf::int32 teleportid() const;
  inline void set_teleportid(::google::protobuf::int32 value);

  // required int32 sceneclassid = 3;
  inline bool has_sceneclassid() const;
  inline void clear_sceneclassid();
  static const int kSceneclassidFieldNumber = 3;
  inline ::google::protobuf::int32 sceneclassid() const;
  inline void set_sceneclassid(::google::protobuf::int32 value);

  // required int32 sceneinstid = 4;
  inline bool has_sceneinstid() const;
  inline void clear_sceneinstid();
  static const int kSceneinstidFieldNumber = 4;
  inline ::google::protobuf::int32 sceneinstid() const;
  inline void set_sceneinstid(::google::protobuf::int32 value);

  // required int32 posX = 5;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 5;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posZ = 6;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 6;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_REQ_CHANGE_SCENE)
 private:
  inline void set_has_ctype();
  inline void clear_has_ctype();
  inline void set_has_teleportid();
  inline void clear_has_teleportid();
  inline void set_has_sceneclassid();
  inline void clear_has_sceneclassid();
  inline void set_has_sceneinstid();
  inline void clear_has_sceneinstid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ctype_;
  ::google::protobuf::int32 teleportid_;
  ::google::protobuf::int32 sceneclassid_;
  ::google::protobuf::int32 sceneinstid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_REQ_CHANGE_SCENE* default_instance_;
};
// -------------------------------------------------------------------

class GC_ENTER_SCENE : public ::google::protobuf::Message {
 public:
  GC_ENTER_SCENE();
  virtual ~GC_ENTER_SCENE();

  GC_ENTER_SCENE(const GC_ENTER_SCENE& from);

  inline GC_ENTER_SCENE& operator=(const GC_ENTER_SCENE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_ENTER_SCENE& default_instance();

  void Swap(GC_ENTER_SCENE* other);

  // implements Message ----------------------------------------------

  GC_ENTER_SCENE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_ENTER_SCENE& from);
  void MergeFrom(const GC_ENTER_SCENE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 sceneclass = 1;
  inline bool has_sceneclass() const;
  inline void clear_sceneclass();
  static const int kSceneclassFieldNumber = 1;
  inline ::google::protobuf::int32 sceneclass() const;
  inline void set_sceneclass(::google::protobuf::int32 value);

  // required int32 sceneinst = 2;
  inline bool has_sceneinst() const;
  inline void clear_sceneinst();
  static const int kSceneinstFieldNumber = 2;
  inline ::google::protobuf::int32 sceneinst() const;
  inline void set_sceneinst(::google::protobuf::int32 value);

  // required int32 mainplayerserverid = 3;
  inline bool has_mainplayerserverid() const;
  inline void clear_mainplayerserverid();
  static const int kMainplayerserveridFieldNumber = 3;
  inline ::google::protobuf::int32 mainplayerserverid() const;
  inline void set_mainplayerserverid(::google::protobuf::int32 value);

  // required int32 posX = 4;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 4;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posZ = 5;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 5;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_ENTER_SCENE)
 private:
  inline void set_has_sceneclass();
  inline void clear_has_sceneclass();
  inline void set_has_sceneinst();
  inline void clear_has_sceneinst();
  inline void set_has_mainplayerserverid();
  inline void clear_has_mainplayerserverid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 sceneclass_;
  ::google::protobuf::int32 sceneinst_;
  ::google::protobuf::int32 mainplayerserverid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_ENTER_SCENE* default_instance_;
};
// -------------------------------------------------------------------

class CG_ENTER_SCENE_OK : public ::google::protobuf::Message {
 public:
  CG_ENTER_SCENE_OK();
  virtual ~CG_ENTER_SCENE_OK();

  CG_ENTER_SCENE_OK(const CG_ENTER_SCENE_OK& from);

  inline CG_ENTER_SCENE_OK& operator=(const CG_ENTER_SCENE_OK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_ENTER_SCENE_OK& default_instance();

  void Swap(CG_ENTER_SCENE_OK* other);

  // implements Message ----------------------------------------------

  CG_ENTER_SCENE_OK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_ENTER_SCENE_OK& from);
  void MergeFrom(const CG_ENTER_SCENE_OK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isOK = 1;
  inline bool has_isok() const;
  inline void clear_isok();
  static const int kIsOKFieldNumber = 1;
  inline ::google::protobuf::int32 isok() const;
  inline void set_isok(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_ENTER_SCENE_OK)
 private:
  inline void set_has_isok();
  inline void clear_has_isok();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isok_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_ENTER_SCENE_OK* default_instance_;
};
// -------------------------------------------------------------------

class CG_CONNECTED_HEARTBEAT : public ::google::protobuf::Message {
 public:
  CG_CONNECTED_HEARTBEAT();
  virtual ~CG_CONNECTED_HEARTBEAT();

  CG_CONNECTED_HEARTBEAT(const CG_CONNECTED_HEARTBEAT& from);

  inline CG_CONNECTED_HEARTBEAT& operator=(const CG_CONNECTED_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_CONNECTED_HEARTBEAT& default_instance();

  void Swap(CG_CONNECTED_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  CG_CONNECTED_HEARTBEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_CONNECTED_HEARTBEAT& from);
  void MergeFrom(const CG_CONNECTED_HEARTBEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 isresponse = 1;
  inline bool has_isresponse() const;
  inline void clear_isresponse();
  static const int kIsresponseFieldNumber = 1;
  inline ::google::protobuf::int32 isresponse() const;
  inline void set_isresponse(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_CONNECTED_HEARTBEAT)
 private:
  inline void set_has_isresponse();
  inline void clear_has_isresponse();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 isresponse_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_CONNECTED_HEARTBEAT* default_instance_;
};
// -------------------------------------------------------------------

class GC_CONNECTED_HEARTBEAT : public ::google::protobuf::Message {
 public:
  GC_CONNECTED_HEARTBEAT();
  virtual ~GC_CONNECTED_HEARTBEAT();

  GC_CONNECTED_HEARTBEAT(const GC_CONNECTED_HEARTBEAT& from);

  inline GC_CONNECTED_HEARTBEAT& operator=(const GC_CONNECTED_HEARTBEAT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_CONNECTED_HEARTBEAT& default_instance();

  void Swap(GC_CONNECTED_HEARTBEAT* other);

  // implements Message ----------------------------------------------

  GC_CONNECTED_HEARTBEAT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_CONNECTED_HEARTBEAT& from);
  void MergeFrom(const GC_CONNECTED_HEARTBEAT& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serveransitime = 1;
  inline bool has_serveransitime() const;
  inline void clear_serveransitime();
  static const int kServeransitimeFieldNumber = 1;
  inline ::google::protobuf::int32 serveransitime() const;
  inline void set_serveransitime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_CONNECTED_HEARTBEAT)
 private:
  inline void set_has_serveransitime();
  inline void clear_has_serveransitime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serveransitime_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_CONNECTED_HEARTBEAT* default_instance_;
};
// -------------------------------------------------------------------

class GC_NOTICE : public ::google::protobuf::Message {
 public:
  GC_NOTICE();
  virtual ~GC_NOTICE();

  GC_NOTICE(const GC_NOTICE& from);

  inline GC_NOTICE& operator=(const GC_NOTICE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_NOTICE& default_instance();

  void Swap(GC_NOTICE* other);

  // implements Message ----------------------------------------------

  GC_NOTICE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_NOTICE& from);
  void MergeFrom(const GC_NOTICE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string notice = 1;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 1;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  inline void set_allocated_notice(::std::string* notice);

  // optional int32 filterRepeat = 2;
  inline bool has_filterrepeat() const;
  inline void clear_filterrepeat();
  static const int kFilterRepeatFieldNumber = 2;
  inline ::google::protobuf::int32 filterrepeat() const;
  inline void set_filterrepeat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_NOTICE)
 private:
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_filterrepeat();
  inline void clear_has_filterrepeat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* notice_;
  ::google::protobuf::int32 filterrepeat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_NOTICE* default_instance_;
};
// -------------------------------------------------------------------

class GC_MISSION_SYNC_MISSIONLIST : public ::google::protobuf::Message {
 public:
  GC_MISSION_SYNC_MISSIONLIST();
  virtual ~GC_MISSION_SYNC_MISSIONLIST();

  GC_MISSION_SYNC_MISSIONLIST(const GC_MISSION_SYNC_MISSIONLIST& from);

  inline GC_MISSION_SYNC_MISSIONLIST& operator=(const GC_MISSION_SYNC_MISSIONLIST& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_MISSION_SYNC_MISSIONLIST& default_instance();

  void Swap(GC_MISSION_SYNC_MISSIONLIST* other);

  // implements Message ----------------------------------------------

  GC_MISSION_SYNC_MISSIONLIST* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_MISSION_SYNC_MISSIONLIST& from);
  void MergeFrom(const GC_MISSION_SYNC_MISSIONLIST& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 missionID = 1;
  inline int missionid_size() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid(int index) const;
  inline void set_missionid(int index, ::google::protobuf::int32 value);
  inline void add_missionid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      missionid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_missionid();

  // repeated int32 state = 2;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int32 value);
  inline void add_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_state();

  // repeated int32 nParam = 3;
  inline int nparam_size() const;
  inline void clear_nparam();
  static const int kNParamFieldNumber = 3;
  inline ::google::protobuf::int32 nparam(int index) const;
  inline void set_nparam(int index, ::google::protobuf::int32 value);
  inline void add_nparam(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nparam() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nparam();

  // repeated uint32 havedoneFlag = 4;
  inline int havedoneflag_size() const;
  inline void clear_havedoneflag();
  static const int kHavedoneFlagFieldNumber = 4;
  inline ::google::protobuf::uint32 havedoneflag(int index) const;
  inline void set_havedoneflag(int index, ::google::protobuf::uint32 value);
  inline void add_havedoneflag(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      havedoneflag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_havedoneflag();

  // repeated int32 qualitytype = 5;
  inline int qualitytype_size() const;
  inline void clear_qualitytype();
  static const int kQualitytypeFieldNumber = 5;
  inline ::google::protobuf::int32 qualitytype(int index) const;
  inline void set_qualitytype(int index, ::google::protobuf::int32 value);
  inline void add_qualitytype(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      qualitytype() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_qualitytype();

  // @@protoc_insertion_point(class_scope:GC_MISSION_SYNC_MISSIONLIST)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > missionid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nparam_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > havedoneflag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > qualitytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_MISSION_SYNC_MISSIONLIST* default_instance_;
};
// -------------------------------------------------------------------

class CG_ACCEPTMISSION : public ::google::protobuf::Message {
 public:
  CG_ACCEPTMISSION();
  virtual ~CG_ACCEPTMISSION();

  CG_ACCEPTMISSION(const CG_ACCEPTMISSION& from);

  inline CG_ACCEPTMISSION& operator=(const CG_ACCEPTMISSION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_ACCEPTMISSION& default_instance();

  void Swap(CG_ACCEPTMISSION* other);

  // implements Message ----------------------------------------------

  CG_ACCEPTMISSION* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_ACCEPTMISSION& from);
  void MergeFrom(const CG_ACCEPTMISSION& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_ACCEPTMISSION)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_ACCEPTMISSION* default_instance_;
};
// -------------------------------------------------------------------

class GC_ACCEPTMISSION_RET : public ::google::protobuf::Message {
 public:
  GC_ACCEPTMISSION_RET();
  virtual ~GC_ACCEPTMISSION_RET();

  GC_ACCEPTMISSION_RET(const GC_ACCEPTMISSION_RET& from);

  inline GC_ACCEPTMISSION_RET& operator=(const GC_ACCEPTMISSION_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_ACCEPTMISSION_RET& default_instance();

  void Swap(GC_ACCEPTMISSION_RET* other);

  // implements Message ----------------------------------------------

  GC_ACCEPTMISSION_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_ACCEPTMISSION_RET& from);
  void MergeFrom(const GC_ACCEPTMISSION_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // required int32 QualityType = 2;
  inline bool has_qualitytype() const;
  inline void clear_qualitytype();
  static const int kQualityTypeFieldNumber = 2;
  inline ::google::protobuf::int32 qualitytype() const;
  inline void set_qualitytype(::google::protobuf::int32 value);

  // required int32 Ret = 3;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 3;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_ACCEPTMISSION_RET)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_qualitytype();
  inline void clear_has_qualitytype();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;
  ::google::protobuf::int32 qualitytype_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_ACCEPTMISSION_RET* default_instance_;
};
// -------------------------------------------------------------------

class CG_COMPLETEMISSION : public ::google::protobuf::Message {
 public:
  CG_COMPLETEMISSION();
  virtual ~CG_COMPLETEMISSION();

  CG_COMPLETEMISSION(const CG_COMPLETEMISSION& from);

  inline CG_COMPLETEMISSION& operator=(const CG_COMPLETEMISSION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_COMPLETEMISSION& default_instance();

  void Swap(CG_COMPLETEMISSION* other);

  // implements Message ----------------------------------------------

  CG_COMPLETEMISSION* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_COMPLETEMISSION& from);
  void MergeFrom(const CG_COMPLETEMISSION& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_COMPLETEMISSION)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_COMPLETEMISSION* default_instance_;
};
// -------------------------------------------------------------------

class GC_COMPLETEMISSION_RET : public ::google::protobuf::Message {
 public:
  GC_COMPLETEMISSION_RET();
  virtual ~GC_COMPLETEMISSION_RET();

  GC_COMPLETEMISSION_RET(const GC_COMPLETEMISSION_RET& from);

  inline GC_COMPLETEMISSION_RET& operator=(const GC_COMPLETEMISSION_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_COMPLETEMISSION_RET& default_instance();

  void Swap(GC_COMPLETEMISSION_RET* other);

  // implements Message ----------------------------------------------

  GC_COMPLETEMISSION_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_COMPLETEMISSION_RET& from);
  void MergeFrom(const GC_COMPLETEMISSION_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // required int32 Ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_COMPLETEMISSION_RET)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_COMPLETEMISSION_RET* default_instance_;
};
// -------------------------------------------------------------------

class CG_ABANDONMISSION : public ::google::protobuf::Message {
 public:
  CG_ABANDONMISSION();
  virtual ~CG_ABANDONMISSION();

  CG_ABANDONMISSION(const CG_ABANDONMISSION& from);

  inline CG_ABANDONMISSION& operator=(const CG_ABANDONMISSION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_ABANDONMISSION& default_instance();

  void Swap(CG_ABANDONMISSION* other);

  // implements Message ----------------------------------------------

  CG_ABANDONMISSION* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_ABANDONMISSION& from);
  void MergeFrom(const CG_ABANDONMISSION& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_ABANDONMISSION)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_ABANDONMISSION* default_instance_;
};
// -------------------------------------------------------------------

class GC_ABANDONMISSION_RET : public ::google::protobuf::Message {
 public:
  GC_ABANDONMISSION_RET();
  virtual ~GC_ABANDONMISSION_RET();

  GC_ABANDONMISSION_RET(const GC_ABANDONMISSION_RET& from);

  inline GC_ABANDONMISSION_RET& operator=(const GC_ABANDONMISSION_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_ABANDONMISSION_RET& default_instance();

  void Swap(GC_ABANDONMISSION_RET* other);

  // implements Message ----------------------------------------------

  GC_ABANDONMISSION_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_ABANDONMISSION_RET& from);
  void MergeFrom(const GC_ABANDONMISSION_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // required int32 Ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_ABANDONMISSION_RET)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;
  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_ABANDONMISSION_RET* default_instance_;
};
// -------------------------------------------------------------------

class GC_MISSION_STATE : public ::google::protobuf::Message {
 public:
  GC_MISSION_STATE();
  virtual ~GC_MISSION_STATE();

  GC_MISSION_STATE(const GC_MISSION_STATE& from);

  inline GC_MISSION_STATE& operator=(const GC_MISSION_STATE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_MISSION_STATE& default_instance();

  void Swap(GC_MISSION_STATE* other);

  // implements Message ----------------------------------------------

  GC_MISSION_STATE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_MISSION_STATE& from);
  void MergeFrom(const GC_MISSION_STATE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // required int32 State = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_MISSION_STATE)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;
  ::google::protobuf::int32 state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_MISSION_STATE* default_instance_;
};
// -------------------------------------------------------------------

class GC_MISSION_PARAM : public ::google::protobuf::Message {
 public:
  GC_MISSION_PARAM();
  virtual ~GC_MISSION_PARAM();

  GC_MISSION_PARAM(const GC_MISSION_PARAM& from);

  inline GC_MISSION_PARAM& operator=(const GC_MISSION_PARAM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_MISSION_PARAM& default_instance();

  void Swap(GC_MISSION_PARAM* other);

  // implements Message ----------------------------------------------

  GC_MISSION_PARAM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_MISSION_PARAM& from);
  void MergeFrom(const GC_MISSION_PARAM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 MissionID = 1;
  inline bool has_missionid() const;
  inline void clear_missionid();
  static const int kMissionIDFieldNumber = 1;
  inline ::google::protobuf::int32 missionid() const;
  inline void set_missionid(::google::protobuf::int32 value);

  // required int32 ParamIndex = 2;
  inline bool has_paramindex() const;
  inline void clear_paramindex();
  static const int kParamIndexFieldNumber = 2;
  inline ::google::protobuf::int32 paramindex() const;
  inline void set_paramindex(::google::protobuf::int32 value);

  // required int32 Param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_MISSION_PARAM)
 private:
  inline void set_has_missionid();
  inline void clear_has_missionid();
  inline void set_has_paramindex();
  inline void clear_has_paramindex();
  inline void set_has_param();
  inline void clear_has_param();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 missionid_;
  ::google::protobuf::int32 paramindex_;
  ::google::protobuf::int32 param_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_MISSION_PARAM* default_instance_;
};
// -------------------------------------------------------------------

class GC_CREATE_PLAYER : public ::google::protobuf::Message {
 public:
  GC_CREATE_PLAYER();
  virtual ~GC_CREATE_PLAYER();

  GC_CREATE_PLAYER(const GC_CREATE_PLAYER& from);

  inline GC_CREATE_PLAYER& operator=(const GC_CREATE_PLAYER& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_CREATE_PLAYER& default_instance();

  void Swap(GC_CREATE_PLAYER* other);

  // implements Message ----------------------------------------------

  GC_CREATE_PLAYER* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_CREATE_PLAYER& from);
  void MergeFrom(const GC_CREATE_PLAYER& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverId = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required uint64 guid = 2;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 2;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required int32 sceneInst = 3;
  inline bool has_sceneinst() const;
  inline void clear_sceneinst();
  static const int kSceneInstFieldNumber = 3;
  inline ::google::protobuf::int32 sceneinst() const;
  inline void set_sceneinst(::google::protobuf::int32 value);

  // required int32 sceneClass = 4;
  inline bool has_sceneclass() const;
  inline void clear_sceneclass();
  static const int kSceneClassFieldNumber = 4;
  inline ::google::protobuf::int32 sceneclass() const;
  inline void set_sceneclass(::google::protobuf::int32 value);

  // required int32 dataId = 5;
  inline bool has_dataid() const;
  inline void clear_dataid();
  static const int kDataIdFieldNumber = 5;
  inline ::google::protobuf::int32 dataid() const;
  inline void set_dataid(::google::protobuf::int32 value);

  // required int32 posX = 6;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 6;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posZ = 7;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 7;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // required int32 curforce = 8;
  inline bool has_curforce() const;
  inline void clear_curforce();
  static const int kCurforceFieldNumber = 8;
  inline ::google::protobuf::int32 curforce() const;
  inline void set_curforce(::google::protobuf::int32 value);

  // required string name = 9;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 9;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 curProfession = 10;
  inline bool has_curprofession() const;
  inline void clear_curprofession();
  static const int kCurProfessionFieldNumber = 10;
  inline ::google::protobuf::int32 curprofession() const;
  inline void set_curprofession(::google::protobuf::int32 value);

  // required int32 facedir = 11;
  inline bool has_facedir() const;
  inline void clear_facedir();
  static const int kFacedirFieldNumber = 11;
  inline ::google::protobuf::int32 facedir() const;
  inline void set_facedir(::google::protobuf::int32 value);

  // required string titlename = 12;
  inline bool has_titlename() const;
  inline void clear_titlename();
  static const int kTitlenameFieldNumber = 12;
  inline const ::std::string& titlename() const;
  inline void set_titlename(const ::std::string& value);
  inline void set_titlename(const char* value);
  inline void set_titlename(const char* value, size_t size);
  inline ::std::string* mutable_titlename();
  inline ::std::string* release_titlename();
  inline void set_allocated_titlename(::std::string* titlename);

  // required int32 isInPkList = 13;
  inline bool has_isinpklist() const;
  inline void clear_isinpklist();
  static const int kIsInPkListFieldNumber = 13;
  inline ::google::protobuf::int32 isinpklist() const;
  inline void set_isinpklist(::google::protobuf::int32 value);

  // required int32 isDie = 14;
  inline bool has_isdie() const;
  inline void clear_isdie();
  static const int kIsDieFieldNumber = 14;
  inline ::google::protobuf::int32 isdie() const;
  inline void set_isdie(::google::protobuf::int32 value);

  // optional int32 ReliveTime = 15;
  inline bool has_relivetime() const;
  inline void clear_relivetime();
  static const int kReliveTimeFieldNumber = 15;
  inline ::google::protobuf::int32 relivetime() const;
  inline void set_relivetime(::google::protobuf::int32 value);

  // required int32 PKModle = 16;
  inline bool has_pkmodle() const;
  inline void clear_pkmodle();
  static const int kPKModleFieldNumber = 16;
  inline ::google::protobuf::int32 pkmodle() const;
  inline void set_pkmodle(::google::protobuf::int32 value);

  // required int32 MountID = 17;
  inline bool has_mountid() const;
  inline void clear_mountid();
  static const int kMountIDFieldNumber = 17;
  inline ::google::protobuf::int32 mountid() const;
  inline void set_mountid(::google::protobuf::int32 value);

  // required int32 MoveSpeed = 18;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 18;
  inline ::google::protobuf::int32 movespeed() const;
  inline void set_movespeed(::google::protobuf::int32 value);

  // required int32 ModelVisualID = 19;
  inline bool has_modelvisualid() const;
  inline void clear_modelvisualid();
  static const int kModelVisualIDFieldNumber = 19;
  inline ::google::protobuf::int32 modelvisualid() const;
  inline void set_modelvisualid(::google::protobuf::int32 value);

  // required int32 WeaponDataID = 20;
  inline bool has_weapondataid() const;
  inline void clear_weapondataid();
  static const int kWeaponDataIDFieldNumber = 20;
  inline ::google::protobuf::int32 weapondataid() const;
  inline void set_weapondataid(::google::protobuf::int32 value);

  // required int32 WeaponEffectGem = 22;
  inline bool has_weaponeffectgem() const;
  inline void clear_weaponeffectgem();
  static const int kWeaponEffectGemFieldNumber = 22;
  inline ::google::protobuf::int32 weaponeffectgem() const;
  inline void set_weaponeffectgem(::google::protobuf::int32 value);

  // required int32 CurTitleID = 23;
  inline bool has_curtitleid() const;
  inline void clear_curtitleid();
  static const int kCurTitleIDFieldNumber = 23;
  inline ::google::protobuf::int32 curtitleid() const;
  inline void set_curtitleid(::google::protobuf::int32 value);

  // required int32 StealthLev = 24;
  inline bool has_stealthlev() const;
  inline void clear_stealthlev();
  static const int kStealthLevFieldNumber = 24;
  inline ::google::protobuf::int32 stealthlev() const;
  inline void set_stealthlev(::google::protobuf::int32 value);

  // required int32 VipCost = 25;
  inline bool has_vipcost() const;
  inline void clear_vipcost();
  static const int kVipCostFieldNumber = 25;
  inline ::google::protobuf::int32 vipcost() const;
  inline void set_vipcost(::google::protobuf::int32 value);

  // required uint64 GuildGuid = 26;
  inline bool has_guildguid() const;
  inline void clear_guildguid();
  static const int kGuildGuidFieldNumber = 26;
  inline ::google::protobuf::uint64 guildguid() const;
  inline void set_guildguid(::google::protobuf::uint64 value);

  // required int32 CombatValue = 27;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 27;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // required int32 bindparent = 28;
  inline bool has_bindparent() const;
  inline void clear_bindparent();
  static const int kBindparentFieldNumber = 28;
  inline ::google::protobuf::int32 bindparent() const;
  inline void set_bindparent(::google::protobuf::int32 value);

  // repeated int32 bindchildren = 29;
  inline int bindchildren_size() const;
  inline void clear_bindchildren();
  static const int kBindchildrenFieldNumber = 29;
  inline ::google::protobuf::int32 bindchildren(int index) const;
  inline void set_bindchildren(int index, ::google::protobuf::int32 value);
  inline void add_bindchildren(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bindchildren() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bindchildren();

  // required int32 isEnemy2Self = 30;
  inline bool has_isenemy2self() const;
  inline void clear_isenemy2self();
  static const int kIsEnemy2SelfFieldNumber = 30;
  inline ::google::protobuf::int32 isenemy2self() const;
  inline void set_isenemy2self(::google::protobuf::int32 value);

  // optional int32 paoshangState = 31;
  inline bool has_paoshangstate() const;
  inline void clear_paoshangstate();
  static const int kPaoshangStateFieldNumber = 31;
  inline ::google::protobuf::int32 paoshangstate() const;
  inline void set_paoshangstate(::google::protobuf::int32 value);

  // optional int32 lightSkillLevel = 32;
  inline bool has_lightskilllevel() const;
  inline void clear_lightskilllevel();
  static const int kLightSkillLevelFieldNumber = 32;
  inline ::google::protobuf::int32 lightskilllevel() const;
  inline void set_lightskilllevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_CREATE_PLAYER)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_sceneinst();
  inline void clear_has_sceneinst();
  inline void set_has_sceneclass();
  inline void clear_has_sceneclass();
  inline void set_has_dataid();
  inline void clear_has_dataid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_curforce();
  inline void clear_has_curforce();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_curprofession();
  inline void clear_has_curprofession();
  inline void set_has_facedir();
  inline void clear_has_facedir();
  inline void set_has_titlename();
  inline void clear_has_titlename();
  inline void set_has_isinpklist();
  inline void clear_has_isinpklist();
  inline void set_has_isdie();
  inline void clear_has_isdie();
  inline void set_has_relivetime();
  inline void clear_has_relivetime();
  inline void set_has_pkmodle();
  inline void clear_has_pkmodle();
  inline void set_has_mountid();
  inline void clear_has_mountid();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_modelvisualid();
  inline void clear_has_modelvisualid();
  inline void set_has_weapondataid();
  inline void clear_has_weapondataid();
  inline void set_has_weaponeffectgem();
  inline void clear_has_weaponeffectgem();
  inline void set_has_curtitleid();
  inline void clear_has_curtitleid();
  inline void set_has_stealthlev();
  inline void clear_has_stealthlev();
  inline void set_has_vipcost();
  inline void clear_has_vipcost();
  inline void set_has_guildguid();
  inline void clear_has_guildguid();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_bindparent();
  inline void clear_has_bindparent();
  inline void set_has_isenemy2self();
  inline void clear_has_isenemy2self();
  inline void set_has_paoshangstate();
  inline void clear_has_paoshangstate();
  inline void set_has_lightskilllevel();
  inline void clear_has_lightskilllevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 guid_;
  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 sceneinst_;
  ::google::protobuf::int32 sceneclass_;
  ::google::protobuf::int32 dataid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;
  ::std::string* name_;
  ::google::protobuf::int32 curforce_;
  ::google::protobuf::int32 curprofession_;
  ::std::string* titlename_;
  ::google::protobuf::int32 facedir_;
  ::google::protobuf::int32 isinpklist_;
  ::google::protobuf::int32 isdie_;
  ::google::protobuf::int32 relivetime_;
  ::google::protobuf::int32 pkmodle_;
  ::google::protobuf::int32 mountid_;
  ::google::protobuf::int32 movespeed_;
  ::google::protobuf::int32 modelvisualid_;
  ::google::protobuf::int32 weapondataid_;
  ::google::protobuf::int32 weaponeffectgem_;
  ::google::protobuf::int32 curtitleid_;
  ::google::protobuf::int32 stealthlev_;
  ::google::protobuf::uint64 guildguid_;
  ::google::protobuf::int32 vipcost_;
  ::google::protobuf::int32 combatvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bindchildren_;
  ::google::protobuf::int32 bindparent_;
  ::google::protobuf::int32 isenemy2self_;
  ::google::protobuf::int32 paoshangstate_;
  ::google::protobuf::int32 lightskilllevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(31 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_CREATE_PLAYER* default_instance_;
};
// -------------------------------------------------------------------

class GC_DELETE_OBJ : public ::google::protobuf::Message {
 public:
  GC_DELETE_OBJ();
  virtual ~GC_DELETE_OBJ();

  GC_DELETE_OBJ(const GC_DELETE_OBJ& from);

  inline GC_DELETE_OBJ& operator=(const GC_DELETE_OBJ& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_DELETE_OBJ& default_instance();

  void Swap(GC_DELETE_OBJ* other);

  // implements Message ----------------------------------------------

  GC_DELETE_OBJ* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_DELETE_OBJ& from);
  void MergeFrom(const GC_DELETE_OBJ& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverId = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_DELETE_OBJ)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_DELETE_OBJ* default_instance_;
};
// -------------------------------------------------------------------

class CG_SYNC_POS : public ::google::protobuf::Message {
 public:
  CG_SYNC_POS();
  virtual ~CG_SYNC_POS();

  CG_SYNC_POS(const CG_SYNC_POS& from);

  inline CG_SYNC_POS& operator=(const CG_SYNC_POS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_SYNC_POS& default_instance();

  void Swap(CG_SYNC_POS* other);

  // implements Message ----------------------------------------------

  CG_SYNC_POS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_SYNC_POS& from);
  void MergeFrom(const CG_SYNC_POS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 posX = 1;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 1;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posZ = 2;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 2;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // required int32 ismoviong = 3;
  inline bool has_ismoviong() const;
  inline void clear_ismoviong();
  static const int kIsmoviongFieldNumber = 3;
  inline ::google::protobuf::int32 ismoviong() const;
  inline void set_ismoviong(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_SYNC_POS)
 private:
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();
  inline void set_has_ismoviong();
  inline void clear_has_ismoviong();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;
  ::google::protobuf::int32 ismoviong_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_SYNC_POS* default_instance_;
};
// -------------------------------------------------------------------

class GC_SYNC_POS : public ::google::protobuf::Message {
 public:
  GC_SYNC_POS();
  virtual ~GC_SYNC_POS();

  GC_SYNC_POS(const GC_SYNC_POS& from);

  inline GC_SYNC_POS& operator=(const GC_SYNC_POS& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_SYNC_POS& default_instance();

  void Swap(GC_SYNC_POS* other);

  // implements Message ----------------------------------------------

  GC_SYNC_POS* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_SYNC_POS& from);
  void MergeFrom(const GC_SYNC_POS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverId = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required int32 posX = 2;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posZ = 3;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPosZFieldNumber = 3;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_SYNC_POS)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_SYNC_POS* default_instance_;
};
// -------------------------------------------------------------------

class CG_MOVE : public ::google::protobuf::Message {
 public:
  CG_MOVE();
  virtual ~CG_MOVE();

  CG_MOVE(const CG_MOVE& from);

  inline CG_MOVE& operator=(const CG_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_MOVE& default_instance();

  void Swap(CG_MOVE* other);

  // implements Message ----------------------------------------------

  CG_MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_MOVE& from);
  void MergeFrom(const CG_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 poscount = 1;
  inline bool has_poscount() const;
  inline void clear_poscount();
  static const int kPoscountFieldNumber = 1;
  inline ::google::protobuf::int32 poscount() const;
  inline void set_poscount(::google::protobuf::int32 value);

  // repeated int32 posx = 2;
  inline int posx_size() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 2;
  inline ::google::protobuf::int32 posx(int index) const;
  inline void set_posx(int index, ::google::protobuf::int32 value);
  inline void add_posx(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posx();

  // repeated int32 posz = 3;
  inline int posz_size() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 3;
  inline ::google::protobuf::int32 posz(int index) const;
  inline void set_posz(int index, ::google::protobuf::int32 value);
  inline void add_posz(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posz() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posz();

  // required int32 ismoving = 4;
  inline bool has_ismoving() const;
  inline void clear_ismoving();
  static const int kIsmovingFieldNumber = 4;
  inline ::google::protobuf::int32 ismoving() const;
  inline void set_ismoving(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_MOVE)
 private:
  inline void set_has_poscount();
  inline void clear_has_poscount();
  inline void set_has_ismoving();
  inline void clear_has_ismoving();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posx_;
  ::google::protobuf::int32 poscount_;
  ::google::protobuf::int32 ismoving_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_MOVE* default_instance_;
};
// -------------------------------------------------------------------

class GC_MOVE : public ::google::protobuf::Message {
 public:
  GC_MOVE();
  virtual ~GC_MOVE();

  GC_MOVE(const GC_MOVE& from);

  inline GC_MOVE& operator=(const GC_MOVE& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_MOVE& default_instance();

  void Swap(GC_MOVE* other);

  // implements Message ----------------------------------------------

  GC_MOVE* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_MOVE& from);
  void MergeFrom(const GC_MOVE& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required int32 poscount = 2;
  inline bool has_poscount() const;
  inline void clear_poscount();
  static const int kPoscountFieldNumber = 2;
  inline ::google::protobuf::int32 poscount() const;
  inline void set_poscount(::google::protobuf::int32 value);

  // repeated int32 posserial = 3;
  inline int posserial_size() const;
  inline void clear_posserial();
  static const int kPosserialFieldNumber = 3;
  inline ::google::protobuf::int32 posserial(int index) const;
  inline void set_posserial(int index, ::google::protobuf::int32 value);
  inline void add_posserial(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posserial() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posserial();

  // repeated int32 posx = 4;
  inline int posx_size() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 4;
  inline ::google::protobuf::int32 posx(int index) const;
  inline void set_posx(int index, ::google::protobuf::int32 value);
  inline void add_posx(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posx();

  // repeated int32 posz = 5;
  inline int posz_size() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 5;
  inline ::google::protobuf::int32 posz(int index) const;
  inline void set_posz(int index, ::google::protobuf::int32 value);
  inline void add_posz(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      posz() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_posz();

  // @@protoc_insertion_point(class_scope:GC_MOVE)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_poscount();
  inline void clear_has_poscount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 poscount_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posserial_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posx_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_MOVE* default_instance_;
};
// -------------------------------------------------------------------

class GC_STOP : public ::google::protobuf::Message {
 public:
  GC_STOP();
  virtual ~GC_STOP();

  GC_STOP(const GC_STOP& from);

  inline GC_STOP& operator=(const GC_STOP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_STOP& default_instance();

  void Swap(GC_STOP* other);

  // implements Message ----------------------------------------------

  GC_STOP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_STOP& from);
  void MergeFrom(const GC_STOP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serverid = 1;
  inline bool has_serverid() const;
  inline void clear_serverid();
  static const int kServeridFieldNumber = 1;
  inline ::google::protobuf::int32 serverid() const;
  inline void set_serverid(::google::protobuf::int32 value);

  // required int32 posserial = 2;
  inline bool has_posserial() const;
  inline void clear_posserial();
  static const int kPosserialFieldNumber = 2;
  inline ::google::protobuf::int32 posserial() const;
  inline void set_posserial(::google::protobuf::int32 value);

  // required int32 posx = 3;
  inline bool has_posx() const;
  inline void clear_posx();
  static const int kPosxFieldNumber = 3;
  inline ::google::protobuf::int32 posx() const;
  inline void set_posx(::google::protobuf::int32 value);

  // required int32 posz = 4;
  inline bool has_posz() const;
  inline void clear_posz();
  static const int kPoszFieldNumber = 4;
  inline ::google::protobuf::int32 posz() const;
  inline void set_posz(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_STOP)
 private:
  inline void set_has_serverid();
  inline void clear_has_serverid();
  inline void set_has_posserial();
  inline void clear_has_posserial();
  inline void set_has_posx();
  inline void clear_has_posx();
  inline void set_has_posz();
  inline void clear_has_posz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serverid_;
  ::google::protobuf::int32 posserial_;
  ::google::protobuf::int32 posx_;
  ::google::protobuf::int32 posz_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_STOP* default_instance_;
};
// -------------------------------------------------------------------

class GC_BROADCAST_ATTR : public ::google::protobuf::Message {
 public:
  GC_BROADCAST_ATTR();
  virtual ~GC_BROADCAST_ATTR();

  GC_BROADCAST_ATTR(const GC_BROADCAST_ATTR& from);

  inline GC_BROADCAST_ATTR& operator=(const GC_BROADCAST_ATTR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_BROADCAST_ATTR& default_instance();

  void Swap(GC_BROADCAST_ATTR* other);

  // implements Message ----------------------------------------------

  GC_BROADCAST_ATTR* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_BROADCAST_ATTR& from);
  void MergeFrom(const GC_BROADCAST_ATTR& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ObjId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional int32 CurProfession = 2;
  inline bool has_curprofession() const;
  inline void clear_curprofession();
  static const int kCurProfessionFieldNumber = 2;
  inline ::google::protobuf::int32 curprofession() const;
  inline void set_curprofession(::google::protobuf::int32 value);

  // optional string Name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 CurForce = 4;
  inline bool has_curforce() const;
  inline void clear_curforce();
  static const int kCurForceFieldNumber = 4;
  inline ::google::protobuf::int32 curforce() const;
  inline void set_curforce(::google::protobuf::int32 value);

  // optional int32 MoveSpeed = 5;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 5;
  inline ::google::protobuf::int32 movespeed() const;
  inline void set_movespeed(::google::protobuf::int32 value);

  // optional int32 bDie = 6;
  inline bool has_bdie() const;
  inline void clear_bdie();
  static const int kBDieFieldNumber = 6;
  inline ::google::protobuf::int32 bdie() const;
  inline void set_bdie(::google::protobuf::int32 value);

  // optional int32 faceDir = 7;
  inline bool has_facedir() const;
  inline void clear_facedir();
  static const int kFaceDirFieldNumber = 7;
  inline ::google::protobuf::int32 facedir() const;
  inline void set_facedir(::google::protobuf::int32 value);

  // optional int32 ModelVisualID = 8;
  inline bool has_modelvisualid() const;
  inline void clear_modelvisualid();
  static const int kModelVisualIDFieldNumber = 8;
  inline ::google::protobuf::int32 modelvisualid() const;
  inline void set_modelvisualid(::google::protobuf::int32 value);

  // optional int32 WeaponDataID = 9;
  inline bool has_weapondataid() const;
  inline void clear_weapondataid();
  static const int kWeaponDataIDFieldNumber = 9;
  inline ::google::protobuf::int32 weapondataid() const;
  inline void set_weapondataid(::google::protobuf::int32 value);

  // optional int32 WeaponEffectGem = 11;
  inline bool has_weaponeffectgem() const;
  inline void clear_weaponeffectgem();
  static const int kWeaponEffectGemFieldNumber = 11;
  inline ::google::protobuf::int32 weaponeffectgem() const;
  inline void set_weaponeffectgem(::google::protobuf::int32 value);

  // optional int32 StealthLev = 12;
  inline bool has_stealthlev() const;
  inline void clear_stealthlev();
  static const int kStealthLevFieldNumber = 12;
  inline ::google::protobuf::int32 stealthlev() const;
  inline void set_stealthlev(::google::protobuf::int32 value);

  // optional int32 VipCost = 13;
  inline bool has_vipcost() const;
  inline void clear_vipcost();
  static const int kVipCostFieldNumber = 13;
  inline ::google::protobuf::int32 vipcost() const;
  inline void set_vipcost(::google::protobuf::int32 value);

  // optional int32 CombatValue = 14;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 14;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // optional int32 bindparent = 15;
  inline bool has_bindparent() const;
  inline void clear_bindparent();
  static const int kBindparentFieldNumber = 15;
  inline ::google::protobuf::int32 bindparent() const;
  inline void set_bindparent(::google::protobuf::int32 value);

  // repeated int32 bindchildren = 16;
  inline int bindchildren_size() const;
  inline void clear_bindchildren();
  static const int kBindchildrenFieldNumber = 16;
  inline ::google::protobuf::int32 bindchildren(int index) const;
  inline void set_bindchildren(int index, ::google::protobuf::int32 value);
  inline void add_bindchildren(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      bindchildren() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_bindchildren();

  // @@protoc_insertion_point(class_scope:GC_BROADCAST_ATTR)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_curprofession();
  inline void clear_has_curprofession();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_curforce();
  inline void clear_has_curforce();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_bdie();
  inline void clear_has_bdie();
  inline void set_has_facedir();
  inline void clear_has_facedir();
  inline void set_has_modelvisualid();
  inline void clear_has_modelvisualid();
  inline void set_has_weapondataid();
  inline void clear_has_weapondataid();
  inline void set_has_weaponeffectgem();
  inline void clear_has_weaponeffectgem();
  inline void set_has_stealthlev();
  inline void clear_has_stealthlev();
  inline void set_has_vipcost();
  inline void clear_has_vipcost();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_bindparent();
  inline void clear_has_bindparent();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 curprofession_;
  ::std::string* name_;
  ::google::protobuf::int32 curforce_;
  ::google::protobuf::int32 movespeed_;
  ::google::protobuf::int32 bdie_;
  ::google::protobuf::int32 facedir_;
  ::google::protobuf::int32 modelvisualid_;
  ::google::protobuf::int32 weapondataid_;
  ::google::protobuf::int32 weaponeffectgem_;
  ::google::protobuf::int32 stealthlev_;
  ::google::protobuf::int32 vipcost_;
  ::google::protobuf::int32 combatvalue_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > bindchildren_;
  ::google::protobuf::int32 bindparent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_BROADCAST_ATTR* default_instance_;
};
// -------------------------------------------------------------------

class GC_SYN_ATTR : public ::google::protobuf::Message {
 public:
  GC_SYN_ATTR();
  virtual ~GC_SYN_ATTR();

  GC_SYN_ATTR(const GC_SYN_ATTR& from);

  inline GC_SYN_ATTR& operator=(const GC_SYN_ATTR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_SYN_ATTR& default_instance();

  void Swap(GC_SYN_ATTR* other);

  // implements Message ----------------------------------------------

  GC_SYN_ATTR* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_SYN_ATTR& from);
  void MergeFrom(const GC_SYN_ATTR& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ObjId = 1;
  inline bool has_objid() const;
  inline void clear_objid();
  static const int kObjIdFieldNumber = 1;
  inline ::google::protobuf::int32 objid() const;
  inline void set_objid(::google::protobuf::int32 value);

  // optional int32 CurHp = 2;
  inline bool has_curhp() const;
  inline void clear_curhp();
  static const int kCurHpFieldNumber = 2;
  inline ::google::protobuf::int32 curhp() const;
  inline void set_curhp(::google::protobuf::int32 value);

  // optional int32 CurMp = 3;
  inline bool has_curmp() const;
  inline void clear_curmp();
  static const int kCurMpFieldNumber = 3;
  inline ::google::protobuf::int32 curmp() const;
  inline void set_curmp(::google::protobuf::int32 value);

  // optional int32 CurXp = 4;
  inline bool has_curxp() const;
  inline void clear_curxp();
  static const int kCurXpFieldNumber = 4;
  inline ::google::protobuf::int32 curxp() const;
  inline void set_curxp(::google::protobuf::int32 value);

  // optional int32 MaxHP = 5;
  inline bool has_maxhp() const;
  inline void clear_maxhp();
  static const int kMaxHPFieldNumber = 5;
  inline ::google::protobuf::int32 maxhp() const;
  inline void set_maxhp(::google::protobuf::int32 value);

  // optional int32 MaxMP = 6;
  inline bool has_maxmp() const;
  inline void clear_maxmp();
  static const int kMaxMPFieldNumber = 6;
  inline ::google::protobuf::int32 maxmp() const;
  inline void set_maxmp(::google::protobuf::int32 value);

  // optional int32 MaxXP = 7;
  inline bool has_maxxp() const;
  inline void clear_maxxp();
  static const int kMaxXPFieldNumber = 7;
  inline ::google::protobuf::int32 maxxp() const;
  inline void set_maxxp(::google::protobuf::int32 value);

  // optional int32 CurLev = 8;
  inline bool has_curlev() const;
  inline void clear_curlev();
  static const int kCurLevFieldNumber = 8;
  inline ::google::protobuf::int32 curlev() const;
  inline void set_curlev(::google::protobuf::int32 value);

  // optional int32 CurExp = 9;
  inline bool has_curexp() const;
  inline void clear_curexp();
  static const int kCurExpFieldNumber = 9;
  inline ::google::protobuf::int32 curexp() const;
  inline void set_curexp(::google::protobuf::int32 value);

  // optional int32 CurMoney = 10;
  inline bool has_curmoney() const;
  inline void clear_curmoney();
  static const int kCurMoneyFieldNumber = 10;
  inline ::google::protobuf::int32 curmoney() const;
  inline void set_curmoney(::google::protobuf::int32 value);

  // optional int32 CurYuanBao = 11;
  inline bool has_curyuanbao() const;
  inline void clear_curyuanbao();
  static const int kCurYuanBaoFieldNumber = 11;
  inline ::google::protobuf::int32 curyuanbao() const;
  inline void set_curyuanbao(::google::protobuf::int32 value);

  // optional int32 CurBDYuanBao = 12;
  inline bool has_curbdyuanbao() const;
  inline void clear_curbdyuanbao();
  static const int kCurBDYuanBaoFieldNumber = 12;
  inline ::google::protobuf::int32 curbdyuanbao() const;
  inline void set_curbdyuanbao(::google::protobuf::int32 value);

  // optional int32 CurZhenQi = 13;
  inline bool has_curzhenqi() const;
  inline void clear_curzhenqi();
  static const int kCurZhenQiFieldNumber = 13;
  inline ::google::protobuf::int32 curzhenqi() const;
  inline void set_curzhenqi(::google::protobuf::int32 value);

  // optional int32 isInCombat = 14;
  inline bool has_isincombat() const;
  inline void clear_isincombat();
  static const int kIsInCombatFieldNumber = 14;
  inline ::google::protobuf::int32 isincombat() const;
  inline void set_isincombat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_SYN_ATTR)
 private:
  inline void set_has_objid();
  inline void clear_has_objid();
  inline void set_has_curhp();
  inline void clear_has_curhp();
  inline void set_has_curmp();
  inline void clear_has_curmp();
  inline void set_has_curxp();
  inline void clear_has_curxp();
  inline void set_has_maxhp();
  inline void clear_has_maxhp();
  inline void set_has_maxmp();
  inline void clear_has_maxmp();
  inline void set_has_maxxp();
  inline void clear_has_maxxp();
  inline void set_has_curlev();
  inline void clear_has_curlev();
  inline void set_has_curexp();
  inline void clear_has_curexp();
  inline void set_has_curmoney();
  inline void clear_has_curmoney();
  inline void set_has_curyuanbao();
  inline void clear_has_curyuanbao();
  inline void set_has_curbdyuanbao();
  inline void clear_has_curbdyuanbao();
  inline void set_has_curzhenqi();
  inline void clear_has_curzhenqi();
  inline void set_has_isincombat();
  inline void clear_has_isincombat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 objid_;
  ::google::protobuf::int32 curhp_;
  ::google::protobuf::int32 curmp_;
  ::google::protobuf::int32 curxp_;
  ::google::protobuf::int32 maxhp_;
  ::google::protobuf::int32 maxmp_;
  ::google::protobuf::int32 maxxp_;
  ::google::protobuf::int32 curlev_;
  ::google::protobuf::int32 curexp_;
  ::google::protobuf::int32 curmoney_;
  ::google::protobuf::int32 curyuanbao_;
  ::google::protobuf::int32 curbdyuanbao_;
  ::google::protobuf::int32 curzhenqi_;
  ::google::protobuf::int32 isincombat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_SYN_ATTR* default_instance_;
};
// -------------------------------------------------------------------

class GC_SYNC_COMMONDATA : public ::google::protobuf::Message {
 public:
  GC_SYNC_COMMONDATA();
  virtual ~GC_SYNC_COMMONDATA();

  GC_SYNC_COMMONDATA(const GC_SYNC_COMMONDATA& from);

  inline GC_SYNC_COMMONDATA& operator=(const GC_SYNC_COMMONDATA& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_SYNC_COMMONDATA& default_instance();

  void Swap(GC_SYNC_COMMONDATA* other);

  // implements Message ----------------------------------------------

  GC_SYNC_COMMONDATA* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_SYNC_COMMONDATA& from);
  void MergeFrom(const GC_SYNC_COMMONDATA& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 nIndex = 1;
  inline int nindex_size() const;
  inline void clear_nindex();
  static const int kNIndexFieldNumber = 1;
  inline ::google::protobuf::int32 nindex(int index) const;
  inline void set_nindex(int index, ::google::protobuf::int32 value);
  inline void add_nindex(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nindex();

  // repeated int32 nValue = 2;
  inline int nvalue_size() const;
  inline void clear_nvalue();
  static const int kNValueFieldNumber = 2;
  inline ::google::protobuf::int32 nvalue(int index) const;
  inline void set_nvalue(int index, ::google::protobuf::int32 value);
  inline void add_nvalue(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nvalue();

  // @@protoc_insertion_point(class_scope:GC_SYNC_COMMONDATA)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_SYNC_COMMONDATA* default_instance_;
};
// -------------------------------------------------------------------

class GC_SYNC_COMMONFLAG : public ::google::protobuf::Message {
 public:
  GC_SYNC_COMMONFLAG();
  virtual ~GC_SYNC_COMMONFLAG();

  GC_SYNC_COMMONFLAG(const GC_SYNC_COMMONFLAG& from);

  inline GC_SYNC_COMMONFLAG& operator=(const GC_SYNC_COMMONFLAG& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_SYNC_COMMONFLAG& default_instance();

  void Swap(GC_SYNC_COMMONFLAG* other);

  // implements Message ----------------------------------------------

  GC_SYNC_COMMONFLAG* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_SYNC_COMMONFLAG& from);
  void MergeFrom(const GC_SYNC_COMMONFLAG& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 nIndex = 1;
  inline int nindex_size() const;
  inline void clear_nindex();
  static const int kNIndexFieldNumber = 1;
  inline ::google::protobuf::int32 nindex(int index) const;
  inline void set_nindex(int index, ::google::protobuf::int32 value);
  inline void add_nindex(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nindex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nindex();

  // repeated int32 nValue = 2;
  inline int nvalue_size() const;
  inline void clear_nvalue();
  static const int kNValueFieldNumber = 2;
  inline ::google::protobuf::int32 nvalue(int index) const;
  inline void set_nvalue(int index, ::google::protobuf::int32 value);
  inline void add_nvalue(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      nvalue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_nvalue();

  // @@protoc_insertion_point(class_scope:GC_SYNC_COMMONFLAG)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nindex_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > nvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_SYNC_COMMONFLAG* default_instance_;
};
// -------------------------------------------------------------------

class CG_ASK_SETCOMMONFLAG : public ::google::protobuf::Message {
 public:
  CG_ASK_SETCOMMONFLAG();
  virtual ~CG_ASK_SETCOMMONFLAG();

  CG_ASK_SETCOMMONFLAG(const CG_ASK_SETCOMMONFLAG& from);

  inline CG_ASK_SETCOMMONFLAG& operator=(const CG_ASK_SETCOMMONFLAG& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CG_ASK_SETCOMMONFLAG& default_instance();

  void Swap(CG_ASK_SETCOMMONFLAG* other);

  // implements Message ----------------------------------------------

  CG_ASK_SETCOMMONFLAG* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CG_ASK_SETCOMMONFLAG& from);
  void MergeFrom(const CG_ASK_SETCOMMONFLAG& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nBits = 1;
  inline bool has_nbits() const;
  inline void clear_nbits();
  static const int kNBitsFieldNumber = 1;
  inline ::google::protobuf::int32 nbits() const;
  inline void set_nbits(::google::protobuf::int32 value);

  // required int32 nFlag = 2;
  inline bool has_nflag() const;
  inline void clear_nflag();
  static const int kNFlagFieldNumber = 2;
  inline ::google::protobuf::int32 nflag() const;
  inline void set_nflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CG_ASK_SETCOMMONFLAG)
 private:
  inline void set_has_nbits();
  inline void clear_has_nbits();
  inline void set_has_nflag();
  inline void clear_has_nflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nbits_;
  ::google::protobuf::int32 nflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static CG_ASK_SETCOMMONFLAG* default_instance_;
};
// -------------------------------------------------------------------

class GC_ASK_COMMONFLAG_RET : public ::google::protobuf::Message {
 public:
  GC_ASK_COMMONFLAG_RET();
  virtual ~GC_ASK_COMMONFLAG_RET();

  GC_ASK_COMMONFLAG_RET(const GC_ASK_COMMONFLAG_RET& from);

  inline GC_ASK_COMMONFLAG_RET& operator=(const GC_ASK_COMMONFLAG_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GC_ASK_COMMONFLAG_RET& default_instance();

  void Swap(GC_ASK_COMMONFLAG_RET* other);

  // implements Message ----------------------------------------------

  GC_ASK_COMMONFLAG_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GC_ASK_COMMONFLAG_RET& from);
  void MergeFrom(const GC_ASK_COMMONFLAG_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 nBits = 1;
  inline bool has_nbits() const;
  inline void clear_nbits();
  static const int kNBitsFieldNumber = 1;
  inline ::google::protobuf::int32 nbits() const;
  inline void set_nbits(::google::protobuf::int32 value);

  // required int32 nFlag = 2;
  inline bool has_nflag() const;
  inline void clear_nflag();
  static const int kNFlagFieldNumber = 2;
  inline ::google::protobuf::int32 nflag() const;
  inline void set_nflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GC_ASK_COMMONFLAG_RET)
 private:
  inline void set_has_nbits();
  inline void clear_has_nbits();
  inline void set_has_nflag();
  inline void clear_has_nflag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 nbits_;
  ::google::protobuf::int32 nflag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_PBMessage_2eproto();
  friend void protobuf_AssignDesc_PBMessage_2eproto();
  friend void protobuf_ShutdownFile_PBMessage_2eproto();

  void InitAsDefaultInstance();
  static GC_ASK_COMMONFLAG_RET* default_instance_;
};
// ===================================================================


// ===================================================================

// CG_PING

// optional int32 noparam = 1;
inline bool CG_PING::has_noparam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_PING::set_has_noparam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_PING::clear_has_noparam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_PING::clear_noparam() {
  noparam_ = 0;
  clear_has_noparam();
}
inline ::google::protobuf::int32 CG_PING::noparam() const {
  return noparam_;
}
inline void CG_PING::set_noparam(::google::protobuf::int32 value) {
  set_has_noparam();
  noparam_ = value;
}

// -------------------------------------------------------------------

// GC_RET_PING

// optional int32 noparam = 1;
inline bool GC_RET_PING::has_noparam() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_RET_PING::set_has_noparam() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_RET_PING::clear_has_noparam() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_RET_PING::clear_noparam() {
  noparam_ = 0;
  clear_has_noparam();
}
inline ::google::protobuf::int32 GC_RET_PING::noparam() const {
  return noparam_;
}
inline void GC_RET_PING::set_noparam(::google::protobuf::int32 value) {
  set_has_noparam();
  noparam_ = value;
}

// -------------------------------------------------------------------

// CG_LOGIN

// required int32 vtype = 1;
inline bool CG_LOGIN::has_vtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_LOGIN::set_has_vtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_LOGIN::clear_has_vtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_LOGIN::clear_vtype() {
  vtype_ = 0;
  clear_has_vtype();
}
inline ::google::protobuf::int32 CG_LOGIN::vtype() const {
  return vtype_;
}
inline void CG_LOGIN::set_vtype(::google::protobuf::int32 value) {
  set_has_vtype();
  vtype_ = value;
}

// required int32 gameversion = 2;
inline bool CG_LOGIN::has_gameversion() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_LOGIN::set_has_gameversion() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_LOGIN::clear_has_gameversion() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_LOGIN::clear_gameversion() {
  gameversion_ = 0;
  clear_has_gameversion();
}
inline ::google::protobuf::int32 CG_LOGIN::gameversion() const {
  return gameversion_;
}
inline void CG_LOGIN::set_gameversion(::google::protobuf::int32 value) {
  set_has_gameversion();
  gameversion_ = value;
}

// required int32 programversion = 3;
inline bool CG_LOGIN::has_programversion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_LOGIN::set_has_programversion() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_LOGIN::clear_has_programversion() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_LOGIN::clear_programversion() {
  programversion_ = 0;
  clear_has_programversion();
}
inline ::google::protobuf::int32 CG_LOGIN::programversion() const {
  return programversion_;
}
inline void CG_LOGIN::set_programversion(::google::protobuf::int32 value) {
  set_has_programversion();
  programversion_ = value;
}

// required int32 publicresourceversion = 4;
inline bool CG_LOGIN::has_publicresourceversion() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_LOGIN::set_has_publicresourceversion() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_LOGIN::clear_has_publicresourceversion() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_LOGIN::clear_publicresourceversion() {
  publicresourceversion_ = 0;
  clear_has_publicresourceversion();
}
inline ::google::protobuf::int32 CG_LOGIN::publicresourceversion() const {
  return publicresourceversion_;
}
inline void CG_LOGIN::set_publicresourceversion(::google::protobuf::int32 value) {
  set_has_publicresourceversion();
  publicresourceversion_ = value;
}

// required int32 maxpacketid = 5;
inline bool CG_LOGIN::has_maxpacketid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CG_LOGIN::set_has_maxpacketid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CG_LOGIN::clear_has_maxpacketid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CG_LOGIN::clear_maxpacketid() {
  maxpacketid_ = 0;
  clear_has_maxpacketid();
}
inline ::google::protobuf::int32 CG_LOGIN::maxpacketid() const {
  return maxpacketid_;
}
inline void CG_LOGIN::set_maxpacketid(::google::protobuf::int32 value) {
  set_has_maxpacketid();
  maxpacketid_ = value;
}

// required int32 forceenter = 6;
inline bool CG_LOGIN::has_forceenter() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CG_LOGIN::set_has_forceenter() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CG_LOGIN::clear_has_forceenter() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CG_LOGIN::clear_forceenter() {
  forceenter_ = 0;
  clear_has_forceenter();
}
inline ::google::protobuf::int32 CG_LOGIN::forceenter() const {
  return forceenter_;
}
inline void CG_LOGIN::set_forceenter(::google::protobuf::int32 value) {
  set_has_forceenter();
  forceenter_ = value;
}

// required string deviceid = 7;
inline bool CG_LOGIN::has_deviceid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CG_LOGIN::set_has_deviceid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CG_LOGIN::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CG_LOGIN::clear_deviceid() {
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    deviceid_->clear();
  }
  clear_has_deviceid();
}
inline const ::std::string& CG_LOGIN::deviceid() const {
  return *deviceid_;
}
inline void CG_LOGIN::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
}
inline void CG_LOGIN::set_deviceid(const char* value) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(value);
}
inline void CG_LOGIN::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  deviceid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_deviceid() {
  set_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    deviceid_ = new ::std::string;
  }
  return deviceid_;
}
inline ::std::string* CG_LOGIN::release_deviceid() {
  clear_has_deviceid();
  if (deviceid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceid_;
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceid_;
  }
  if (deviceid) {
    set_has_deviceid();
    deviceid_ = deviceid;
  } else {
    clear_has_deviceid();
    deviceid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string devicetype = 8;
inline bool CG_LOGIN::has_devicetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CG_LOGIN::set_has_devicetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CG_LOGIN::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CG_LOGIN::clear_devicetype() {
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    devicetype_->clear();
  }
  clear_has_devicetype();
}
inline const ::std::string& CG_LOGIN::devicetype() const {
  return *devicetype_;
}
inline void CG_LOGIN::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
}
inline void CG_LOGIN::set_devicetype(const char* value) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(value);
}
inline void CG_LOGIN::set_devicetype(const char* value, size_t size) {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  devicetype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_devicetype() {
  set_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    devicetype_ = new ::std::string;
  }
  return devicetype_;
}
inline ::std::string* CG_LOGIN::release_devicetype() {
  clear_has_devicetype();
  if (devicetype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = devicetype_;
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype_ != &::google::protobuf::internal::kEmptyString) {
    delete devicetype_;
  }
  if (devicetype) {
    set_has_devicetype();
    devicetype_ = devicetype;
  } else {
    clear_has_devicetype();
    devicetype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string deviceversion = 9;
inline bool CG_LOGIN::has_deviceversion() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CG_LOGIN::set_has_deviceversion() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CG_LOGIN::clear_has_deviceversion() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CG_LOGIN::clear_deviceversion() {
  if (deviceversion_ != &::google::protobuf::internal::kEmptyString) {
    deviceversion_->clear();
  }
  clear_has_deviceversion();
}
inline const ::std::string& CG_LOGIN::deviceversion() const {
  return *deviceversion_;
}
inline void CG_LOGIN::set_deviceversion(const ::std::string& value) {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  deviceversion_->assign(value);
}
inline void CG_LOGIN::set_deviceversion(const char* value) {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  deviceversion_->assign(value);
}
inline void CG_LOGIN::set_deviceversion(const char* value, size_t size) {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  deviceversion_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_deviceversion() {
  set_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    deviceversion_ = new ::std::string;
  }
  return deviceversion_;
}
inline ::std::string* CG_LOGIN::release_deviceversion() {
  clear_has_deviceversion();
  if (deviceversion_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceversion_;
    deviceversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_deviceversion(::std::string* deviceversion) {
  if (deviceversion_ != &::google::protobuf::internal::kEmptyString) {
    delete deviceversion_;
  }
  if (deviceversion) {
    set_has_deviceversion();
    deviceversion_ = deviceversion;
  } else {
    clear_has_deviceversion();
    deviceversion_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string account = 10;
inline bool CG_LOGIN::has_account() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CG_LOGIN::set_has_account() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CG_LOGIN::clear_has_account() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CG_LOGIN::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& CG_LOGIN::account() const {
  return *account_;
}
inline void CG_LOGIN::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CG_LOGIN::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void CG_LOGIN::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* CG_LOGIN::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string validateinfo = 11;
inline bool CG_LOGIN::has_validateinfo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CG_LOGIN::set_has_validateinfo() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CG_LOGIN::clear_has_validateinfo() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CG_LOGIN::clear_validateinfo() {
  if (validateinfo_ != &::google::protobuf::internal::kEmptyString) {
    validateinfo_->clear();
  }
  clear_has_validateinfo();
}
inline const ::std::string& CG_LOGIN::validateinfo() const {
  return *validateinfo_;
}
inline void CG_LOGIN::set_validateinfo(const ::std::string& value) {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  validateinfo_->assign(value);
}
inline void CG_LOGIN::set_validateinfo(const char* value) {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  validateinfo_->assign(value);
}
inline void CG_LOGIN::set_validateinfo(const char* value, size_t size) {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  validateinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_validateinfo() {
  set_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    validateinfo_ = new ::std::string;
  }
  return validateinfo_;
}
inline ::std::string* CG_LOGIN::release_validateinfo() {
  clear_has_validateinfo();
  if (validateinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = validateinfo_;
    validateinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_validateinfo(::std::string* validateinfo) {
  if (validateinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete validateinfo_;
  }
  if (validateinfo) {
    set_has_validateinfo();
    validateinfo_ = validateinfo;
  } else {
    clear_has_validateinfo();
    validateinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string channelid = 12;
inline bool CG_LOGIN::has_channelid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CG_LOGIN::set_has_channelid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CG_LOGIN::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CG_LOGIN::clear_channelid() {
  if (channelid_ != &::google::protobuf::internal::kEmptyString) {
    channelid_->clear();
  }
  clear_has_channelid();
}
inline const ::std::string& CG_LOGIN::channelid() const {
  return *channelid_;
}
inline void CG_LOGIN::set_channelid(const ::std::string& value) {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  channelid_->assign(value);
}
inline void CG_LOGIN::set_channelid(const char* value) {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  channelid_->assign(value);
}
inline void CG_LOGIN::set_channelid(const char* value, size_t size) {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  channelid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_channelid() {
  set_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    channelid_ = new ::std::string;
  }
  return channelid_;
}
inline ::std::string* CG_LOGIN::release_channelid() {
  clear_has_channelid();
  if (channelid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = channelid_;
    channelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_channelid(::std::string* channelid) {
  if (channelid_ != &::google::protobuf::internal::kEmptyString) {
    delete channelid_;
  }
  if (channelid) {
    set_has_channelid();
    channelid_ = channelid;
  } else {
    clear_has_channelid();
    channelid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string mediachannel = 13;
inline bool CG_LOGIN::has_mediachannel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CG_LOGIN::set_has_mediachannel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CG_LOGIN::clear_has_mediachannel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CG_LOGIN::clear_mediachannel() {
  if (mediachannel_ != &::google::protobuf::internal::kEmptyString) {
    mediachannel_->clear();
  }
  clear_has_mediachannel();
}
inline const ::std::string& CG_LOGIN::mediachannel() const {
  return *mediachannel_;
}
inline void CG_LOGIN::set_mediachannel(const ::std::string& value) {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  mediachannel_->assign(value);
}
inline void CG_LOGIN::set_mediachannel(const char* value) {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  mediachannel_->assign(value);
}
inline void CG_LOGIN::set_mediachannel(const char* value, size_t size) {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  mediachannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_mediachannel() {
  set_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    mediachannel_ = new ::std::string;
  }
  return mediachannel_;
}
inline ::std::string* CG_LOGIN::release_mediachannel() {
  clear_has_mediachannel();
  if (mediachannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mediachannel_;
    mediachannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_mediachannel(::std::string* mediachannel) {
  if (mediachannel_ != &::google::protobuf::internal::kEmptyString) {
    delete mediachannel_;
  }
  if (mediachannel) {
    set_has_mediachannel();
    mediachannel_ = mediachannel;
  } else {
    clear_has_mediachannel();
    mediachannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rapidvalidatecode = 14;
inline bool CG_LOGIN::has_rapidvalidatecode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CG_LOGIN::set_has_rapidvalidatecode() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CG_LOGIN::clear_has_rapidvalidatecode() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CG_LOGIN::clear_rapidvalidatecode() {
  rapidvalidatecode_ = 0;
  clear_has_rapidvalidatecode();
}
inline ::google::protobuf::int32 CG_LOGIN::rapidvalidatecode() const {
  return rapidvalidatecode_;
}
inline void CG_LOGIN::set_rapidvalidatecode(::google::protobuf::int32 value) {
  set_has_rapidvalidatecode();
  rapidvalidatecode_ = value;
}

// required int32 reservedint1 = 15;
inline bool CG_LOGIN::has_reservedint1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CG_LOGIN::clear_has_reservedint1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CG_LOGIN::clear_reservedint1() {
  reservedint1_ = 0;
  clear_has_reservedint1();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint1() const {
  return reservedint1_;
}
inline void CG_LOGIN::set_reservedint1(::google::protobuf::int32 value) {
  set_has_reservedint1();
  reservedint1_ = value;
}

// required int32 reservedint2 = 16;
inline bool CG_LOGIN::has_reservedint2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CG_LOGIN::clear_has_reservedint2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CG_LOGIN::clear_reservedint2() {
  reservedint2_ = 0;
  clear_has_reservedint2();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint2() const {
  return reservedint2_;
}
inline void CG_LOGIN::set_reservedint2(::google::protobuf::int32 value) {
  set_has_reservedint2();
  reservedint2_ = value;
}

// required int32 reservedint3 = 17;
inline bool CG_LOGIN::has_reservedint3() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint3() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CG_LOGIN::clear_has_reservedint3() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CG_LOGIN::clear_reservedint3() {
  reservedint3_ = 0;
  clear_has_reservedint3();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint3() const {
  return reservedint3_;
}
inline void CG_LOGIN::set_reservedint3(::google::protobuf::int32 value) {
  set_has_reservedint3();
  reservedint3_ = value;
}

// required int32 reservedint4 = 18;
inline bool CG_LOGIN::has_reservedint4() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CG_LOGIN::set_has_reservedint4() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CG_LOGIN::clear_has_reservedint4() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CG_LOGIN::clear_reservedint4() {
  reservedint4_ = 0;
  clear_has_reservedint4();
}
inline ::google::protobuf::int32 CG_LOGIN::reservedint4() const {
  return reservedint4_;
}
inline void CG_LOGIN::set_reservedint4(::google::protobuf::int32 value) {
  set_has_reservedint4();
  reservedint4_ = value;
}

// required string reservedstring1 = 19;
inline bool CG_LOGIN::has_reservedstring1() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring1() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CG_LOGIN::clear_has_reservedstring1() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CG_LOGIN::clear_reservedstring1() {
  if (reservedstring1_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring1_->clear();
  }
  clear_has_reservedstring1();
}
inline const ::std::string& CG_LOGIN::reservedstring1() const {
  return *reservedstring1_;
}
inline void CG_LOGIN::set_reservedstring1(const ::std::string& value) {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  reservedstring1_->assign(value);
}
inline void CG_LOGIN::set_reservedstring1(const char* value) {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  reservedstring1_->assign(value);
}
inline void CG_LOGIN::set_reservedstring1(const char* value, size_t size) {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  reservedstring1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring1() {
  set_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring1_ = new ::std::string;
  }
  return reservedstring1_;
}
inline ::std::string* CG_LOGIN::release_reservedstring1() {
  clear_has_reservedstring1();
  if (reservedstring1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring1_;
    reservedstring1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring1(::std::string* reservedstring1) {
  if (reservedstring1_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring1_;
  }
  if (reservedstring1) {
    set_has_reservedstring1();
    reservedstring1_ = reservedstring1;
  } else {
    clear_has_reservedstring1();
    reservedstring1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reservedstring2 = 20;
inline bool CG_LOGIN::has_reservedstring2() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring2() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CG_LOGIN::clear_has_reservedstring2() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CG_LOGIN::clear_reservedstring2() {
  if (reservedstring2_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring2_->clear();
  }
  clear_has_reservedstring2();
}
inline const ::std::string& CG_LOGIN::reservedstring2() const {
  return *reservedstring2_;
}
inline void CG_LOGIN::set_reservedstring2(const ::std::string& value) {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  reservedstring2_->assign(value);
}
inline void CG_LOGIN::set_reservedstring2(const char* value) {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  reservedstring2_->assign(value);
}
inline void CG_LOGIN::set_reservedstring2(const char* value, size_t size) {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  reservedstring2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring2() {
  set_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring2_ = new ::std::string;
  }
  return reservedstring2_;
}
inline ::std::string* CG_LOGIN::release_reservedstring2() {
  clear_has_reservedstring2();
  if (reservedstring2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring2_;
    reservedstring2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring2(::std::string* reservedstring2) {
  if (reservedstring2_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring2_;
  }
  if (reservedstring2) {
    set_has_reservedstring2();
    reservedstring2_ = reservedstring2;
  } else {
    clear_has_reservedstring2();
    reservedstring2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reservedstring3 = 21;
inline bool CG_LOGIN::has_reservedstring3() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring3() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CG_LOGIN::clear_has_reservedstring3() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CG_LOGIN::clear_reservedstring3() {
  if (reservedstring3_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring3_->clear();
  }
  clear_has_reservedstring3();
}
inline const ::std::string& CG_LOGIN::reservedstring3() const {
  return *reservedstring3_;
}
inline void CG_LOGIN::set_reservedstring3(const ::std::string& value) {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  reservedstring3_->assign(value);
}
inline void CG_LOGIN::set_reservedstring3(const char* value) {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  reservedstring3_->assign(value);
}
inline void CG_LOGIN::set_reservedstring3(const char* value, size_t size) {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  reservedstring3_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring3() {
  set_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring3_ = new ::std::string;
  }
  return reservedstring3_;
}
inline ::std::string* CG_LOGIN::release_reservedstring3() {
  clear_has_reservedstring3();
  if (reservedstring3_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring3_;
    reservedstring3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring3(::std::string* reservedstring3) {
  if (reservedstring3_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring3_;
  }
  if (reservedstring3) {
    set_has_reservedstring3();
    reservedstring3_ = reservedstring3;
  } else {
    clear_has_reservedstring3();
    reservedstring3_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string reservedstring4 = 22;
inline bool CG_LOGIN::has_reservedstring4() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CG_LOGIN::set_has_reservedstring4() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CG_LOGIN::clear_has_reservedstring4() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CG_LOGIN::clear_reservedstring4() {
  if (reservedstring4_ != &::google::protobuf::internal::kEmptyString) {
    reservedstring4_->clear();
  }
  clear_has_reservedstring4();
}
inline const ::std::string& CG_LOGIN::reservedstring4() const {
  return *reservedstring4_;
}
inline void CG_LOGIN::set_reservedstring4(const ::std::string& value) {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  reservedstring4_->assign(value);
}
inline void CG_LOGIN::set_reservedstring4(const char* value) {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  reservedstring4_->assign(value);
}
inline void CG_LOGIN::set_reservedstring4(const char* value, size_t size) {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  reservedstring4_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_LOGIN::mutable_reservedstring4() {
  set_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    reservedstring4_ = new ::std::string;
  }
  return reservedstring4_;
}
inline ::std::string* CG_LOGIN::release_reservedstring4() {
  clear_has_reservedstring4();
  if (reservedstring4_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reservedstring4_;
    reservedstring4_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_LOGIN::set_allocated_reservedstring4(::std::string* reservedstring4) {
  if (reservedstring4_ != &::google::protobuf::internal::kEmptyString) {
    delete reservedstring4_;
  }
  if (reservedstring4) {
    set_has_reservedstring4();
    reservedstring4_ = reservedstring4;
  } else {
    clear_has_reservedstring4();
    reservedstring4_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GC_LOGIN_RET

// required int32 result = 1;
inline bool GC_LOGIN_RET::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_LOGIN_RET::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_LOGIN_RET::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_LOGIN_RET::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::result() const {
  return result_;
}
inline void GC_LOGIN_RET::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 validateresult = 2;
inline bool GC_LOGIN_RET::has_validateresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_LOGIN_RET::set_has_validateresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_LOGIN_RET::clear_has_validateresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_LOGIN_RET::clear_validateresult() {
  validateresult_ = 0;
  clear_has_validateresult();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::validateresult() const {
  return validateresult_;
}
inline void GC_LOGIN_RET::set_validateresult(::google::protobuf::int32 value) {
  set_has_validateresult();
  validateresult_ = value;
}

// required string userid = 3;
inline bool GC_LOGIN_RET::has_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_LOGIN_RET::set_has_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_LOGIN_RET::clear_has_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_LOGIN_RET::clear_userid() {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    userid_->clear();
  }
  clear_has_userid();
}
inline const ::std::string& GC_LOGIN_RET::userid() const {
  return *userid_;
}
inline void GC_LOGIN_RET::set_userid(const ::std::string& value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GC_LOGIN_RET::set_userid(const char* value) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(value);
}
inline void GC_LOGIN_RET::set_userid(const char* value, size_t size) {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  userid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::mutable_userid() {
  set_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    userid_ = new ::std::string;
  }
  return userid_;
}
inline ::std::string* GC_LOGIN_RET::release_userid() {
  clear_has_userid();
  if (userid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userid_;
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_LOGIN_RET::set_allocated_userid(::std::string* userid) {
  if (userid_ != &::google::protobuf::internal::kEmptyString) {
    delete userid_;
  }
  if (userid) {
    set_has_userid();
    userid_ = userid;
  } else {
    clear_has_userid();
    userid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string oid = 4;
inline bool GC_LOGIN_RET::has_oid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_LOGIN_RET::set_has_oid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_LOGIN_RET::clear_has_oid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_LOGIN_RET::clear_oid() {
  if (oid_ != &::google::protobuf::internal::kEmptyString) {
    oid_->clear();
  }
  clear_has_oid();
}
inline const ::std::string& GC_LOGIN_RET::oid() const {
  return *oid_;
}
inline void GC_LOGIN_RET::set_oid(const ::std::string& value) {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  oid_->assign(value);
}
inline void GC_LOGIN_RET::set_oid(const char* value) {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  oid_->assign(value);
}
inline void GC_LOGIN_RET::set_oid(const char* value, size_t size) {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  oid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::mutable_oid() {
  set_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    oid_ = new ::std::string;
  }
  return oid_;
}
inline ::std::string* GC_LOGIN_RET::release_oid() {
  clear_has_oid();
  if (oid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = oid_;
    oid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_LOGIN_RET::set_allocated_oid(::std::string* oid) {
  if (oid_ != &::google::protobuf::internal::kEmptyString) {
    delete oid_;
  }
  if (oid) {
    set_has_oid();
    oid_ = oid;
  } else {
    clear_has_oid();
    oid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string accesstoken = 5;
inline bool GC_LOGIN_RET::has_accesstoken() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_LOGIN_RET::set_has_accesstoken() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_LOGIN_RET::clear_has_accesstoken() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_LOGIN_RET::clear_accesstoken() {
  if (accesstoken_ != &::google::protobuf::internal::kEmptyString) {
    accesstoken_->clear();
  }
  clear_has_accesstoken();
}
inline const ::std::string& GC_LOGIN_RET::accesstoken() const {
  return *accesstoken_;
}
inline void GC_LOGIN_RET::set_accesstoken(const ::std::string& value) {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(value);
}
inline void GC_LOGIN_RET::set_accesstoken(const char* value) {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(value);
}
inline void GC_LOGIN_RET::set_accesstoken(const char* value, size_t size) {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  accesstoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::mutable_accesstoken() {
  set_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    accesstoken_ = new ::std::string;
  }
  return accesstoken_;
}
inline ::std::string* GC_LOGIN_RET::release_accesstoken() {
  clear_has_accesstoken();
  if (accesstoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = accesstoken_;
    accesstoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_LOGIN_RET::set_allocated_accesstoken(::std::string* accesstoken) {
  if (accesstoken_ != &::google::protobuf::internal::kEmptyString) {
    delete accesstoken_;
  }
  if (accesstoken) {
    set_has_accesstoken();
    accesstoken_ = accesstoken;
  } else {
    clear_has_accesstoken();
    accesstoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 rapidvalidatecode = 6;
inline bool GC_LOGIN_RET::has_rapidvalidatecode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_LOGIN_RET::set_has_rapidvalidatecode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_LOGIN_RET::clear_has_rapidvalidatecode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_LOGIN_RET::clear_rapidvalidatecode() {
  rapidvalidatecode_ = 0;
  clear_has_rapidvalidatecode();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::rapidvalidatecode() const {
  return rapidvalidatecode_;
}
inline void GC_LOGIN_RET::set_rapidvalidatecode(::google::protobuf::int32 value) {
  set_has_rapidvalidatecode();
  rapidvalidatecode_ = value;
}

// repeated uint64 roleGUIDList = 7;
inline int GC_LOGIN_RET::roleguidlist_size() const {
  return roleguidlist_.size();
}
inline void GC_LOGIN_RET::clear_roleguidlist() {
  roleguidlist_.Clear();
}
inline ::google::protobuf::uint64 GC_LOGIN_RET::roleguidlist(int index) const {
  return roleguidlist_.Get(index);
}
inline void GC_LOGIN_RET::set_roleguidlist(int index, ::google::protobuf::uint64 value) {
  roleguidlist_.Set(index, value);
}
inline void GC_LOGIN_RET::add_roleguidlist(::google::protobuf::uint64 value) {
  roleguidlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GC_LOGIN_RET::roleguidlist() const {
  return roleguidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GC_LOGIN_RET::mutable_roleguidlist() {
  return &roleguidlist_;
}

// repeated int32 roleTypeList = 8;
inline int GC_LOGIN_RET::roletypelist_size() const {
  return roletypelist_.size();
}
inline void GC_LOGIN_RET::clear_roletypelist() {
  roletypelist_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::roletypelist(int index) const {
  return roletypelist_.Get(index);
}
inline void GC_LOGIN_RET::set_roletypelist(int index, ::google::protobuf::int32 value) {
  roletypelist_.Set(index, value);
}
inline void GC_LOGIN_RET::add_roletypelist(::google::protobuf::int32 value) {
  roletypelist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::roletypelist() const {
  return roletypelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_roletypelist() {
  return &roletypelist_;
}

// repeated string playerNameList = 9;
inline int GC_LOGIN_RET::playernamelist_size() const {
  return playernamelist_.size();
}
inline void GC_LOGIN_RET::clear_playernamelist() {
  playernamelist_.Clear();
}
inline const ::std::string& GC_LOGIN_RET::playernamelist(int index) const {
  return playernamelist_.Get(index);
}
inline ::std::string* GC_LOGIN_RET::mutable_playernamelist(int index) {
  return playernamelist_.Mutable(index);
}
inline void GC_LOGIN_RET::set_playernamelist(int index, const ::std::string& value) {
  playernamelist_.Mutable(index)->assign(value);
}
inline void GC_LOGIN_RET::set_playernamelist(int index, const char* value) {
  playernamelist_.Mutable(index)->assign(value);
}
inline void GC_LOGIN_RET::set_playernamelist(int index, const char* value, size_t size) {
  playernamelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_LOGIN_RET::add_playernamelist() {
  return playernamelist_.Add();
}
inline void GC_LOGIN_RET::add_playernamelist(const ::std::string& value) {
  playernamelist_.Add()->assign(value);
}
inline void GC_LOGIN_RET::add_playernamelist(const char* value) {
  playernamelist_.Add()->assign(value);
}
inline void GC_LOGIN_RET::add_playernamelist(const char* value, size_t size) {
  playernamelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GC_LOGIN_RET::playernamelist() const {
  return playernamelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GC_LOGIN_RET::mutable_playernamelist() {
  return &playernamelist_;
}

// repeated int32 roleLevelList = 10;
inline int GC_LOGIN_RET::rolelevellist_size() const {
  return rolelevellist_.size();
}
inline void GC_LOGIN_RET::clear_rolelevellist() {
  rolelevellist_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::rolelevellist(int index) const {
  return rolelevellist_.Get(index);
}
inline void GC_LOGIN_RET::set_rolelevellist(int index, ::google::protobuf::int32 value) {
  rolelevellist_.Set(index, value);
}
inline void GC_LOGIN_RET::add_rolelevellist(::google::protobuf::int32 value) {
  rolelevellist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::rolelevellist() const {
  return rolelevellist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_rolelevellist() {
  return &rolelevellist_;
}

// repeated int32 ModelVisualID = 11;
inline int GC_LOGIN_RET::modelvisualid_size() const {
  return modelvisualid_.size();
}
inline void GC_LOGIN_RET::clear_modelvisualid() {
  modelvisualid_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::modelvisualid(int index) const {
  return modelvisualid_.Get(index);
}
inline void GC_LOGIN_RET::set_modelvisualid(int index, ::google::protobuf::int32 value) {
  modelvisualid_.Set(index, value);
}
inline void GC_LOGIN_RET::add_modelvisualid(::google::protobuf::int32 value) {
  modelvisualid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::modelvisualid() const {
  return modelvisualid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_modelvisualid() {
  return &modelvisualid_;
}

// repeated int32 WeaponID = 12;
inline int GC_LOGIN_RET::weaponid_size() const {
  return weaponid_.size();
}
inline void GC_LOGIN_RET::clear_weaponid() {
  weaponid_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::weaponid(int index) const {
  return weaponid_.Get(index);
}
inline void GC_LOGIN_RET::set_weaponid(int index, ::google::protobuf::int32 value) {
  weaponid_.Set(index, value);
}
inline void GC_LOGIN_RET::add_weaponid(::google::protobuf::int32 value) {
  weaponid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::weaponid() const {
  return weaponid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_weaponid() {
  return &weaponid_;
}

// repeated int32 WeaponEffectGem = 13;
inline int GC_LOGIN_RET::weaponeffectgem_size() const {
  return weaponeffectgem_.size();
}
inline void GC_LOGIN_RET::clear_weaponeffectgem() {
  weaponeffectgem_.Clear();
}
inline ::google::protobuf::int32 GC_LOGIN_RET::weaponeffectgem(int index) const {
  return weaponeffectgem_.Get(index);
}
inline void GC_LOGIN_RET::set_weaponeffectgem(int index, ::google::protobuf::int32 value) {
  weaponeffectgem_.Set(index, value);
}
inline void GC_LOGIN_RET::add_weaponeffectgem(::google::protobuf::int32 value) {
  weaponeffectgem_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_LOGIN_RET::weaponeffectgem() const {
  return weaponeffectgem_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_LOGIN_RET::mutable_weaponeffectgem() {
  return &weaponeffectgem_;
}

// -------------------------------------------------------------------

// GC_LOGIN_QUEUE_STATUS

// required int32 status = 1;
inline bool GC_LOGIN_QUEUE_STATUS::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_LOGIN_QUEUE_STATUS::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_LOGIN_QUEUE_STATUS::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_LOGIN_QUEUE_STATUS::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GC_LOGIN_QUEUE_STATUS::status() const {
  return status_;
}
inline void GC_LOGIN_QUEUE_STATUS::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// required int32 index = 2;
inline bool GC_LOGIN_QUEUE_STATUS::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_LOGIN_QUEUE_STATUS::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_LOGIN_QUEUE_STATUS::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_LOGIN_QUEUE_STATUS::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 GC_LOGIN_QUEUE_STATUS::index() const {
  return index_;
}
inline void GC_LOGIN_QUEUE_STATUS::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// -------------------------------------------------------------------

// CG_CREATEROLE

// required int32 type = 1;
inline bool CG_CREATEROLE::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_CREATEROLE::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_CREATEROLE::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_CREATEROLE::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CG_CREATEROLE::type() const {
  return type_;
}
inline void CG_CREATEROLE::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required string name = 2;
inline bool CG_CREATEROLE::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_CREATEROLE::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_CREATEROLE::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_CREATEROLE::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CG_CREATEROLE::name() const {
  return *name_;
}
inline void CG_CREATEROLE::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CG_CREATEROLE::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CG_CREATEROLE::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CG_CREATEROLE::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CG_CREATEROLE::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CG_CREATEROLE::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GC_CREATEROLE_RET

// required int32 result = 1;
inline bool GC_CREATEROLE_RET::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_CREATEROLE_RET::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_CREATEROLE_RET::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_CREATEROLE_RET::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GC_CREATEROLE_RET::result() const {
  return result_;
}
inline void GC_CREATEROLE_RET::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required int32 profession = 2;
inline bool GC_CREATEROLE_RET::has_profession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_CREATEROLE_RET::set_has_profession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_CREATEROLE_RET::clear_has_profession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_CREATEROLE_RET::clear_profession() {
  profession_ = 0;
  clear_has_profession();
}
inline ::google::protobuf::int32 GC_CREATEROLE_RET::profession() const {
  return profession_;
}
inline void GC_CREATEROLE_RET::set_profession(::google::protobuf::int32 value) {
  set_has_profession();
  profession_ = value;
}

// required uint64 playerGuid = 3;
inline bool GC_CREATEROLE_RET::has_playerguid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_CREATEROLE_RET::set_has_playerguid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_CREATEROLE_RET::clear_has_playerguid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_CREATEROLE_RET::clear_playerguid() {
  playerguid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerguid();
}
inline ::google::protobuf::uint64 GC_CREATEROLE_RET::playerguid() const {
  return playerguid_;
}
inline void GC_CREATEROLE_RET::set_playerguid(::google::protobuf::uint64 value) {
  set_has_playerguid();
  playerguid_ = value;
}

// required string playerName = 4;
inline bool GC_CREATEROLE_RET::has_playername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_CREATEROLE_RET::set_has_playername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_CREATEROLE_RET::clear_has_playername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_CREATEROLE_RET::clear_playername() {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    playername_->clear();
  }
  clear_has_playername();
}
inline const ::std::string& GC_CREATEROLE_RET::playername() const {
  return *playername_;
}
inline void GC_CREATEROLE_RET::set_playername(const ::std::string& value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void GC_CREATEROLE_RET::set_playername(const char* value) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(value);
}
inline void GC_CREATEROLE_RET::set_playername(const char* value, size_t size) {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  playername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_CREATEROLE_RET::mutable_playername() {
  set_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    playername_ = new ::std::string;
  }
  return playername_;
}
inline ::std::string* GC_CREATEROLE_RET::release_playername() {
  clear_has_playername();
  if (playername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = playername_;
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_CREATEROLE_RET::set_allocated_playername(::std::string* playername) {
  if (playername_ != &::google::protobuf::internal::kEmptyString) {
    delete playername_;
  }
  if (playername) {
    set_has_playername();
    playername_ = playername;
  } else {
    clear_has_playername();
    playername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CG_SELECTROLE

// required uint64 roleGUID = 1;
inline bool CG_SELECTROLE::has_roleguid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_SELECTROLE::set_has_roleguid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_SELECTROLE::clear_has_roleguid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_SELECTROLE::clear_roleguid() {
  roleguid_ = GOOGLE_ULONGLONG(0);
  clear_has_roleguid();
}
inline ::google::protobuf::uint64 CG_SELECTROLE::roleguid() const {
  return roleguid_;
}
inline void CG_SELECTROLE::set_roleguid(::google::protobuf::uint64 value) {
  set_has_roleguid();
  roleguid_ = value;
}

// -------------------------------------------------------------------

// GC_SELECTROLE_RET

// required int32 result = 1;
inline bool GC_SELECTROLE_RET::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_SELECTROLE_RET::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_SELECTROLE_RET::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_SELECTROLE_RET::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 GC_SELECTROLE_RET::result() const {
  return result_;
}
inline void GC_SELECTROLE_RET::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// required uint64 playerGuid = 2;
inline bool GC_SELECTROLE_RET::has_playerguid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_SELECTROLE_RET::set_has_playerguid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_SELECTROLE_RET::clear_has_playerguid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_SELECTROLE_RET::clear_playerguid() {
  playerguid_ = GOOGLE_ULONGLONG(0);
  clear_has_playerguid();
}
inline ::google::protobuf::uint64 GC_SELECTROLE_RET::playerguid() const {
  return playerguid_;
}
inline void GC_SELECTROLE_RET::set_playerguid(::google::protobuf::uint64 value) {
  set_has_playerguid();
  playerguid_ = value;
}

// -------------------------------------------------------------------

// CG_REQ_RANDOMNAME

// required int32 none = 1;
inline bool CG_REQ_RANDOMNAME::has_none() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_REQ_RANDOMNAME::set_has_none() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_REQ_RANDOMNAME::clear_has_none() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_REQ_RANDOMNAME::clear_none() {
  none_ = 0;
  clear_has_none();
}
inline ::google::protobuf::int32 CG_REQ_RANDOMNAME::none() const {
  return none_;
}
inline void CG_REQ_RANDOMNAME::set_none(::google::protobuf::int32 value) {
  set_has_none();
  none_ = value;
}

// -------------------------------------------------------------------

// GC_RET_RANDOMNAME

// repeated string names = 1;
inline int GC_RET_RANDOMNAME::names_size() const {
  return names_.size();
}
inline void GC_RET_RANDOMNAME::clear_names() {
  names_.Clear();
}
inline const ::std::string& GC_RET_RANDOMNAME::names(int index) const {
  return names_.Get(index);
}
inline ::std::string* GC_RET_RANDOMNAME::mutable_names(int index) {
  return names_.Mutable(index);
}
inline void GC_RET_RANDOMNAME::set_names(int index, const ::std::string& value) {
  names_.Mutable(index)->assign(value);
}
inline void GC_RET_RANDOMNAME::set_names(int index, const char* value) {
  names_.Mutable(index)->assign(value);
}
inline void GC_RET_RANDOMNAME::set_names(int index, const char* value, size_t size) {
  names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_RET_RANDOMNAME::add_names() {
  return names_.Add();
}
inline void GC_RET_RANDOMNAME::add_names(const ::std::string& value) {
  names_.Add()->assign(value);
}
inline void GC_RET_RANDOMNAME::add_names(const char* value) {
  names_.Add()->assign(value);
}
inline void GC_RET_RANDOMNAME::add_names(const char* value, size_t size) {
  names_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GC_RET_RANDOMNAME::names() const {
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GC_RET_RANDOMNAME::mutable_names() {
  return &names_;
}

// -------------------------------------------------------------------

// CG_REQ_CHANGE_SCENE

// required int32 ctype = 1;
inline bool CG_REQ_CHANGE_SCENE::has_ctype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_REQ_CHANGE_SCENE::set_has_ctype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_REQ_CHANGE_SCENE::clear_has_ctype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_REQ_CHANGE_SCENE::clear_ctype() {
  ctype_ = 0;
  clear_has_ctype();
}
inline ::google::protobuf::int32 CG_REQ_CHANGE_SCENE::ctype() const {
  return ctype_;
}
inline void CG_REQ_CHANGE_SCENE::set_ctype(::google::protobuf::int32 value) {
  set_has_ctype();
  ctype_ = value;
}

// required int32 teleportid = 2;
inline bool CG_REQ_CHANGE_SCENE::has_teleportid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_REQ_CHANGE_SCENE::set_has_teleportid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_REQ_CHANGE_SCENE::clear_has_teleportid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_REQ_CHANGE_SCENE::clear_teleportid() {
  teleportid_ = 0;
  clear_has_teleportid();
}
inline ::google::protobuf::int32 CG_REQ_CHANGE_SCENE::teleportid() const {
  return teleportid_;
}
inline void CG_REQ_CHANGE_SCENE::set_teleportid(::google::protobuf::int32 value) {
  set_has_teleportid();
  teleportid_ = value;
}

// required int32 sceneclassid = 3;
inline bool CG_REQ_CHANGE_SCENE::has_sceneclassid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_REQ_CHANGE_SCENE::set_has_sceneclassid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_REQ_CHANGE_SCENE::clear_has_sceneclassid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_REQ_CHANGE_SCENE::clear_sceneclassid() {
  sceneclassid_ = 0;
  clear_has_sceneclassid();
}
inline ::google::protobuf::int32 CG_REQ_CHANGE_SCENE::sceneclassid() const {
  return sceneclassid_;
}
inline void CG_REQ_CHANGE_SCENE::set_sceneclassid(::google::protobuf::int32 value) {
  set_has_sceneclassid();
  sceneclassid_ = value;
}

// required int32 sceneinstid = 4;
inline bool CG_REQ_CHANGE_SCENE::has_sceneinstid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_REQ_CHANGE_SCENE::set_has_sceneinstid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_REQ_CHANGE_SCENE::clear_has_sceneinstid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_REQ_CHANGE_SCENE::clear_sceneinstid() {
  sceneinstid_ = 0;
  clear_has_sceneinstid();
}
inline ::google::protobuf::int32 CG_REQ_CHANGE_SCENE::sceneinstid() const {
  return sceneinstid_;
}
inline void CG_REQ_CHANGE_SCENE::set_sceneinstid(::google::protobuf::int32 value) {
  set_has_sceneinstid();
  sceneinstid_ = value;
}

// required int32 posX = 5;
inline bool CG_REQ_CHANGE_SCENE::has_posx() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CG_REQ_CHANGE_SCENE::set_has_posx() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CG_REQ_CHANGE_SCENE::clear_has_posx() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CG_REQ_CHANGE_SCENE::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 CG_REQ_CHANGE_SCENE::posx() const {
  return posx_;
}
inline void CG_REQ_CHANGE_SCENE::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posZ = 6;
inline bool CG_REQ_CHANGE_SCENE::has_posz() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CG_REQ_CHANGE_SCENE::set_has_posz() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CG_REQ_CHANGE_SCENE::clear_has_posz() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CG_REQ_CHANGE_SCENE::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 CG_REQ_CHANGE_SCENE::posz() const {
  return posz_;
}
inline void CG_REQ_CHANGE_SCENE::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// GC_ENTER_SCENE

// required int32 sceneclass = 1;
inline bool GC_ENTER_SCENE::has_sceneclass() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_ENTER_SCENE::set_has_sceneclass() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_ENTER_SCENE::clear_has_sceneclass() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_ENTER_SCENE::clear_sceneclass() {
  sceneclass_ = 0;
  clear_has_sceneclass();
}
inline ::google::protobuf::int32 GC_ENTER_SCENE::sceneclass() const {
  return sceneclass_;
}
inline void GC_ENTER_SCENE::set_sceneclass(::google::protobuf::int32 value) {
  set_has_sceneclass();
  sceneclass_ = value;
}

// required int32 sceneinst = 2;
inline bool GC_ENTER_SCENE::has_sceneinst() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_ENTER_SCENE::set_has_sceneinst() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_ENTER_SCENE::clear_has_sceneinst() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_ENTER_SCENE::clear_sceneinst() {
  sceneinst_ = 0;
  clear_has_sceneinst();
}
inline ::google::protobuf::int32 GC_ENTER_SCENE::sceneinst() const {
  return sceneinst_;
}
inline void GC_ENTER_SCENE::set_sceneinst(::google::protobuf::int32 value) {
  set_has_sceneinst();
  sceneinst_ = value;
}

// required int32 mainplayerserverid = 3;
inline bool GC_ENTER_SCENE::has_mainplayerserverid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_ENTER_SCENE::set_has_mainplayerserverid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_ENTER_SCENE::clear_has_mainplayerserverid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_ENTER_SCENE::clear_mainplayerserverid() {
  mainplayerserverid_ = 0;
  clear_has_mainplayerserverid();
}
inline ::google::protobuf::int32 GC_ENTER_SCENE::mainplayerserverid() const {
  return mainplayerserverid_;
}
inline void GC_ENTER_SCENE::set_mainplayerserverid(::google::protobuf::int32 value) {
  set_has_mainplayerserverid();
  mainplayerserverid_ = value;
}

// required int32 posX = 4;
inline bool GC_ENTER_SCENE::has_posx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_ENTER_SCENE::set_has_posx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_ENTER_SCENE::clear_has_posx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_ENTER_SCENE::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GC_ENTER_SCENE::posx() const {
  return posx_;
}
inline void GC_ENTER_SCENE::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posZ = 5;
inline bool GC_ENTER_SCENE::has_posz() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_ENTER_SCENE::set_has_posz() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_ENTER_SCENE::clear_has_posz() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_ENTER_SCENE::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GC_ENTER_SCENE::posz() const {
  return posz_;
}
inline void GC_ENTER_SCENE::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// CG_ENTER_SCENE_OK

// required int32 isOK = 1;
inline bool CG_ENTER_SCENE_OK::has_isok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_ENTER_SCENE_OK::set_has_isok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_ENTER_SCENE_OK::clear_has_isok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_ENTER_SCENE_OK::clear_isok() {
  isok_ = 0;
  clear_has_isok();
}
inline ::google::protobuf::int32 CG_ENTER_SCENE_OK::isok() const {
  return isok_;
}
inline void CG_ENTER_SCENE_OK::set_isok(::google::protobuf::int32 value) {
  set_has_isok();
  isok_ = value;
}

// -------------------------------------------------------------------

// CG_CONNECTED_HEARTBEAT

// required int32 isresponse = 1;
inline bool CG_CONNECTED_HEARTBEAT::has_isresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_CONNECTED_HEARTBEAT::set_has_isresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_CONNECTED_HEARTBEAT::clear_has_isresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_CONNECTED_HEARTBEAT::clear_isresponse() {
  isresponse_ = 0;
  clear_has_isresponse();
}
inline ::google::protobuf::int32 CG_CONNECTED_HEARTBEAT::isresponse() const {
  return isresponse_;
}
inline void CG_CONNECTED_HEARTBEAT::set_isresponse(::google::protobuf::int32 value) {
  set_has_isresponse();
  isresponse_ = value;
}

// -------------------------------------------------------------------

// GC_CONNECTED_HEARTBEAT

// required int32 serveransitime = 1;
inline bool GC_CONNECTED_HEARTBEAT::has_serveransitime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_CONNECTED_HEARTBEAT::set_has_serveransitime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_CONNECTED_HEARTBEAT::clear_has_serveransitime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_CONNECTED_HEARTBEAT::clear_serveransitime() {
  serveransitime_ = 0;
  clear_has_serveransitime();
}
inline ::google::protobuf::int32 GC_CONNECTED_HEARTBEAT::serveransitime() const {
  return serveransitime_;
}
inline void GC_CONNECTED_HEARTBEAT::set_serveransitime(::google::protobuf::int32 value) {
  set_has_serveransitime();
  serveransitime_ = value;
}

// -------------------------------------------------------------------

// GC_NOTICE

// required string notice = 1;
inline bool GC_NOTICE::has_notice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_NOTICE::set_has_notice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_NOTICE::clear_has_notice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_NOTICE::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& GC_NOTICE::notice() const {
  return *notice_;
}
inline void GC_NOTICE::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GC_NOTICE::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void GC_NOTICE::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_NOTICE::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* GC_NOTICE::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_NOTICE::set_allocated_notice(::std::string* notice) {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    delete notice_;
  }
  if (notice) {
    set_has_notice();
    notice_ = notice;
  } else {
    clear_has_notice();
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 filterRepeat = 2;
inline bool GC_NOTICE::has_filterrepeat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_NOTICE::set_has_filterrepeat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_NOTICE::clear_has_filterrepeat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_NOTICE::clear_filterrepeat() {
  filterrepeat_ = 0;
  clear_has_filterrepeat();
}
inline ::google::protobuf::int32 GC_NOTICE::filterrepeat() const {
  return filterrepeat_;
}
inline void GC_NOTICE::set_filterrepeat(::google::protobuf::int32 value) {
  set_has_filterrepeat();
  filterrepeat_ = value;
}

// -------------------------------------------------------------------

// GC_MISSION_SYNC_MISSIONLIST

// repeated int32 missionID = 1;
inline int GC_MISSION_SYNC_MISSIONLIST::missionid_size() const {
  return missionid_.size();
}
inline void GC_MISSION_SYNC_MISSIONLIST::clear_missionid() {
  missionid_.Clear();
}
inline ::google::protobuf::int32 GC_MISSION_SYNC_MISSIONLIST::missionid(int index) const {
  return missionid_.Get(index);
}
inline void GC_MISSION_SYNC_MISSIONLIST::set_missionid(int index, ::google::protobuf::int32 value) {
  missionid_.Set(index, value);
}
inline void GC_MISSION_SYNC_MISSIONLIST::add_missionid(::google::protobuf::int32 value) {
  missionid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MISSION_SYNC_MISSIONLIST::missionid() const {
  return missionid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MISSION_SYNC_MISSIONLIST::mutable_missionid() {
  return &missionid_;
}

// repeated int32 state = 2;
inline int GC_MISSION_SYNC_MISSIONLIST::state_size() const {
  return state_.size();
}
inline void GC_MISSION_SYNC_MISSIONLIST::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int32 GC_MISSION_SYNC_MISSIONLIST::state(int index) const {
  return state_.Get(index);
}
inline void GC_MISSION_SYNC_MISSIONLIST::set_state(int index, ::google::protobuf::int32 value) {
  state_.Set(index, value);
}
inline void GC_MISSION_SYNC_MISSIONLIST::add_state(::google::protobuf::int32 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MISSION_SYNC_MISSIONLIST::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MISSION_SYNC_MISSIONLIST::mutable_state() {
  return &state_;
}

// repeated int32 nParam = 3;
inline int GC_MISSION_SYNC_MISSIONLIST::nparam_size() const {
  return nparam_.size();
}
inline void GC_MISSION_SYNC_MISSIONLIST::clear_nparam() {
  nparam_.Clear();
}
inline ::google::protobuf::int32 GC_MISSION_SYNC_MISSIONLIST::nparam(int index) const {
  return nparam_.Get(index);
}
inline void GC_MISSION_SYNC_MISSIONLIST::set_nparam(int index, ::google::protobuf::int32 value) {
  nparam_.Set(index, value);
}
inline void GC_MISSION_SYNC_MISSIONLIST::add_nparam(::google::protobuf::int32 value) {
  nparam_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MISSION_SYNC_MISSIONLIST::nparam() const {
  return nparam_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MISSION_SYNC_MISSIONLIST::mutable_nparam() {
  return &nparam_;
}

// repeated uint32 havedoneFlag = 4;
inline int GC_MISSION_SYNC_MISSIONLIST::havedoneflag_size() const {
  return havedoneflag_.size();
}
inline void GC_MISSION_SYNC_MISSIONLIST::clear_havedoneflag() {
  havedoneflag_.Clear();
}
inline ::google::protobuf::uint32 GC_MISSION_SYNC_MISSIONLIST::havedoneflag(int index) const {
  return havedoneflag_.Get(index);
}
inline void GC_MISSION_SYNC_MISSIONLIST::set_havedoneflag(int index, ::google::protobuf::uint32 value) {
  havedoneflag_.Set(index, value);
}
inline void GC_MISSION_SYNC_MISSIONLIST::add_havedoneflag(::google::protobuf::uint32 value) {
  havedoneflag_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GC_MISSION_SYNC_MISSIONLIST::havedoneflag() const {
  return havedoneflag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GC_MISSION_SYNC_MISSIONLIST::mutable_havedoneflag() {
  return &havedoneflag_;
}

// repeated int32 qualitytype = 5;
inline int GC_MISSION_SYNC_MISSIONLIST::qualitytype_size() const {
  return qualitytype_.size();
}
inline void GC_MISSION_SYNC_MISSIONLIST::clear_qualitytype() {
  qualitytype_.Clear();
}
inline ::google::protobuf::int32 GC_MISSION_SYNC_MISSIONLIST::qualitytype(int index) const {
  return qualitytype_.Get(index);
}
inline void GC_MISSION_SYNC_MISSIONLIST::set_qualitytype(int index, ::google::protobuf::int32 value) {
  qualitytype_.Set(index, value);
}
inline void GC_MISSION_SYNC_MISSIONLIST::add_qualitytype(::google::protobuf::int32 value) {
  qualitytype_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MISSION_SYNC_MISSIONLIST::qualitytype() const {
  return qualitytype_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MISSION_SYNC_MISSIONLIST::mutable_qualitytype() {
  return &qualitytype_;
}

// -------------------------------------------------------------------

// CG_ACCEPTMISSION

// required int32 MissionID = 1;
inline bool CG_ACCEPTMISSION::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_ACCEPTMISSION::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_ACCEPTMISSION::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_ACCEPTMISSION::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 CG_ACCEPTMISSION::missionid() const {
  return missionid_;
}
inline void CG_ACCEPTMISSION::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// GC_ACCEPTMISSION_RET

// required int32 MissionID = 1;
inline bool GC_ACCEPTMISSION_RET::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_ACCEPTMISSION_RET::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_ACCEPTMISSION_RET::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_ACCEPTMISSION_RET::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 GC_ACCEPTMISSION_RET::missionid() const {
  return missionid_;
}
inline void GC_ACCEPTMISSION_RET::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// required int32 QualityType = 2;
inline bool GC_ACCEPTMISSION_RET::has_qualitytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_ACCEPTMISSION_RET::set_has_qualitytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_ACCEPTMISSION_RET::clear_has_qualitytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_ACCEPTMISSION_RET::clear_qualitytype() {
  qualitytype_ = 0;
  clear_has_qualitytype();
}
inline ::google::protobuf::int32 GC_ACCEPTMISSION_RET::qualitytype() const {
  return qualitytype_;
}
inline void GC_ACCEPTMISSION_RET::set_qualitytype(::google::protobuf::int32 value) {
  set_has_qualitytype();
  qualitytype_ = value;
}

// required int32 Ret = 3;
inline bool GC_ACCEPTMISSION_RET::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_ACCEPTMISSION_RET::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_ACCEPTMISSION_RET::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_ACCEPTMISSION_RET::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GC_ACCEPTMISSION_RET::ret() const {
  return ret_;
}
inline void GC_ACCEPTMISSION_RET::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CG_COMPLETEMISSION

// required int32 MissionID = 1;
inline bool CG_COMPLETEMISSION::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_COMPLETEMISSION::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_COMPLETEMISSION::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_COMPLETEMISSION::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 CG_COMPLETEMISSION::missionid() const {
  return missionid_;
}
inline void CG_COMPLETEMISSION::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// GC_COMPLETEMISSION_RET

// required int32 MissionID = 1;
inline bool GC_COMPLETEMISSION_RET::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_COMPLETEMISSION_RET::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_COMPLETEMISSION_RET::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_COMPLETEMISSION_RET::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 GC_COMPLETEMISSION_RET::missionid() const {
  return missionid_;
}
inline void GC_COMPLETEMISSION_RET::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// required int32 Ret = 2;
inline bool GC_COMPLETEMISSION_RET::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_COMPLETEMISSION_RET::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_COMPLETEMISSION_RET::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_COMPLETEMISSION_RET::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GC_COMPLETEMISSION_RET::ret() const {
  return ret_;
}
inline void GC_COMPLETEMISSION_RET::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// CG_ABANDONMISSION

// required int32 MissionID = 1;
inline bool CG_ABANDONMISSION::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_ABANDONMISSION::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_ABANDONMISSION::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_ABANDONMISSION::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 CG_ABANDONMISSION::missionid() const {
  return missionid_;
}
inline void CG_ABANDONMISSION::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// -------------------------------------------------------------------

// GC_ABANDONMISSION_RET

// required int32 MissionID = 1;
inline bool GC_ABANDONMISSION_RET::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_ABANDONMISSION_RET::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_ABANDONMISSION_RET::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_ABANDONMISSION_RET::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 GC_ABANDONMISSION_RET::missionid() const {
  return missionid_;
}
inline void GC_ABANDONMISSION_RET::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// required int32 Ret = 2;
inline bool GC_ABANDONMISSION_RET::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_ABANDONMISSION_RET::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_ABANDONMISSION_RET::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_ABANDONMISSION_RET::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 GC_ABANDONMISSION_RET::ret() const {
  return ret_;
}
inline void GC_ABANDONMISSION_RET::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// GC_MISSION_STATE

// required int32 MissionID = 1;
inline bool GC_MISSION_STATE::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_MISSION_STATE::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_MISSION_STATE::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_MISSION_STATE::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 GC_MISSION_STATE::missionid() const {
  return missionid_;
}
inline void GC_MISSION_STATE::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// required int32 State = 2;
inline bool GC_MISSION_STATE::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_MISSION_STATE::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_MISSION_STATE::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_MISSION_STATE::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GC_MISSION_STATE::state() const {
  return state_;
}
inline void GC_MISSION_STATE::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// GC_MISSION_PARAM

// required int32 MissionID = 1;
inline bool GC_MISSION_PARAM::has_missionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_MISSION_PARAM::set_has_missionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_MISSION_PARAM::clear_has_missionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_MISSION_PARAM::clear_missionid() {
  missionid_ = 0;
  clear_has_missionid();
}
inline ::google::protobuf::int32 GC_MISSION_PARAM::missionid() const {
  return missionid_;
}
inline void GC_MISSION_PARAM::set_missionid(::google::protobuf::int32 value) {
  set_has_missionid();
  missionid_ = value;
}

// required int32 ParamIndex = 2;
inline bool GC_MISSION_PARAM::has_paramindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_MISSION_PARAM::set_has_paramindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_MISSION_PARAM::clear_has_paramindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_MISSION_PARAM::clear_paramindex() {
  paramindex_ = 0;
  clear_has_paramindex();
}
inline ::google::protobuf::int32 GC_MISSION_PARAM::paramindex() const {
  return paramindex_;
}
inline void GC_MISSION_PARAM::set_paramindex(::google::protobuf::int32 value) {
  set_has_paramindex();
  paramindex_ = value;
}

// required int32 Param = 3;
inline bool GC_MISSION_PARAM::has_param() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_MISSION_PARAM::set_has_param() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_MISSION_PARAM::clear_has_param() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_MISSION_PARAM::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::google::protobuf::int32 GC_MISSION_PARAM::param() const {
  return param_;
}
inline void GC_MISSION_PARAM::set_param(::google::protobuf::int32 value) {
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// GC_CREATE_PLAYER

// required int32 serverId = 1;
inline bool GC_CREATE_PLAYER::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_CREATE_PLAYER::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_CREATE_PLAYER::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::serverid() const {
  return serverid_;
}
inline void GC_CREATE_PLAYER::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required uint64 guid = 2;
inline bool GC_CREATE_PLAYER::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_CREATE_PLAYER::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_CREATE_PLAYER::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 GC_CREATE_PLAYER::guid() const {
  return guid_;
}
inline void GC_CREATE_PLAYER::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
}

// required int32 sceneInst = 3;
inline bool GC_CREATE_PLAYER::has_sceneinst() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_sceneinst() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_CREATE_PLAYER::clear_has_sceneinst() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_CREATE_PLAYER::clear_sceneinst() {
  sceneinst_ = 0;
  clear_has_sceneinst();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::sceneinst() const {
  return sceneinst_;
}
inline void GC_CREATE_PLAYER::set_sceneinst(::google::protobuf::int32 value) {
  set_has_sceneinst();
  sceneinst_ = value;
}

// required int32 sceneClass = 4;
inline bool GC_CREATE_PLAYER::has_sceneclass() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_sceneclass() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_CREATE_PLAYER::clear_has_sceneclass() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_CREATE_PLAYER::clear_sceneclass() {
  sceneclass_ = 0;
  clear_has_sceneclass();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::sceneclass() const {
  return sceneclass_;
}
inline void GC_CREATE_PLAYER::set_sceneclass(::google::protobuf::int32 value) {
  set_has_sceneclass();
  sceneclass_ = value;
}

// required int32 dataId = 5;
inline bool GC_CREATE_PLAYER::has_dataid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_dataid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_CREATE_PLAYER::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_CREATE_PLAYER::clear_dataid() {
  dataid_ = 0;
  clear_has_dataid();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::dataid() const {
  return dataid_;
}
inline void GC_CREATE_PLAYER::set_dataid(::google::protobuf::int32 value) {
  set_has_dataid();
  dataid_ = value;
}

// required int32 posX = 6;
inline bool GC_CREATE_PLAYER::has_posx() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_posx() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_CREATE_PLAYER::clear_has_posx() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_CREATE_PLAYER::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::posx() const {
  return posx_;
}
inline void GC_CREATE_PLAYER::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posZ = 7;
inline bool GC_CREATE_PLAYER::has_posz() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_posz() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GC_CREATE_PLAYER::clear_has_posz() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GC_CREATE_PLAYER::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::posz() const {
  return posz_;
}
inline void GC_CREATE_PLAYER::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// required int32 curforce = 8;
inline bool GC_CREATE_PLAYER::has_curforce() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_curforce() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GC_CREATE_PLAYER::clear_has_curforce() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GC_CREATE_PLAYER::clear_curforce() {
  curforce_ = 0;
  clear_has_curforce();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::curforce() const {
  return curforce_;
}
inline void GC_CREATE_PLAYER::set_curforce(::google::protobuf::int32 value) {
  set_has_curforce();
  curforce_ = value;
}

// required string name = 9;
inline bool GC_CREATE_PLAYER::has_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_name() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GC_CREATE_PLAYER::clear_has_name() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GC_CREATE_PLAYER::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GC_CREATE_PLAYER::name() const {
  return *name_;
}
inline void GC_CREATE_PLAYER::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GC_CREATE_PLAYER::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GC_CREATE_PLAYER::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_CREATE_PLAYER::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GC_CREATE_PLAYER::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_CREATE_PLAYER::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 curProfession = 10;
inline bool GC_CREATE_PLAYER::has_curprofession() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_curprofession() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GC_CREATE_PLAYER::clear_has_curprofession() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GC_CREATE_PLAYER::clear_curprofession() {
  curprofession_ = 0;
  clear_has_curprofession();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::curprofession() const {
  return curprofession_;
}
inline void GC_CREATE_PLAYER::set_curprofession(::google::protobuf::int32 value) {
  set_has_curprofession();
  curprofession_ = value;
}

// required int32 facedir = 11;
inline bool GC_CREATE_PLAYER::has_facedir() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_facedir() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GC_CREATE_PLAYER::clear_has_facedir() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GC_CREATE_PLAYER::clear_facedir() {
  facedir_ = 0;
  clear_has_facedir();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::facedir() const {
  return facedir_;
}
inline void GC_CREATE_PLAYER::set_facedir(::google::protobuf::int32 value) {
  set_has_facedir();
  facedir_ = value;
}

// required string titlename = 12;
inline bool GC_CREATE_PLAYER::has_titlename() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_titlename() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GC_CREATE_PLAYER::clear_has_titlename() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GC_CREATE_PLAYER::clear_titlename() {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    titlename_->clear();
  }
  clear_has_titlename();
}
inline const ::std::string& GC_CREATE_PLAYER::titlename() const {
  return *titlename_;
}
inline void GC_CREATE_PLAYER::set_titlename(const ::std::string& value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void GC_CREATE_PLAYER::set_titlename(const char* value) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(value);
}
inline void GC_CREATE_PLAYER::set_titlename(const char* value, size_t size) {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  titlename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_CREATE_PLAYER::mutable_titlename() {
  set_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    titlename_ = new ::std::string;
  }
  return titlename_;
}
inline ::std::string* GC_CREATE_PLAYER::release_titlename() {
  clear_has_titlename();
  if (titlename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = titlename_;
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_CREATE_PLAYER::set_allocated_titlename(::std::string* titlename) {
  if (titlename_ != &::google::protobuf::internal::kEmptyString) {
    delete titlename_;
  }
  if (titlename) {
    set_has_titlename();
    titlename_ = titlename;
  } else {
    clear_has_titlename();
    titlename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 isInPkList = 13;
inline bool GC_CREATE_PLAYER::has_isinpklist() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_isinpklist() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GC_CREATE_PLAYER::clear_has_isinpklist() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GC_CREATE_PLAYER::clear_isinpklist() {
  isinpklist_ = 0;
  clear_has_isinpklist();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::isinpklist() const {
  return isinpklist_;
}
inline void GC_CREATE_PLAYER::set_isinpklist(::google::protobuf::int32 value) {
  set_has_isinpklist();
  isinpklist_ = value;
}

// required int32 isDie = 14;
inline bool GC_CREATE_PLAYER::has_isdie() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_isdie() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GC_CREATE_PLAYER::clear_has_isdie() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GC_CREATE_PLAYER::clear_isdie() {
  isdie_ = 0;
  clear_has_isdie();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::isdie() const {
  return isdie_;
}
inline void GC_CREATE_PLAYER::set_isdie(::google::protobuf::int32 value) {
  set_has_isdie();
  isdie_ = value;
}

// optional int32 ReliveTime = 15;
inline bool GC_CREATE_PLAYER::has_relivetime() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_relivetime() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GC_CREATE_PLAYER::clear_has_relivetime() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GC_CREATE_PLAYER::clear_relivetime() {
  relivetime_ = 0;
  clear_has_relivetime();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::relivetime() const {
  return relivetime_;
}
inline void GC_CREATE_PLAYER::set_relivetime(::google::protobuf::int32 value) {
  set_has_relivetime();
  relivetime_ = value;
}

// required int32 PKModle = 16;
inline bool GC_CREATE_PLAYER::has_pkmodle() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_pkmodle() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GC_CREATE_PLAYER::clear_has_pkmodle() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GC_CREATE_PLAYER::clear_pkmodle() {
  pkmodle_ = 0;
  clear_has_pkmodle();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::pkmodle() const {
  return pkmodle_;
}
inline void GC_CREATE_PLAYER::set_pkmodle(::google::protobuf::int32 value) {
  set_has_pkmodle();
  pkmodle_ = value;
}

// required int32 MountID = 17;
inline bool GC_CREATE_PLAYER::has_mountid() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_mountid() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GC_CREATE_PLAYER::clear_has_mountid() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GC_CREATE_PLAYER::clear_mountid() {
  mountid_ = 0;
  clear_has_mountid();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::mountid() const {
  return mountid_;
}
inline void GC_CREATE_PLAYER::set_mountid(::google::protobuf::int32 value) {
  set_has_mountid();
  mountid_ = value;
}

// required int32 MoveSpeed = 18;
inline bool GC_CREATE_PLAYER::has_movespeed() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_movespeed() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GC_CREATE_PLAYER::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GC_CREATE_PLAYER::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::movespeed() const {
  return movespeed_;
}
inline void GC_CREATE_PLAYER::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
}

// required int32 ModelVisualID = 19;
inline bool GC_CREATE_PLAYER::has_modelvisualid() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_modelvisualid() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GC_CREATE_PLAYER::clear_has_modelvisualid() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GC_CREATE_PLAYER::clear_modelvisualid() {
  modelvisualid_ = 0;
  clear_has_modelvisualid();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::modelvisualid() const {
  return modelvisualid_;
}
inline void GC_CREATE_PLAYER::set_modelvisualid(::google::protobuf::int32 value) {
  set_has_modelvisualid();
  modelvisualid_ = value;
}

// required int32 WeaponDataID = 20;
inline bool GC_CREATE_PLAYER::has_weapondataid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_weapondataid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GC_CREATE_PLAYER::clear_has_weapondataid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GC_CREATE_PLAYER::clear_weapondataid() {
  weapondataid_ = 0;
  clear_has_weapondataid();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::weapondataid() const {
  return weapondataid_;
}
inline void GC_CREATE_PLAYER::set_weapondataid(::google::protobuf::int32 value) {
  set_has_weapondataid();
  weapondataid_ = value;
}

// required int32 WeaponEffectGem = 22;
inline bool GC_CREATE_PLAYER::has_weaponeffectgem() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_weaponeffectgem() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GC_CREATE_PLAYER::clear_has_weaponeffectgem() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GC_CREATE_PLAYER::clear_weaponeffectgem() {
  weaponeffectgem_ = 0;
  clear_has_weaponeffectgem();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::weaponeffectgem() const {
  return weaponeffectgem_;
}
inline void GC_CREATE_PLAYER::set_weaponeffectgem(::google::protobuf::int32 value) {
  set_has_weaponeffectgem();
  weaponeffectgem_ = value;
}

// required int32 CurTitleID = 23;
inline bool GC_CREATE_PLAYER::has_curtitleid() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_curtitleid() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GC_CREATE_PLAYER::clear_has_curtitleid() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GC_CREATE_PLAYER::clear_curtitleid() {
  curtitleid_ = 0;
  clear_has_curtitleid();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::curtitleid() const {
  return curtitleid_;
}
inline void GC_CREATE_PLAYER::set_curtitleid(::google::protobuf::int32 value) {
  set_has_curtitleid();
  curtitleid_ = value;
}

// required int32 StealthLev = 24;
inline bool GC_CREATE_PLAYER::has_stealthlev() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_stealthlev() {
  _has_bits_[0] |= 0x00400000u;
}
inline void GC_CREATE_PLAYER::clear_has_stealthlev() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void GC_CREATE_PLAYER::clear_stealthlev() {
  stealthlev_ = 0;
  clear_has_stealthlev();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::stealthlev() const {
  return stealthlev_;
}
inline void GC_CREATE_PLAYER::set_stealthlev(::google::protobuf::int32 value) {
  set_has_stealthlev();
  stealthlev_ = value;
}

// required int32 VipCost = 25;
inline bool GC_CREATE_PLAYER::has_vipcost() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_vipcost() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GC_CREATE_PLAYER::clear_has_vipcost() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GC_CREATE_PLAYER::clear_vipcost() {
  vipcost_ = 0;
  clear_has_vipcost();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::vipcost() const {
  return vipcost_;
}
inline void GC_CREATE_PLAYER::set_vipcost(::google::protobuf::int32 value) {
  set_has_vipcost();
  vipcost_ = value;
}

// required uint64 GuildGuid = 26;
inline bool GC_CREATE_PLAYER::has_guildguid() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_guildguid() {
  _has_bits_[0] |= 0x01000000u;
}
inline void GC_CREATE_PLAYER::clear_has_guildguid() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void GC_CREATE_PLAYER::clear_guildguid() {
  guildguid_ = GOOGLE_ULONGLONG(0);
  clear_has_guildguid();
}
inline ::google::protobuf::uint64 GC_CREATE_PLAYER::guildguid() const {
  return guildguid_;
}
inline void GC_CREATE_PLAYER::set_guildguid(::google::protobuf::uint64 value) {
  set_has_guildguid();
  guildguid_ = value;
}

// required int32 CombatValue = 27;
inline bool GC_CREATE_PLAYER::has_combatvalue() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_combatvalue() {
  _has_bits_[0] |= 0x02000000u;
}
inline void GC_CREATE_PLAYER::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void GC_CREATE_PLAYER::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::combatvalue() const {
  return combatvalue_;
}
inline void GC_CREATE_PLAYER::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
}

// required int32 bindparent = 28;
inline bool GC_CREATE_PLAYER::has_bindparent() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_bindparent() {
  _has_bits_[0] |= 0x04000000u;
}
inline void GC_CREATE_PLAYER::clear_has_bindparent() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void GC_CREATE_PLAYER::clear_bindparent() {
  bindparent_ = 0;
  clear_has_bindparent();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::bindparent() const {
  return bindparent_;
}
inline void GC_CREATE_PLAYER::set_bindparent(::google::protobuf::int32 value) {
  set_has_bindparent();
  bindparent_ = value;
}

// repeated int32 bindchildren = 29;
inline int GC_CREATE_PLAYER::bindchildren_size() const {
  return bindchildren_.size();
}
inline void GC_CREATE_PLAYER::clear_bindchildren() {
  bindchildren_.Clear();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::bindchildren(int index) const {
  return bindchildren_.Get(index);
}
inline void GC_CREATE_PLAYER::set_bindchildren(int index, ::google::protobuf::int32 value) {
  bindchildren_.Set(index, value);
}
inline void GC_CREATE_PLAYER::add_bindchildren(::google::protobuf::int32 value) {
  bindchildren_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_CREATE_PLAYER::bindchildren() const {
  return bindchildren_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_CREATE_PLAYER::mutable_bindchildren() {
  return &bindchildren_;
}

// required int32 isEnemy2Self = 30;
inline bool GC_CREATE_PLAYER::has_isenemy2self() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_isenemy2self() {
  _has_bits_[0] |= 0x10000000u;
}
inline void GC_CREATE_PLAYER::clear_has_isenemy2self() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void GC_CREATE_PLAYER::clear_isenemy2self() {
  isenemy2self_ = 0;
  clear_has_isenemy2self();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::isenemy2self() const {
  return isenemy2self_;
}
inline void GC_CREATE_PLAYER::set_isenemy2self(::google::protobuf::int32 value) {
  set_has_isenemy2self();
  isenemy2self_ = value;
}

// optional int32 paoshangState = 31;
inline bool GC_CREATE_PLAYER::has_paoshangstate() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_paoshangstate() {
  _has_bits_[0] |= 0x20000000u;
}
inline void GC_CREATE_PLAYER::clear_has_paoshangstate() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void GC_CREATE_PLAYER::clear_paoshangstate() {
  paoshangstate_ = 0;
  clear_has_paoshangstate();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::paoshangstate() const {
  return paoshangstate_;
}
inline void GC_CREATE_PLAYER::set_paoshangstate(::google::protobuf::int32 value) {
  set_has_paoshangstate();
  paoshangstate_ = value;
}

// optional int32 lightSkillLevel = 32;
inline bool GC_CREATE_PLAYER::has_lightskilllevel() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void GC_CREATE_PLAYER::set_has_lightskilllevel() {
  _has_bits_[0] |= 0x40000000u;
}
inline void GC_CREATE_PLAYER::clear_has_lightskilllevel() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void GC_CREATE_PLAYER::clear_lightskilllevel() {
  lightskilllevel_ = 0;
  clear_has_lightskilllevel();
}
inline ::google::protobuf::int32 GC_CREATE_PLAYER::lightskilllevel() const {
  return lightskilllevel_;
}
inline void GC_CREATE_PLAYER::set_lightskilllevel(::google::protobuf::int32 value) {
  set_has_lightskilllevel();
  lightskilllevel_ = value;
}

// -------------------------------------------------------------------

// GC_DELETE_OBJ

// required int32 serverId = 1;
inline bool GC_DELETE_OBJ::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_DELETE_OBJ::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_DELETE_OBJ::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_DELETE_OBJ::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_DELETE_OBJ::serverid() const {
  return serverid_;
}
inline void GC_DELETE_OBJ::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// -------------------------------------------------------------------

// CG_SYNC_POS

// required int32 posX = 1;
inline bool CG_SYNC_POS::has_posx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_SYNC_POS::set_has_posx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_SYNC_POS::clear_has_posx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_SYNC_POS::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 CG_SYNC_POS::posx() const {
  return posx_;
}
inline void CG_SYNC_POS::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posZ = 2;
inline bool CG_SYNC_POS::has_posz() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_SYNC_POS::set_has_posz() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_SYNC_POS::clear_has_posz() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_SYNC_POS::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 CG_SYNC_POS::posz() const {
  return posz_;
}
inline void CG_SYNC_POS::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// required int32 ismoviong = 3;
inline bool CG_SYNC_POS::has_ismoviong() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CG_SYNC_POS::set_has_ismoviong() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CG_SYNC_POS::clear_has_ismoviong() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CG_SYNC_POS::clear_ismoviong() {
  ismoviong_ = 0;
  clear_has_ismoviong();
}
inline ::google::protobuf::int32 CG_SYNC_POS::ismoviong() const {
  return ismoviong_;
}
inline void CG_SYNC_POS::set_ismoviong(::google::protobuf::int32 value) {
  set_has_ismoviong();
  ismoviong_ = value;
}

// -------------------------------------------------------------------

// GC_SYNC_POS

// required int32 serverId = 1;
inline bool GC_SYNC_POS::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_SYNC_POS::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_SYNC_POS::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_SYNC_POS::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_SYNC_POS::serverid() const {
  return serverid_;
}
inline void GC_SYNC_POS::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required int32 posX = 2;
inline bool GC_SYNC_POS::has_posx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_SYNC_POS::set_has_posx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_SYNC_POS::clear_has_posx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_SYNC_POS::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GC_SYNC_POS::posx() const {
  return posx_;
}
inline void GC_SYNC_POS::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posZ = 3;
inline bool GC_SYNC_POS::has_posz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_SYNC_POS::set_has_posz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_SYNC_POS::clear_has_posz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_SYNC_POS::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GC_SYNC_POS::posz() const {
  return posz_;
}
inline void GC_SYNC_POS::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// CG_MOVE

// required int32 poscount = 1;
inline bool CG_MOVE::has_poscount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_MOVE::set_has_poscount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_MOVE::clear_has_poscount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_MOVE::clear_poscount() {
  poscount_ = 0;
  clear_has_poscount();
}
inline ::google::protobuf::int32 CG_MOVE::poscount() const {
  return poscount_;
}
inline void CG_MOVE::set_poscount(::google::protobuf::int32 value) {
  set_has_poscount();
  poscount_ = value;
}

// repeated int32 posx = 2;
inline int CG_MOVE::posx_size() const {
  return posx_.size();
}
inline void CG_MOVE::clear_posx() {
  posx_.Clear();
}
inline ::google::protobuf::int32 CG_MOVE::posx(int index) const {
  return posx_.Get(index);
}
inline void CG_MOVE::set_posx(int index, ::google::protobuf::int32 value) {
  posx_.Set(index, value);
}
inline void CG_MOVE::add_posx(::google::protobuf::int32 value) {
  posx_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_MOVE::posx() const {
  return posx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_MOVE::mutable_posx() {
  return &posx_;
}

// repeated int32 posz = 3;
inline int CG_MOVE::posz_size() const {
  return posz_.size();
}
inline void CG_MOVE::clear_posz() {
  posz_.Clear();
}
inline ::google::protobuf::int32 CG_MOVE::posz(int index) const {
  return posz_.Get(index);
}
inline void CG_MOVE::set_posz(int index, ::google::protobuf::int32 value) {
  posz_.Set(index, value);
}
inline void CG_MOVE::add_posz(::google::protobuf::int32 value) {
  posz_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CG_MOVE::posz() const {
  return posz_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CG_MOVE::mutable_posz() {
  return &posz_;
}

// required int32 ismoving = 4;
inline bool CG_MOVE::has_ismoving() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CG_MOVE::set_has_ismoving() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CG_MOVE::clear_has_ismoving() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CG_MOVE::clear_ismoving() {
  ismoving_ = 0;
  clear_has_ismoving();
}
inline ::google::protobuf::int32 CG_MOVE::ismoving() const {
  return ismoving_;
}
inline void CG_MOVE::set_ismoving(::google::protobuf::int32 value) {
  set_has_ismoving();
  ismoving_ = value;
}

// -------------------------------------------------------------------

// GC_MOVE

// required int32 serverid = 1;
inline bool GC_MOVE::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_MOVE::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_MOVE::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_MOVE::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_MOVE::serverid() const {
  return serverid_;
}
inline void GC_MOVE::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required int32 poscount = 2;
inline bool GC_MOVE::has_poscount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_MOVE::set_has_poscount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_MOVE::clear_has_poscount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_MOVE::clear_poscount() {
  poscount_ = 0;
  clear_has_poscount();
}
inline ::google::protobuf::int32 GC_MOVE::poscount() const {
  return poscount_;
}
inline void GC_MOVE::set_poscount(::google::protobuf::int32 value) {
  set_has_poscount();
  poscount_ = value;
}

// repeated int32 posserial = 3;
inline int GC_MOVE::posserial_size() const {
  return posserial_.size();
}
inline void GC_MOVE::clear_posserial() {
  posserial_.Clear();
}
inline ::google::protobuf::int32 GC_MOVE::posserial(int index) const {
  return posserial_.Get(index);
}
inline void GC_MOVE::set_posserial(int index, ::google::protobuf::int32 value) {
  posserial_.Set(index, value);
}
inline void GC_MOVE::add_posserial(::google::protobuf::int32 value) {
  posserial_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MOVE::posserial() const {
  return posserial_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MOVE::mutable_posserial() {
  return &posserial_;
}

// repeated int32 posx = 4;
inline int GC_MOVE::posx_size() const {
  return posx_.size();
}
inline void GC_MOVE::clear_posx() {
  posx_.Clear();
}
inline ::google::protobuf::int32 GC_MOVE::posx(int index) const {
  return posx_.Get(index);
}
inline void GC_MOVE::set_posx(int index, ::google::protobuf::int32 value) {
  posx_.Set(index, value);
}
inline void GC_MOVE::add_posx(::google::protobuf::int32 value) {
  posx_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MOVE::posx() const {
  return posx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MOVE::mutable_posx() {
  return &posx_;
}

// repeated int32 posz = 5;
inline int GC_MOVE::posz_size() const {
  return posz_.size();
}
inline void GC_MOVE::clear_posz() {
  posz_.Clear();
}
inline ::google::protobuf::int32 GC_MOVE::posz(int index) const {
  return posz_.Get(index);
}
inline void GC_MOVE::set_posz(int index, ::google::protobuf::int32 value) {
  posz_.Set(index, value);
}
inline void GC_MOVE::add_posz(::google::protobuf::int32 value) {
  posz_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_MOVE::posz() const {
  return posz_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_MOVE::mutable_posz() {
  return &posz_;
}

// -------------------------------------------------------------------

// GC_STOP

// required int32 serverid = 1;
inline bool GC_STOP::has_serverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_STOP::set_has_serverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_STOP::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_STOP::clear_serverid() {
  serverid_ = 0;
  clear_has_serverid();
}
inline ::google::protobuf::int32 GC_STOP::serverid() const {
  return serverid_;
}
inline void GC_STOP::set_serverid(::google::protobuf::int32 value) {
  set_has_serverid();
  serverid_ = value;
}

// required int32 posserial = 2;
inline bool GC_STOP::has_posserial() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_STOP::set_has_posserial() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_STOP::clear_has_posserial() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_STOP::clear_posserial() {
  posserial_ = 0;
  clear_has_posserial();
}
inline ::google::protobuf::int32 GC_STOP::posserial() const {
  return posserial_;
}
inline void GC_STOP::set_posserial(::google::protobuf::int32 value) {
  set_has_posserial();
  posserial_ = value;
}

// required int32 posx = 3;
inline bool GC_STOP::has_posx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_STOP::set_has_posx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_STOP::clear_has_posx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_STOP::clear_posx() {
  posx_ = 0;
  clear_has_posx();
}
inline ::google::protobuf::int32 GC_STOP::posx() const {
  return posx_;
}
inline void GC_STOP::set_posx(::google::protobuf::int32 value) {
  set_has_posx();
  posx_ = value;
}

// required int32 posz = 4;
inline bool GC_STOP::has_posz() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_STOP::set_has_posz() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_STOP::clear_has_posz() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_STOP::clear_posz() {
  posz_ = 0;
  clear_has_posz();
}
inline ::google::protobuf::int32 GC_STOP::posz() const {
  return posz_;
}
inline void GC_STOP::set_posz(::google::protobuf::int32 value) {
  set_has_posz();
  posz_ = value;
}

// -------------------------------------------------------------------

// GC_BROADCAST_ATTR

// required int32 ObjId = 1;
inline bool GC_BROADCAST_ATTR::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_BROADCAST_ATTR::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_BROADCAST_ATTR::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::objid() const {
  return objid_;
}
inline void GC_BROADCAST_ATTR::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional int32 CurProfession = 2;
inline bool GC_BROADCAST_ATTR::has_curprofession() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_curprofession() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_BROADCAST_ATTR::clear_has_curprofession() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_BROADCAST_ATTR::clear_curprofession() {
  curprofession_ = 0;
  clear_has_curprofession();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::curprofession() const {
  return curprofession_;
}
inline void GC_BROADCAST_ATTR::set_curprofession(::google::protobuf::int32 value) {
  set_has_curprofession();
  curprofession_ = value;
}

// optional string Name = 3;
inline bool GC_BROADCAST_ATTR::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_BROADCAST_ATTR::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_BROADCAST_ATTR::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GC_BROADCAST_ATTR::name() const {
  return *name_;
}
inline void GC_BROADCAST_ATTR::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GC_BROADCAST_ATTR::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GC_BROADCAST_ATTR::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GC_BROADCAST_ATTR::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GC_BROADCAST_ATTR::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GC_BROADCAST_ATTR::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 CurForce = 4;
inline bool GC_BROADCAST_ATTR::has_curforce() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_curforce() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_BROADCAST_ATTR::clear_has_curforce() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_BROADCAST_ATTR::clear_curforce() {
  curforce_ = 0;
  clear_has_curforce();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::curforce() const {
  return curforce_;
}
inline void GC_BROADCAST_ATTR::set_curforce(::google::protobuf::int32 value) {
  set_has_curforce();
  curforce_ = value;
}

// optional int32 MoveSpeed = 5;
inline bool GC_BROADCAST_ATTR::has_movespeed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_movespeed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_BROADCAST_ATTR::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_BROADCAST_ATTR::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::movespeed() const {
  return movespeed_;
}
inline void GC_BROADCAST_ATTR::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
}

// optional int32 bDie = 6;
inline bool GC_BROADCAST_ATTR::has_bdie() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_bdie() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_BROADCAST_ATTR::clear_has_bdie() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_BROADCAST_ATTR::clear_bdie() {
  bdie_ = 0;
  clear_has_bdie();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::bdie() const {
  return bdie_;
}
inline void GC_BROADCAST_ATTR::set_bdie(::google::protobuf::int32 value) {
  set_has_bdie();
  bdie_ = value;
}

// optional int32 faceDir = 7;
inline bool GC_BROADCAST_ATTR::has_facedir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_facedir() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GC_BROADCAST_ATTR::clear_has_facedir() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GC_BROADCAST_ATTR::clear_facedir() {
  facedir_ = 0;
  clear_has_facedir();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::facedir() const {
  return facedir_;
}
inline void GC_BROADCAST_ATTR::set_facedir(::google::protobuf::int32 value) {
  set_has_facedir();
  facedir_ = value;
}

// optional int32 ModelVisualID = 8;
inline bool GC_BROADCAST_ATTR::has_modelvisualid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_modelvisualid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GC_BROADCAST_ATTR::clear_has_modelvisualid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GC_BROADCAST_ATTR::clear_modelvisualid() {
  modelvisualid_ = 0;
  clear_has_modelvisualid();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::modelvisualid() const {
  return modelvisualid_;
}
inline void GC_BROADCAST_ATTR::set_modelvisualid(::google::protobuf::int32 value) {
  set_has_modelvisualid();
  modelvisualid_ = value;
}

// optional int32 WeaponDataID = 9;
inline bool GC_BROADCAST_ATTR::has_weapondataid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_weapondataid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GC_BROADCAST_ATTR::clear_has_weapondataid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GC_BROADCAST_ATTR::clear_weapondataid() {
  weapondataid_ = 0;
  clear_has_weapondataid();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::weapondataid() const {
  return weapondataid_;
}
inline void GC_BROADCAST_ATTR::set_weapondataid(::google::protobuf::int32 value) {
  set_has_weapondataid();
  weapondataid_ = value;
}

// optional int32 WeaponEffectGem = 11;
inline bool GC_BROADCAST_ATTR::has_weaponeffectgem() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_weaponeffectgem() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GC_BROADCAST_ATTR::clear_has_weaponeffectgem() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GC_BROADCAST_ATTR::clear_weaponeffectgem() {
  weaponeffectgem_ = 0;
  clear_has_weaponeffectgem();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::weaponeffectgem() const {
  return weaponeffectgem_;
}
inline void GC_BROADCAST_ATTR::set_weaponeffectgem(::google::protobuf::int32 value) {
  set_has_weaponeffectgem();
  weaponeffectgem_ = value;
}

// optional int32 StealthLev = 12;
inline bool GC_BROADCAST_ATTR::has_stealthlev() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_stealthlev() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GC_BROADCAST_ATTR::clear_has_stealthlev() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GC_BROADCAST_ATTR::clear_stealthlev() {
  stealthlev_ = 0;
  clear_has_stealthlev();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::stealthlev() const {
  return stealthlev_;
}
inline void GC_BROADCAST_ATTR::set_stealthlev(::google::protobuf::int32 value) {
  set_has_stealthlev();
  stealthlev_ = value;
}

// optional int32 VipCost = 13;
inline bool GC_BROADCAST_ATTR::has_vipcost() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_vipcost() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GC_BROADCAST_ATTR::clear_has_vipcost() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GC_BROADCAST_ATTR::clear_vipcost() {
  vipcost_ = 0;
  clear_has_vipcost();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::vipcost() const {
  return vipcost_;
}
inline void GC_BROADCAST_ATTR::set_vipcost(::google::protobuf::int32 value) {
  set_has_vipcost();
  vipcost_ = value;
}

// optional int32 CombatValue = 14;
inline bool GC_BROADCAST_ATTR::has_combatvalue() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_combatvalue() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GC_BROADCAST_ATTR::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GC_BROADCAST_ATTR::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::combatvalue() const {
  return combatvalue_;
}
inline void GC_BROADCAST_ATTR::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
}

// optional int32 bindparent = 15;
inline bool GC_BROADCAST_ATTR::has_bindparent() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GC_BROADCAST_ATTR::set_has_bindparent() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GC_BROADCAST_ATTR::clear_has_bindparent() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GC_BROADCAST_ATTR::clear_bindparent() {
  bindparent_ = 0;
  clear_has_bindparent();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::bindparent() const {
  return bindparent_;
}
inline void GC_BROADCAST_ATTR::set_bindparent(::google::protobuf::int32 value) {
  set_has_bindparent();
  bindparent_ = value;
}

// repeated int32 bindchildren = 16;
inline int GC_BROADCAST_ATTR::bindchildren_size() const {
  return bindchildren_.size();
}
inline void GC_BROADCAST_ATTR::clear_bindchildren() {
  bindchildren_.Clear();
}
inline ::google::protobuf::int32 GC_BROADCAST_ATTR::bindchildren(int index) const {
  return bindchildren_.Get(index);
}
inline void GC_BROADCAST_ATTR::set_bindchildren(int index, ::google::protobuf::int32 value) {
  bindchildren_.Set(index, value);
}
inline void GC_BROADCAST_ATTR::add_bindchildren(::google::protobuf::int32 value) {
  bindchildren_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_BROADCAST_ATTR::bindchildren() const {
  return bindchildren_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_BROADCAST_ATTR::mutable_bindchildren() {
  return &bindchildren_;
}

// -------------------------------------------------------------------

// GC_SYN_ATTR

// required int32 ObjId = 1;
inline bool GC_SYN_ATTR::has_objid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_SYN_ATTR::set_has_objid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_SYN_ATTR::clear_has_objid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_SYN_ATTR::clear_objid() {
  objid_ = 0;
  clear_has_objid();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::objid() const {
  return objid_;
}
inline void GC_SYN_ATTR::set_objid(::google::protobuf::int32 value) {
  set_has_objid();
  objid_ = value;
}

// optional int32 CurHp = 2;
inline bool GC_SYN_ATTR::has_curhp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_SYN_ATTR::set_has_curhp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_SYN_ATTR::clear_has_curhp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_SYN_ATTR::clear_curhp() {
  curhp_ = 0;
  clear_has_curhp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curhp() const {
  return curhp_;
}
inline void GC_SYN_ATTR::set_curhp(::google::protobuf::int32 value) {
  set_has_curhp();
  curhp_ = value;
}

// optional int32 CurMp = 3;
inline bool GC_SYN_ATTR::has_curmp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GC_SYN_ATTR::set_has_curmp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GC_SYN_ATTR::clear_has_curmp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GC_SYN_ATTR::clear_curmp() {
  curmp_ = 0;
  clear_has_curmp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curmp() const {
  return curmp_;
}
inline void GC_SYN_ATTR::set_curmp(::google::protobuf::int32 value) {
  set_has_curmp();
  curmp_ = value;
}

// optional int32 CurXp = 4;
inline bool GC_SYN_ATTR::has_curxp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GC_SYN_ATTR::set_has_curxp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GC_SYN_ATTR::clear_has_curxp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GC_SYN_ATTR::clear_curxp() {
  curxp_ = 0;
  clear_has_curxp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curxp() const {
  return curxp_;
}
inline void GC_SYN_ATTR::set_curxp(::google::protobuf::int32 value) {
  set_has_curxp();
  curxp_ = value;
}

// optional int32 MaxHP = 5;
inline bool GC_SYN_ATTR::has_maxhp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GC_SYN_ATTR::set_has_maxhp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GC_SYN_ATTR::clear_has_maxhp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GC_SYN_ATTR::clear_maxhp() {
  maxhp_ = 0;
  clear_has_maxhp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::maxhp() const {
  return maxhp_;
}
inline void GC_SYN_ATTR::set_maxhp(::google::protobuf::int32 value) {
  set_has_maxhp();
  maxhp_ = value;
}

// optional int32 MaxMP = 6;
inline bool GC_SYN_ATTR::has_maxmp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GC_SYN_ATTR::set_has_maxmp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GC_SYN_ATTR::clear_has_maxmp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GC_SYN_ATTR::clear_maxmp() {
  maxmp_ = 0;
  clear_has_maxmp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::maxmp() const {
  return maxmp_;
}
inline void GC_SYN_ATTR::set_maxmp(::google::protobuf::int32 value) {
  set_has_maxmp();
  maxmp_ = value;
}

// optional int32 MaxXP = 7;
inline bool GC_SYN_ATTR::has_maxxp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GC_SYN_ATTR::set_has_maxxp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GC_SYN_ATTR::clear_has_maxxp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GC_SYN_ATTR::clear_maxxp() {
  maxxp_ = 0;
  clear_has_maxxp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::maxxp() const {
  return maxxp_;
}
inline void GC_SYN_ATTR::set_maxxp(::google::protobuf::int32 value) {
  set_has_maxxp();
  maxxp_ = value;
}

// optional int32 CurLev = 8;
inline bool GC_SYN_ATTR::has_curlev() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GC_SYN_ATTR::set_has_curlev() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GC_SYN_ATTR::clear_has_curlev() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GC_SYN_ATTR::clear_curlev() {
  curlev_ = 0;
  clear_has_curlev();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curlev() const {
  return curlev_;
}
inline void GC_SYN_ATTR::set_curlev(::google::protobuf::int32 value) {
  set_has_curlev();
  curlev_ = value;
}

// optional int32 CurExp = 9;
inline bool GC_SYN_ATTR::has_curexp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GC_SYN_ATTR::set_has_curexp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GC_SYN_ATTR::clear_has_curexp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GC_SYN_ATTR::clear_curexp() {
  curexp_ = 0;
  clear_has_curexp();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curexp() const {
  return curexp_;
}
inline void GC_SYN_ATTR::set_curexp(::google::protobuf::int32 value) {
  set_has_curexp();
  curexp_ = value;
}

// optional int32 CurMoney = 10;
inline bool GC_SYN_ATTR::has_curmoney() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GC_SYN_ATTR::set_has_curmoney() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GC_SYN_ATTR::clear_has_curmoney() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GC_SYN_ATTR::clear_curmoney() {
  curmoney_ = 0;
  clear_has_curmoney();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curmoney() const {
  return curmoney_;
}
inline void GC_SYN_ATTR::set_curmoney(::google::protobuf::int32 value) {
  set_has_curmoney();
  curmoney_ = value;
}

// optional int32 CurYuanBao = 11;
inline bool GC_SYN_ATTR::has_curyuanbao() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GC_SYN_ATTR::set_has_curyuanbao() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GC_SYN_ATTR::clear_has_curyuanbao() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GC_SYN_ATTR::clear_curyuanbao() {
  curyuanbao_ = 0;
  clear_has_curyuanbao();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curyuanbao() const {
  return curyuanbao_;
}
inline void GC_SYN_ATTR::set_curyuanbao(::google::protobuf::int32 value) {
  set_has_curyuanbao();
  curyuanbao_ = value;
}

// optional int32 CurBDYuanBao = 12;
inline bool GC_SYN_ATTR::has_curbdyuanbao() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GC_SYN_ATTR::set_has_curbdyuanbao() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GC_SYN_ATTR::clear_has_curbdyuanbao() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GC_SYN_ATTR::clear_curbdyuanbao() {
  curbdyuanbao_ = 0;
  clear_has_curbdyuanbao();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curbdyuanbao() const {
  return curbdyuanbao_;
}
inline void GC_SYN_ATTR::set_curbdyuanbao(::google::protobuf::int32 value) {
  set_has_curbdyuanbao();
  curbdyuanbao_ = value;
}

// optional int32 CurZhenQi = 13;
inline bool GC_SYN_ATTR::has_curzhenqi() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GC_SYN_ATTR::set_has_curzhenqi() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GC_SYN_ATTR::clear_has_curzhenqi() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GC_SYN_ATTR::clear_curzhenqi() {
  curzhenqi_ = 0;
  clear_has_curzhenqi();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::curzhenqi() const {
  return curzhenqi_;
}
inline void GC_SYN_ATTR::set_curzhenqi(::google::protobuf::int32 value) {
  set_has_curzhenqi();
  curzhenqi_ = value;
}

// optional int32 isInCombat = 14;
inline bool GC_SYN_ATTR::has_isincombat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GC_SYN_ATTR::set_has_isincombat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GC_SYN_ATTR::clear_has_isincombat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GC_SYN_ATTR::clear_isincombat() {
  isincombat_ = 0;
  clear_has_isincombat();
}
inline ::google::protobuf::int32 GC_SYN_ATTR::isincombat() const {
  return isincombat_;
}
inline void GC_SYN_ATTR::set_isincombat(::google::protobuf::int32 value) {
  set_has_isincombat();
  isincombat_ = value;
}

// -------------------------------------------------------------------

// GC_SYNC_COMMONDATA

// repeated int32 nIndex = 1;
inline int GC_SYNC_COMMONDATA::nindex_size() const {
  return nindex_.size();
}
inline void GC_SYNC_COMMONDATA::clear_nindex() {
  nindex_.Clear();
}
inline ::google::protobuf::int32 GC_SYNC_COMMONDATA::nindex(int index) const {
  return nindex_.Get(index);
}
inline void GC_SYNC_COMMONDATA::set_nindex(int index, ::google::protobuf::int32 value) {
  nindex_.Set(index, value);
}
inline void GC_SYNC_COMMONDATA::add_nindex(::google::protobuf::int32 value) {
  nindex_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_SYNC_COMMONDATA::nindex() const {
  return nindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_SYNC_COMMONDATA::mutable_nindex() {
  return &nindex_;
}

// repeated int32 nValue = 2;
inline int GC_SYNC_COMMONDATA::nvalue_size() const {
  return nvalue_.size();
}
inline void GC_SYNC_COMMONDATA::clear_nvalue() {
  nvalue_.Clear();
}
inline ::google::protobuf::int32 GC_SYNC_COMMONDATA::nvalue(int index) const {
  return nvalue_.Get(index);
}
inline void GC_SYNC_COMMONDATA::set_nvalue(int index, ::google::protobuf::int32 value) {
  nvalue_.Set(index, value);
}
inline void GC_SYNC_COMMONDATA::add_nvalue(::google::protobuf::int32 value) {
  nvalue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_SYNC_COMMONDATA::nvalue() const {
  return nvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_SYNC_COMMONDATA::mutable_nvalue() {
  return &nvalue_;
}

// -------------------------------------------------------------------

// GC_SYNC_COMMONFLAG

// repeated int32 nIndex = 1;
inline int GC_SYNC_COMMONFLAG::nindex_size() const {
  return nindex_.size();
}
inline void GC_SYNC_COMMONFLAG::clear_nindex() {
  nindex_.Clear();
}
inline ::google::protobuf::int32 GC_SYNC_COMMONFLAG::nindex(int index) const {
  return nindex_.Get(index);
}
inline void GC_SYNC_COMMONFLAG::set_nindex(int index, ::google::protobuf::int32 value) {
  nindex_.Set(index, value);
}
inline void GC_SYNC_COMMONFLAG::add_nindex(::google::protobuf::int32 value) {
  nindex_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_SYNC_COMMONFLAG::nindex() const {
  return nindex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_SYNC_COMMONFLAG::mutable_nindex() {
  return &nindex_;
}

// repeated int32 nValue = 2;
inline int GC_SYNC_COMMONFLAG::nvalue_size() const {
  return nvalue_.size();
}
inline void GC_SYNC_COMMONFLAG::clear_nvalue() {
  nvalue_.Clear();
}
inline ::google::protobuf::int32 GC_SYNC_COMMONFLAG::nvalue(int index) const {
  return nvalue_.Get(index);
}
inline void GC_SYNC_COMMONFLAG::set_nvalue(int index, ::google::protobuf::int32 value) {
  nvalue_.Set(index, value);
}
inline void GC_SYNC_COMMONFLAG::add_nvalue(::google::protobuf::int32 value) {
  nvalue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GC_SYNC_COMMONFLAG::nvalue() const {
  return nvalue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GC_SYNC_COMMONFLAG::mutable_nvalue() {
  return &nvalue_;
}

// -------------------------------------------------------------------

// CG_ASK_SETCOMMONFLAG

// required int32 nBits = 1;
inline bool CG_ASK_SETCOMMONFLAG::has_nbits() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CG_ASK_SETCOMMONFLAG::set_has_nbits() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CG_ASK_SETCOMMONFLAG::clear_has_nbits() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CG_ASK_SETCOMMONFLAG::clear_nbits() {
  nbits_ = 0;
  clear_has_nbits();
}
inline ::google::protobuf::int32 CG_ASK_SETCOMMONFLAG::nbits() const {
  return nbits_;
}
inline void CG_ASK_SETCOMMONFLAG::set_nbits(::google::protobuf::int32 value) {
  set_has_nbits();
  nbits_ = value;
}

// required int32 nFlag = 2;
inline bool CG_ASK_SETCOMMONFLAG::has_nflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CG_ASK_SETCOMMONFLAG::set_has_nflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CG_ASK_SETCOMMONFLAG::clear_has_nflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CG_ASK_SETCOMMONFLAG::clear_nflag() {
  nflag_ = 0;
  clear_has_nflag();
}
inline ::google::protobuf::int32 CG_ASK_SETCOMMONFLAG::nflag() const {
  return nflag_;
}
inline void CG_ASK_SETCOMMONFLAG::set_nflag(::google::protobuf::int32 value) {
  set_has_nflag();
  nflag_ = value;
}

// -------------------------------------------------------------------

// GC_ASK_COMMONFLAG_RET

// required int32 nBits = 1;
inline bool GC_ASK_COMMONFLAG_RET::has_nbits() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GC_ASK_COMMONFLAG_RET::set_has_nbits() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GC_ASK_COMMONFLAG_RET::clear_has_nbits() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GC_ASK_COMMONFLAG_RET::clear_nbits() {
  nbits_ = 0;
  clear_has_nbits();
}
inline ::google::protobuf::int32 GC_ASK_COMMONFLAG_RET::nbits() const {
  return nbits_;
}
inline void GC_ASK_COMMONFLAG_RET::set_nbits(::google::protobuf::int32 value) {
  set_has_nbits();
  nbits_ = value;
}

// required int32 nFlag = 2;
inline bool GC_ASK_COMMONFLAG_RET::has_nflag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GC_ASK_COMMONFLAG_RET::set_has_nflag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GC_ASK_COMMONFLAG_RET::clear_has_nflag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GC_ASK_COMMONFLAG_RET::clear_nflag() {
  nflag_ = 0;
  clear_has_nflag();
}
inline ::google::protobuf::int32 GC_ASK_COMMONFLAG_RET::nflag() const {
  return nflag_;
}
inline void GC_ASK_COMMONFLAG_RET::set_nflag(::google::protobuf::int32 value) {
  set_has_nflag();
  nflag_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CG_LOGIN_VALIDATETYPE>() {
  return ::CG_LOGIN_VALIDATETYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_LOGIN_RET_LOGINRESULT>() {
  return ::GC_LOGIN_RET_LOGINRESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_LOGIN_RET_VALIDATERESULT>() {
  return ::GC_LOGIN_RET_VALIDATERESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_LOGIN_QUEUE_STATUS_QUEUESTATUS>() {
  return ::GC_LOGIN_QUEUE_STATUS_QUEUESTATUS_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_CREATEROLE_RET_CREATEROLE_RESULT>() {
  return ::GC_CREATEROLE_RET_CREATEROLE_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GC_SELECTROLE_RET_SELECTROLE_RESULT>() {
  return ::GC_SELECTROLE_RET_SELECTROLE_RESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CG_REQ_CHANGE_SCENE_CHANGETYPE>() {
  return ::CG_REQ_CHANGE_SCENE_CHANGETYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PBMessage_2eproto__INCLUDED
